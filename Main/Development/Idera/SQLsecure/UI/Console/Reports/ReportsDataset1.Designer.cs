//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.42
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace Idera.SQLsecure.UI.Console.Reports {
    using System;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [Serializable()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [System.Xml.Serialization.XmlRootAttribute("ReportsDataset")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class ReportsDataset : System.Data.DataSet {
        
        private isp_sqlsecure_report_getguestenabledserversDataTable tableisp_sqlsecure_report_getguestenabledservers;
        
        private isp_sqlsecure_report_getauditedinstancesDataTable tableisp_sqlsecure_report_getauditedinstances;
        
        private isp_sqlsecure_report_getserveraccessDataTable tableisp_sqlsecure_report_getserveraccess;
        
        private isp_sqlsecure_report_authenticationDataTable tableisp_sqlsecure_report_authentication;
        
        private isp_sqlsecure_report_checkwellknowngroupDataTable tableisp_sqlsecure_report_checkwellknowngroup;
        
        private isp_sqlsecure_report_sysadmin_administratorDataTable tableisp_sqlsecure_report_sysadmin_administrator;
        
        private isp_sqlsecure_report_orphanedloginsDataTable tableisp_sqlsecure_report_orphanedlogins;
        
        private isp_sqlsecure_report_dbuserfixedroleDataTable tableisp_sqlsecure_report_dbuserfixedrole;
        
        private isp_sqlsecure_report_checkcmdshellDataTable tableisp_sqlsecure_report_checkcmdshell;
        
        private isp_sqlsecure_report_getuserinfoDataTable tableisp_sqlsecure_report_getuserinfo;
        
        private isp_sqlsecure_report_checkdbchainingDataTable tableisp_sqlsecure_report_checkdbchaining;
        
        private isp_sqlsecure_report_checksystemstoredproceduresDataTable tableisp_sqlsecure_report_checksystemstoredprocedures;
        
        private isp_sqlsecure_report_checkxpmailDataTable tableisp_sqlsecure_report_checkxpmail;
        
        private isp_sqlsecure_report_getauditfiltersDataTable tableisp_sqlsecure_report_getauditfilters;
        
        private isp_sqlsecure_report_getuserpermissionsDataTable tableisp_sqlsecure_report_getuserpermissions;
        
        private isp_sqlsecure_report_getuserdatabasepermissionsDataTable tableisp_sqlsecure_report_getuserdatabasepermissions;
        
        private System.Data.SchemaSerializationMode _schemaSerializationMode = System.Data.SchemaSerializationMode.IncludeSchema;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public ReportsDataset() {
            this.BeginInit();
            this.InitClass();
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected ReportsDataset(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == System.Data.SchemaSerializationMode.IncludeSchema)) {
                System.Data.DataSet ds = new System.Data.DataSet();
                ds.ReadXmlSchema(new System.Xml.XmlTextReader(new System.IO.StringReader(strSchema)));
                if ((ds.Tables["isp_sqlsecure_report_getguestenabledservers"] != null)) {
                    base.Tables.Add(new isp_sqlsecure_report_getguestenabledserversDataTable(ds.Tables["isp_sqlsecure_report_getguestenabledservers"]));
                }
                if ((ds.Tables["isp_sqlsecure_report_getauditedinstances"] != null)) {
                    base.Tables.Add(new isp_sqlsecure_report_getauditedinstancesDataTable(ds.Tables["isp_sqlsecure_report_getauditedinstances"]));
                }
                if ((ds.Tables["isp_sqlsecure_report_getserveraccess"] != null)) {
                    base.Tables.Add(new isp_sqlsecure_report_getserveraccessDataTable(ds.Tables["isp_sqlsecure_report_getserveraccess"]));
                }
                if ((ds.Tables["isp_sqlsecure_report_authentication"] != null)) {
                    base.Tables.Add(new isp_sqlsecure_report_authenticationDataTable(ds.Tables["isp_sqlsecure_report_authentication"]));
                }
                if ((ds.Tables["isp_sqlsecure_report_checkwellknowngroup"] != null)) {
                    base.Tables.Add(new isp_sqlsecure_report_checkwellknowngroupDataTable(ds.Tables["isp_sqlsecure_report_checkwellknowngroup"]));
                }
                if ((ds.Tables["isp_sqlsecure_report_sysadmin_administrator"] != null)) {
                    base.Tables.Add(new isp_sqlsecure_report_sysadmin_administratorDataTable(ds.Tables["isp_sqlsecure_report_sysadmin_administrator"]));
                }
                if ((ds.Tables["isp_sqlsecure_report_orphanedlogins"] != null)) {
                    base.Tables.Add(new isp_sqlsecure_report_orphanedloginsDataTable(ds.Tables["isp_sqlsecure_report_orphanedlogins"]));
                }
                if ((ds.Tables["isp_sqlsecure_report_dbuserfixedrole"] != null)) {
                    base.Tables.Add(new isp_sqlsecure_report_dbuserfixedroleDataTable(ds.Tables["isp_sqlsecure_report_dbuserfixedrole"]));
                }
                if ((ds.Tables["isp_sqlsecure_report_checkcmdshell"] != null)) {
                    base.Tables.Add(new isp_sqlsecure_report_checkcmdshellDataTable(ds.Tables["isp_sqlsecure_report_checkcmdshell"]));
                }
                if ((ds.Tables["isp_sqlsecure_report_getuserinfo"] != null)) {
                    base.Tables.Add(new isp_sqlsecure_report_getuserinfoDataTable(ds.Tables["isp_sqlsecure_report_getuserinfo"]));
                }
                if ((ds.Tables["isp_sqlsecure_report_checkdbchaining"] != null)) {
                    base.Tables.Add(new isp_sqlsecure_report_checkdbchainingDataTable(ds.Tables["isp_sqlsecure_report_checkdbchaining"]));
                }
                if ((ds.Tables["isp_sqlsecure_report_checksystemstoredprocedures"] != null)) {
                    base.Tables.Add(new isp_sqlsecure_report_checksystemstoredproceduresDataTable(ds.Tables["isp_sqlsecure_report_checksystemstoredprocedures"]));
                }
                if ((ds.Tables["isp_sqlsecure_report_checkxpmail"] != null)) {
                    base.Tables.Add(new isp_sqlsecure_report_checkxpmailDataTable(ds.Tables["isp_sqlsecure_report_checkxpmail"]));
                }
                if ((ds.Tables["isp_sqlsecure_report_getauditfilters"] != null)) {
                    base.Tables.Add(new isp_sqlsecure_report_getauditfiltersDataTable(ds.Tables["isp_sqlsecure_report_getauditfilters"]));
                }
                if ((ds.Tables["isp_sqlsecure_report_getuserpermissions"] != null)) {
                    base.Tables.Add(new isp_sqlsecure_report_getuserpermissionsDataTable(ds.Tables["isp_sqlsecure_report_getuserpermissions"]));
                }
                if ((ds.Tables["isp_sqlsecure_report_getuserdatabasepermissions"] != null)) {
                    base.Tables.Add(new isp_sqlsecure_report_getuserdatabasepermissionsDataTable(ds.Tables["isp_sqlsecure_report_getuserdatabasepermissions"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new System.Xml.XmlTextReader(new System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public isp_sqlsecure_report_getguestenabledserversDataTable isp_sqlsecure_report_getguestenabledservers {
            get {
                return this.tableisp_sqlsecure_report_getguestenabledservers;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public isp_sqlsecure_report_getauditedinstancesDataTable isp_sqlsecure_report_getauditedinstances {
            get {
                return this.tableisp_sqlsecure_report_getauditedinstances;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public isp_sqlsecure_report_getserveraccessDataTable isp_sqlsecure_report_getserveraccess {
            get {
                return this.tableisp_sqlsecure_report_getserveraccess;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public isp_sqlsecure_report_authenticationDataTable isp_sqlsecure_report_authentication {
            get {
                return this.tableisp_sqlsecure_report_authentication;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public isp_sqlsecure_report_checkwellknowngroupDataTable isp_sqlsecure_report_checkwellknowngroup {
            get {
                return this.tableisp_sqlsecure_report_checkwellknowngroup;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public isp_sqlsecure_report_sysadmin_administratorDataTable isp_sqlsecure_report_sysadmin_administrator {
            get {
                return this.tableisp_sqlsecure_report_sysadmin_administrator;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public isp_sqlsecure_report_orphanedloginsDataTable isp_sqlsecure_report_orphanedlogins {
            get {
                return this.tableisp_sqlsecure_report_orphanedlogins;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public isp_sqlsecure_report_dbuserfixedroleDataTable isp_sqlsecure_report_dbuserfixedrole {
            get {
                return this.tableisp_sqlsecure_report_dbuserfixedrole;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public isp_sqlsecure_report_checkcmdshellDataTable isp_sqlsecure_report_checkcmdshell {
            get {
                return this.tableisp_sqlsecure_report_checkcmdshell;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public isp_sqlsecure_report_getuserinfoDataTable isp_sqlsecure_report_getuserinfo {
            get {
                return this.tableisp_sqlsecure_report_getuserinfo;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public isp_sqlsecure_report_checkdbchainingDataTable isp_sqlsecure_report_checkdbchaining {
            get {
                return this.tableisp_sqlsecure_report_checkdbchaining;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public isp_sqlsecure_report_checksystemstoredproceduresDataTable isp_sqlsecure_report_checksystemstoredprocedures {
            get {
                return this.tableisp_sqlsecure_report_checksystemstoredprocedures;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public isp_sqlsecure_report_checkxpmailDataTable isp_sqlsecure_report_checkxpmail {
            get {
                return this.tableisp_sqlsecure_report_checkxpmail;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public isp_sqlsecure_report_getauditfiltersDataTable isp_sqlsecure_report_getauditfilters {
            get {
                return this.tableisp_sqlsecure_report_getauditfilters;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public isp_sqlsecure_report_getuserpermissionsDataTable isp_sqlsecure_report_getuserpermissions {
            get {
                return this.tableisp_sqlsecure_report_getuserpermissions;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public isp_sqlsecure_report_getuserdatabasepermissionsDataTable isp_sqlsecure_report_getuserdatabasepermissions {
            get {
                return this.tableisp_sqlsecure_report_getuserdatabasepermissions;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.BrowsableAttribute(true)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override System.Data.DataSet Clone() {
            ReportsDataset cln = ((ReportsDataset)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                System.Data.DataSet ds = new System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["isp_sqlsecure_report_getguestenabledservers"] != null)) {
                    base.Tables.Add(new isp_sqlsecure_report_getguestenabledserversDataTable(ds.Tables["isp_sqlsecure_report_getguestenabledservers"]));
                }
                if ((ds.Tables["isp_sqlsecure_report_getauditedinstances"] != null)) {
                    base.Tables.Add(new isp_sqlsecure_report_getauditedinstancesDataTable(ds.Tables["isp_sqlsecure_report_getauditedinstances"]));
                }
                if ((ds.Tables["isp_sqlsecure_report_getserveraccess"] != null)) {
                    base.Tables.Add(new isp_sqlsecure_report_getserveraccessDataTable(ds.Tables["isp_sqlsecure_report_getserveraccess"]));
                }
                if ((ds.Tables["isp_sqlsecure_report_authentication"] != null)) {
                    base.Tables.Add(new isp_sqlsecure_report_authenticationDataTable(ds.Tables["isp_sqlsecure_report_authentication"]));
                }
                if ((ds.Tables["isp_sqlsecure_report_checkwellknowngroup"] != null)) {
                    base.Tables.Add(new isp_sqlsecure_report_checkwellknowngroupDataTable(ds.Tables["isp_sqlsecure_report_checkwellknowngroup"]));
                }
                if ((ds.Tables["isp_sqlsecure_report_sysadmin_administrator"] != null)) {
                    base.Tables.Add(new isp_sqlsecure_report_sysadmin_administratorDataTable(ds.Tables["isp_sqlsecure_report_sysadmin_administrator"]));
                }
                if ((ds.Tables["isp_sqlsecure_report_orphanedlogins"] != null)) {
                    base.Tables.Add(new isp_sqlsecure_report_orphanedloginsDataTable(ds.Tables["isp_sqlsecure_report_orphanedlogins"]));
                }
                if ((ds.Tables["isp_sqlsecure_report_dbuserfixedrole"] != null)) {
                    base.Tables.Add(new isp_sqlsecure_report_dbuserfixedroleDataTable(ds.Tables["isp_sqlsecure_report_dbuserfixedrole"]));
                }
                if ((ds.Tables["isp_sqlsecure_report_checkcmdshell"] != null)) {
                    base.Tables.Add(new isp_sqlsecure_report_checkcmdshellDataTable(ds.Tables["isp_sqlsecure_report_checkcmdshell"]));
                }
                if ((ds.Tables["isp_sqlsecure_report_getuserinfo"] != null)) {
                    base.Tables.Add(new isp_sqlsecure_report_getuserinfoDataTable(ds.Tables["isp_sqlsecure_report_getuserinfo"]));
                }
                if ((ds.Tables["isp_sqlsecure_report_checkdbchaining"] != null)) {
                    base.Tables.Add(new isp_sqlsecure_report_checkdbchainingDataTable(ds.Tables["isp_sqlsecure_report_checkdbchaining"]));
                }
                if ((ds.Tables["isp_sqlsecure_report_checksystemstoredprocedures"] != null)) {
                    base.Tables.Add(new isp_sqlsecure_report_checksystemstoredproceduresDataTable(ds.Tables["isp_sqlsecure_report_checksystemstoredprocedures"]));
                }
                if ((ds.Tables["isp_sqlsecure_report_checkxpmail"] != null)) {
                    base.Tables.Add(new isp_sqlsecure_report_checkxpmailDataTable(ds.Tables["isp_sqlsecure_report_checkxpmail"]));
                }
                if ((ds.Tables["isp_sqlsecure_report_getauditfilters"] != null)) {
                    base.Tables.Add(new isp_sqlsecure_report_getauditfiltersDataTable(ds.Tables["isp_sqlsecure_report_getauditfilters"]));
                }
                if ((ds.Tables["isp_sqlsecure_report_getuserpermissions"] != null)) {
                    base.Tables.Add(new isp_sqlsecure_report_getuserpermissionsDataTable(ds.Tables["isp_sqlsecure_report_getuserpermissions"]));
                }
                if ((ds.Tables["isp_sqlsecure_report_getuserdatabasepermissions"] != null)) {
                    base.Tables.Add(new isp_sqlsecure_report_getuserdatabasepermissionsDataTable(ds.Tables["isp_sqlsecure_report_getuserdatabasepermissions"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            System.IO.MemoryStream stream = new System.IO.MemoryStream();
            this.WriteXmlSchema(new System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return System.Xml.Schema.XmlSchema.Read(new System.Xml.XmlTextReader(stream), null);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableisp_sqlsecure_report_getguestenabledservers = ((isp_sqlsecure_report_getguestenabledserversDataTable)(base.Tables["isp_sqlsecure_report_getguestenabledservers"]));
            if ((initTable == true)) {
                if ((this.tableisp_sqlsecure_report_getguestenabledservers != null)) {
                    this.tableisp_sqlsecure_report_getguestenabledservers.InitVars();
                }
            }
            this.tableisp_sqlsecure_report_getauditedinstances = ((isp_sqlsecure_report_getauditedinstancesDataTable)(base.Tables["isp_sqlsecure_report_getauditedinstances"]));
            if ((initTable == true)) {
                if ((this.tableisp_sqlsecure_report_getauditedinstances != null)) {
                    this.tableisp_sqlsecure_report_getauditedinstances.InitVars();
                }
            }
            this.tableisp_sqlsecure_report_getserveraccess = ((isp_sqlsecure_report_getserveraccessDataTable)(base.Tables["isp_sqlsecure_report_getserveraccess"]));
            if ((initTable == true)) {
                if ((this.tableisp_sqlsecure_report_getserveraccess != null)) {
                    this.tableisp_sqlsecure_report_getserveraccess.InitVars();
                }
            }
            this.tableisp_sqlsecure_report_authentication = ((isp_sqlsecure_report_authenticationDataTable)(base.Tables["isp_sqlsecure_report_authentication"]));
            if ((initTable == true)) {
                if ((this.tableisp_sqlsecure_report_authentication != null)) {
                    this.tableisp_sqlsecure_report_authentication.InitVars();
                }
            }
            this.tableisp_sqlsecure_report_checkwellknowngroup = ((isp_sqlsecure_report_checkwellknowngroupDataTable)(base.Tables["isp_sqlsecure_report_checkwellknowngroup"]));
            if ((initTable == true)) {
                if ((this.tableisp_sqlsecure_report_checkwellknowngroup != null)) {
                    this.tableisp_sqlsecure_report_checkwellknowngroup.InitVars();
                }
            }
            this.tableisp_sqlsecure_report_sysadmin_administrator = ((isp_sqlsecure_report_sysadmin_administratorDataTable)(base.Tables["isp_sqlsecure_report_sysadmin_administrator"]));
            if ((initTable == true)) {
                if ((this.tableisp_sqlsecure_report_sysadmin_administrator != null)) {
                    this.tableisp_sqlsecure_report_sysadmin_administrator.InitVars();
                }
            }
            this.tableisp_sqlsecure_report_orphanedlogins = ((isp_sqlsecure_report_orphanedloginsDataTable)(base.Tables["isp_sqlsecure_report_orphanedlogins"]));
            if ((initTable == true)) {
                if ((this.tableisp_sqlsecure_report_orphanedlogins != null)) {
                    this.tableisp_sqlsecure_report_orphanedlogins.InitVars();
                }
            }
            this.tableisp_sqlsecure_report_dbuserfixedrole = ((isp_sqlsecure_report_dbuserfixedroleDataTable)(base.Tables["isp_sqlsecure_report_dbuserfixedrole"]));
            if ((initTable == true)) {
                if ((this.tableisp_sqlsecure_report_dbuserfixedrole != null)) {
                    this.tableisp_sqlsecure_report_dbuserfixedrole.InitVars();
                }
            }
            this.tableisp_sqlsecure_report_checkcmdshell = ((isp_sqlsecure_report_checkcmdshellDataTable)(base.Tables["isp_sqlsecure_report_checkcmdshell"]));
            if ((initTable == true)) {
                if ((this.tableisp_sqlsecure_report_checkcmdshell != null)) {
                    this.tableisp_sqlsecure_report_checkcmdshell.InitVars();
                }
            }
            this.tableisp_sqlsecure_report_getuserinfo = ((isp_sqlsecure_report_getuserinfoDataTable)(base.Tables["isp_sqlsecure_report_getuserinfo"]));
            if ((initTable == true)) {
                if ((this.tableisp_sqlsecure_report_getuserinfo != null)) {
                    this.tableisp_sqlsecure_report_getuserinfo.InitVars();
                }
            }
            this.tableisp_sqlsecure_report_checkdbchaining = ((isp_sqlsecure_report_checkdbchainingDataTable)(base.Tables["isp_sqlsecure_report_checkdbchaining"]));
            if ((initTable == true)) {
                if ((this.tableisp_sqlsecure_report_checkdbchaining != null)) {
                    this.tableisp_sqlsecure_report_checkdbchaining.InitVars();
                }
            }
            this.tableisp_sqlsecure_report_checksystemstoredprocedures = ((isp_sqlsecure_report_checksystemstoredproceduresDataTable)(base.Tables["isp_sqlsecure_report_checksystemstoredprocedures"]));
            if ((initTable == true)) {
                if ((this.tableisp_sqlsecure_report_checksystemstoredprocedures != null)) {
                    this.tableisp_sqlsecure_report_checksystemstoredprocedures.InitVars();
                }
            }
            this.tableisp_sqlsecure_report_checkxpmail = ((isp_sqlsecure_report_checkxpmailDataTable)(base.Tables["isp_sqlsecure_report_checkxpmail"]));
            if ((initTable == true)) {
                if ((this.tableisp_sqlsecure_report_checkxpmail != null)) {
                    this.tableisp_sqlsecure_report_checkxpmail.InitVars();
                }
            }
            this.tableisp_sqlsecure_report_getauditfilters = ((isp_sqlsecure_report_getauditfiltersDataTable)(base.Tables["isp_sqlsecure_report_getauditfilters"]));
            if ((initTable == true)) {
                if ((this.tableisp_sqlsecure_report_getauditfilters != null)) {
                    this.tableisp_sqlsecure_report_getauditfilters.InitVars();
                }
            }
            this.tableisp_sqlsecure_report_getuserpermissions = ((isp_sqlsecure_report_getuserpermissionsDataTable)(base.Tables["isp_sqlsecure_report_getuserpermissions"]));
            if ((initTable == true)) {
                if ((this.tableisp_sqlsecure_report_getuserpermissions != null)) {
                    this.tableisp_sqlsecure_report_getuserpermissions.InitVars();
                }
            }
            this.tableisp_sqlsecure_report_getuserdatabasepermissions = ((isp_sqlsecure_report_getuserdatabasepermissionsDataTable)(base.Tables["isp_sqlsecure_report_getuserdatabasepermissions"]));
            if ((initTable == true)) {
                if ((this.tableisp_sqlsecure_report_getuserdatabasepermissions != null)) {
                    this.tableisp_sqlsecure_report_getuserdatabasepermissions.InitVars();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "ReportsDataset";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/Reports.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableisp_sqlsecure_report_getguestenabledservers = new isp_sqlsecure_report_getguestenabledserversDataTable();
            base.Tables.Add(this.tableisp_sqlsecure_report_getguestenabledservers);
            this.tableisp_sqlsecure_report_getauditedinstances = new isp_sqlsecure_report_getauditedinstancesDataTable();
            base.Tables.Add(this.tableisp_sqlsecure_report_getauditedinstances);
            this.tableisp_sqlsecure_report_getserveraccess = new isp_sqlsecure_report_getserveraccessDataTable();
            base.Tables.Add(this.tableisp_sqlsecure_report_getserveraccess);
            this.tableisp_sqlsecure_report_authentication = new isp_sqlsecure_report_authenticationDataTable();
            base.Tables.Add(this.tableisp_sqlsecure_report_authentication);
            this.tableisp_sqlsecure_report_checkwellknowngroup = new isp_sqlsecure_report_checkwellknowngroupDataTable();
            base.Tables.Add(this.tableisp_sqlsecure_report_checkwellknowngroup);
            this.tableisp_sqlsecure_report_sysadmin_administrator = new isp_sqlsecure_report_sysadmin_administratorDataTable();
            base.Tables.Add(this.tableisp_sqlsecure_report_sysadmin_administrator);
            this.tableisp_sqlsecure_report_orphanedlogins = new isp_sqlsecure_report_orphanedloginsDataTable();
            base.Tables.Add(this.tableisp_sqlsecure_report_orphanedlogins);
            this.tableisp_sqlsecure_report_dbuserfixedrole = new isp_sqlsecure_report_dbuserfixedroleDataTable();
            base.Tables.Add(this.tableisp_sqlsecure_report_dbuserfixedrole);
            this.tableisp_sqlsecure_report_checkcmdshell = new isp_sqlsecure_report_checkcmdshellDataTable();
            base.Tables.Add(this.tableisp_sqlsecure_report_checkcmdshell);
            this.tableisp_sqlsecure_report_getuserinfo = new isp_sqlsecure_report_getuserinfoDataTable();
            base.Tables.Add(this.tableisp_sqlsecure_report_getuserinfo);
            this.tableisp_sqlsecure_report_checkdbchaining = new isp_sqlsecure_report_checkdbchainingDataTable();
            base.Tables.Add(this.tableisp_sqlsecure_report_checkdbchaining);
            this.tableisp_sqlsecure_report_checksystemstoredprocedures = new isp_sqlsecure_report_checksystemstoredproceduresDataTable();
            base.Tables.Add(this.tableisp_sqlsecure_report_checksystemstoredprocedures);
            this.tableisp_sqlsecure_report_checkxpmail = new isp_sqlsecure_report_checkxpmailDataTable();
            base.Tables.Add(this.tableisp_sqlsecure_report_checkxpmail);
            this.tableisp_sqlsecure_report_getauditfilters = new isp_sqlsecure_report_getauditfiltersDataTable();
            base.Tables.Add(this.tableisp_sqlsecure_report_getauditfilters);
            this.tableisp_sqlsecure_report_getuserpermissions = new isp_sqlsecure_report_getuserpermissionsDataTable();
            base.Tables.Add(this.tableisp_sqlsecure_report_getuserpermissions);
            this.tableisp_sqlsecure_report_getuserdatabasepermissions = new isp_sqlsecure_report_getuserdatabasepermissionsDataTable();
            base.Tables.Add(this.tableisp_sqlsecure_report_getuserdatabasepermissions);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeisp_sqlsecure_report_getguestenabledservers() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeisp_sqlsecure_report_getauditedinstances() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeisp_sqlsecure_report_getserveraccess() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeisp_sqlsecure_report_authentication() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeisp_sqlsecure_report_checkwellknowngroup() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeisp_sqlsecure_report_sysadmin_administrator() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeisp_sqlsecure_report_orphanedlogins() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeisp_sqlsecure_report_dbuserfixedrole() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeisp_sqlsecure_report_checkcmdshell() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeisp_sqlsecure_report_getuserinfo() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeisp_sqlsecure_report_checkdbchaining() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeisp_sqlsecure_report_checksystemstoredprocedures() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeisp_sqlsecure_report_checkxpmail() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeisp_sqlsecure_report_getauditfilters() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeisp_sqlsecure_report_getuserpermissions() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeisp_sqlsecure_report_getuserdatabasepermissions() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(System.Xml.Schema.XmlSchemaSet xs) {
            ReportsDataset ds = new ReportsDataset();
            System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
            System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
            xs.Add(ds.GetSchemaSerializable());
            System.Xml.Schema.XmlSchemaAny any = new System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            return type;
        }
        
        public delegate void isp_sqlsecure_report_getguestenabledserversRowChangeEventHandler(object sender, isp_sqlsecure_report_getguestenabledserversRowChangeEvent e);
        
        public delegate void isp_sqlsecure_report_getauditedinstancesRowChangeEventHandler(object sender, isp_sqlsecure_report_getauditedinstancesRowChangeEvent e);
        
        public delegate void isp_sqlsecure_report_getserveraccessRowChangeEventHandler(object sender, isp_sqlsecure_report_getserveraccessRowChangeEvent e);
        
        public delegate void isp_sqlsecure_report_authenticationRowChangeEventHandler(object sender, isp_sqlsecure_report_authenticationRowChangeEvent e);
        
        public delegate void isp_sqlsecure_report_checkwellknowngroupRowChangeEventHandler(object sender, isp_sqlsecure_report_checkwellknowngroupRowChangeEvent e);
        
        public delegate void isp_sqlsecure_report_sysadmin_administratorRowChangeEventHandler(object sender, isp_sqlsecure_report_sysadmin_administratorRowChangeEvent e);
        
        public delegate void isp_sqlsecure_report_orphanedloginsRowChangeEventHandler(object sender, isp_sqlsecure_report_orphanedloginsRowChangeEvent e);
        
        public delegate void isp_sqlsecure_report_dbuserfixedroleRowChangeEventHandler(object sender, isp_sqlsecure_report_dbuserfixedroleRowChangeEvent e);
        
        public delegate void isp_sqlsecure_report_checkcmdshellRowChangeEventHandler(object sender, isp_sqlsecure_report_checkcmdshellRowChangeEvent e);
        
        public delegate void isp_sqlsecure_report_getuserinfoRowChangeEventHandler(object sender, isp_sqlsecure_report_getuserinfoRowChangeEvent e);
        
        public delegate void isp_sqlsecure_report_checkdbchainingRowChangeEventHandler(object sender, isp_sqlsecure_report_checkdbchainingRowChangeEvent e);
        
        public delegate void isp_sqlsecure_report_checksystemstoredproceduresRowChangeEventHandler(object sender, isp_sqlsecure_report_checksystemstoredproceduresRowChangeEvent e);
        
        public delegate void isp_sqlsecure_report_checkxpmailRowChangeEventHandler(object sender, isp_sqlsecure_report_checkxpmailRowChangeEvent e);
        
        public delegate void isp_sqlsecure_report_getauditfiltersRowChangeEventHandler(object sender, isp_sqlsecure_report_getauditfiltersRowChangeEvent e);
        
        public delegate void isp_sqlsecure_report_getuserpermissionsRowChangeEventHandler(object sender, isp_sqlsecure_report_getuserpermissionsRowChangeEvent e);
        
        public delegate void isp_sqlsecure_report_getuserdatabasepermissionsRowChangeEventHandler(object sender, isp_sqlsecure_report_getuserdatabasepermissionsRowChangeEvent e);
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class isp_sqlsecure_report_getguestenabledserversDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnconnectionname;
            
            private System.Data.DataColumn columndatabasename;
            
            private System.Data.DataColumn columnowner;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public isp_sqlsecure_report_getguestenabledserversDataTable() {
                this.TableName = "isp_sqlsecure_report_getguestenabledservers";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal isp_sqlsecure_report_getguestenabledserversDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected isp_sqlsecure_report_getguestenabledserversDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn connectionnameColumn {
                get {
                    return this.columnconnectionname;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn databasenameColumn {
                get {
                    return this.columndatabasename;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ownerColumn {
                get {
                    return this.columnowner;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public isp_sqlsecure_report_getguestenabledserversRow this[int index] {
                get {
                    return ((isp_sqlsecure_report_getguestenabledserversRow)(this.Rows[index]));
                }
            }
            
            public event isp_sqlsecure_report_getguestenabledserversRowChangeEventHandler isp_sqlsecure_report_getguestenabledserversRowChanging;
            
            public event isp_sqlsecure_report_getguestenabledserversRowChangeEventHandler isp_sqlsecure_report_getguestenabledserversRowChanged;
            
            public event isp_sqlsecure_report_getguestenabledserversRowChangeEventHandler isp_sqlsecure_report_getguestenabledserversRowDeleting;
            
            public event isp_sqlsecure_report_getguestenabledserversRowChangeEventHandler isp_sqlsecure_report_getguestenabledserversRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addisp_sqlsecure_report_getguestenabledserversRow(isp_sqlsecure_report_getguestenabledserversRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public isp_sqlsecure_report_getguestenabledserversRow Addisp_sqlsecure_report_getguestenabledserversRow(string connectionname, string databasename, string owner) {
                isp_sqlsecure_report_getguestenabledserversRow rowisp_sqlsecure_report_getguestenabledserversRow = ((isp_sqlsecure_report_getguestenabledserversRow)(this.NewRow()));
                rowisp_sqlsecure_report_getguestenabledserversRow.ItemArray = new object[] {
                        connectionname,
                        databasename,
                        owner};
                this.Rows.Add(rowisp_sqlsecure_report_getguestenabledserversRow);
                return rowisp_sqlsecure_report_getguestenabledserversRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                isp_sqlsecure_report_getguestenabledserversDataTable cln = ((isp_sqlsecure_report_getguestenabledserversDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new isp_sqlsecure_report_getguestenabledserversDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnconnectionname = base.Columns["connectionname"];
                this.columndatabasename = base.Columns["databasename"];
                this.columnowner = base.Columns["owner"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnconnectionname = new System.Data.DataColumn("connectionname", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnconnectionname);
                this.columndatabasename = new System.Data.DataColumn("databasename", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columndatabasename);
                this.columnowner = new System.Data.DataColumn("owner", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnowner);
                this.columnconnectionname.AllowDBNull = false;
                this.columnconnectionname.MaxLength = 400;
                this.columndatabasename.AllowDBNull = false;
                this.columndatabasename.MaxLength = 128;
                this.columnowner.MaxLength = 128;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public isp_sqlsecure_report_getguestenabledserversRow Newisp_sqlsecure_report_getguestenabledserversRow() {
                return ((isp_sqlsecure_report_getguestenabledserversRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new isp_sqlsecure_report_getguestenabledserversRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(isp_sqlsecure_report_getguestenabledserversRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.isp_sqlsecure_report_getguestenabledserversRowChanged != null)) {
                    this.isp_sqlsecure_report_getguestenabledserversRowChanged(this, new isp_sqlsecure_report_getguestenabledserversRowChangeEvent(((isp_sqlsecure_report_getguestenabledserversRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.isp_sqlsecure_report_getguestenabledserversRowChanging != null)) {
                    this.isp_sqlsecure_report_getguestenabledserversRowChanging(this, new isp_sqlsecure_report_getguestenabledserversRowChangeEvent(((isp_sqlsecure_report_getguestenabledserversRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.isp_sqlsecure_report_getguestenabledserversRowDeleted != null)) {
                    this.isp_sqlsecure_report_getguestenabledserversRowDeleted(this, new isp_sqlsecure_report_getguestenabledserversRowChangeEvent(((isp_sqlsecure_report_getguestenabledserversRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.isp_sqlsecure_report_getguestenabledserversRowDeleting != null)) {
                    this.isp_sqlsecure_report_getguestenabledserversRowDeleting(this, new isp_sqlsecure_report_getguestenabledserversRowChangeEvent(((isp_sqlsecure_report_getguestenabledserversRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removeisp_sqlsecure_report_getguestenabledserversRow(isp_sqlsecure_report_getguestenabledserversRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                ReportsDataset ds = new ReportsDataset();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "isp_sqlsecure_report_getguestenabledserversDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class isp_sqlsecure_report_getauditedinstancesDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnservername;
            
            private System.Data.DataColumn columninstancename;
            
            private System.Data.DataColumn columnversion;
            
            private System.Data.DataColumn columnedition;
            
            private System.Data.DataColumn columnauthenticationmode;
            
            private System.Data.DataColumn columnos;
            
            private System.Data.DataColumn columnnumwindowsuser;
            
            private System.Data.DataColumn columnnumwindowsgroup;
            
            private System.Data.DataColumn columnnumsqllogin;
            
            private System.Data.DataColumn columnconnectionname;
            
            private System.Data.DataColumn columnsnapshottime;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public isp_sqlsecure_report_getauditedinstancesDataTable() {
                this.TableName = "isp_sqlsecure_report_getauditedinstances";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal isp_sqlsecure_report_getauditedinstancesDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected isp_sqlsecure_report_getauditedinstancesDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn servernameColumn {
                get {
                    return this.columnservername;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn instancenameColumn {
                get {
                    return this.columninstancename;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn versionColumn {
                get {
                    return this.columnversion;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn editionColumn {
                get {
                    return this.columnedition;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn authenticationmodeColumn {
                get {
                    return this.columnauthenticationmode;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn osColumn {
                get {
                    return this.columnos;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn numwindowsuserColumn {
                get {
                    return this.columnnumwindowsuser;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn numwindowsgroupColumn {
                get {
                    return this.columnnumwindowsgroup;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn numsqlloginColumn {
                get {
                    return this.columnnumsqllogin;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn connectionnameColumn {
                get {
                    return this.columnconnectionname;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn snapshottimeColumn {
                get {
                    return this.columnsnapshottime;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public isp_sqlsecure_report_getauditedinstancesRow this[int index] {
                get {
                    return ((isp_sqlsecure_report_getauditedinstancesRow)(this.Rows[index]));
                }
            }
            
            public event isp_sqlsecure_report_getauditedinstancesRowChangeEventHandler isp_sqlsecure_report_getauditedinstancesRowChanging;
            
            public event isp_sqlsecure_report_getauditedinstancesRowChangeEventHandler isp_sqlsecure_report_getauditedinstancesRowChanged;
            
            public event isp_sqlsecure_report_getauditedinstancesRowChangeEventHandler isp_sqlsecure_report_getauditedinstancesRowDeleting;
            
            public event isp_sqlsecure_report_getauditedinstancesRowChangeEventHandler isp_sqlsecure_report_getauditedinstancesRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addisp_sqlsecure_report_getauditedinstancesRow(isp_sqlsecure_report_getauditedinstancesRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public isp_sqlsecure_report_getauditedinstancesRow Addisp_sqlsecure_report_getauditedinstancesRow(string servername, string instancename, string version, string edition, string authenticationmode, string os, int numwindowsuser, int numwindowsgroup, int numsqllogin, string connectionname, int snapshottime) {
                isp_sqlsecure_report_getauditedinstancesRow rowisp_sqlsecure_report_getauditedinstancesRow = ((isp_sqlsecure_report_getauditedinstancesRow)(this.NewRow()));
                rowisp_sqlsecure_report_getauditedinstancesRow.ItemArray = new object[] {
                        servername,
                        instancename,
                        version,
                        edition,
                        authenticationmode,
                        os,
                        numwindowsuser,
                        numwindowsgroup,
                        numsqllogin,
                        connectionname,
                        snapshottime};
                this.Rows.Add(rowisp_sqlsecure_report_getauditedinstancesRow);
                return rowisp_sqlsecure_report_getauditedinstancesRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                isp_sqlsecure_report_getauditedinstancesDataTable cln = ((isp_sqlsecure_report_getauditedinstancesDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new isp_sqlsecure_report_getauditedinstancesDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnservername = base.Columns["servername"];
                this.columninstancename = base.Columns["instancename"];
                this.columnversion = base.Columns["version"];
                this.columnedition = base.Columns["edition"];
                this.columnauthenticationmode = base.Columns["authenticationmode"];
                this.columnos = base.Columns["os"];
                this.columnnumwindowsuser = base.Columns["numwindowsuser"];
                this.columnnumwindowsgroup = base.Columns["numwindowsgroup"];
                this.columnnumsqllogin = base.Columns["numsqllogin"];
                this.columnconnectionname = base.Columns["connectionname"];
                this.columnsnapshottime = base.Columns["snapshottime"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnservername = new System.Data.DataColumn("servername", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnservername);
                this.columninstancename = new System.Data.DataColumn("instancename", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columninstancename);
                this.columnversion = new System.Data.DataColumn("version", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnversion);
                this.columnedition = new System.Data.DataColumn("edition", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnedition);
                this.columnauthenticationmode = new System.Data.DataColumn("authenticationmode", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnauthenticationmode);
                this.columnos = new System.Data.DataColumn("os", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnos);
                this.columnnumwindowsuser = new System.Data.DataColumn("numwindowsuser", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnnumwindowsuser);
                this.columnnumwindowsgroup = new System.Data.DataColumn("numwindowsgroup", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnnumwindowsgroup);
                this.columnnumsqllogin = new System.Data.DataColumn("numsqllogin", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnnumsqllogin);
                this.columnconnectionname = new System.Data.DataColumn("connectionname", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnconnectionname);
                this.columnsnapshottime = new System.Data.DataColumn("snapshottime", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnsnapshottime);
                this.columnservername.MaxLength = 128;
                this.columninstancename.MaxLength = 128;
                this.columnversion.MaxLength = 256;
                this.columnedition.MaxLength = 256;
                this.columnauthenticationmode.MaxLength = 1;
                this.columnos.MaxLength = 512;
                this.columnconnectionname.ReadOnly = true;
                this.columnsnapshottime.ReadOnly = true;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public isp_sqlsecure_report_getauditedinstancesRow Newisp_sqlsecure_report_getauditedinstancesRow() {
                return ((isp_sqlsecure_report_getauditedinstancesRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new isp_sqlsecure_report_getauditedinstancesRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(isp_sqlsecure_report_getauditedinstancesRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.isp_sqlsecure_report_getauditedinstancesRowChanged != null)) {
                    this.isp_sqlsecure_report_getauditedinstancesRowChanged(this, new isp_sqlsecure_report_getauditedinstancesRowChangeEvent(((isp_sqlsecure_report_getauditedinstancesRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.isp_sqlsecure_report_getauditedinstancesRowChanging != null)) {
                    this.isp_sqlsecure_report_getauditedinstancesRowChanging(this, new isp_sqlsecure_report_getauditedinstancesRowChangeEvent(((isp_sqlsecure_report_getauditedinstancesRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.isp_sqlsecure_report_getauditedinstancesRowDeleted != null)) {
                    this.isp_sqlsecure_report_getauditedinstancesRowDeleted(this, new isp_sqlsecure_report_getauditedinstancesRowChangeEvent(((isp_sqlsecure_report_getauditedinstancesRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.isp_sqlsecure_report_getauditedinstancesRowDeleting != null)) {
                    this.isp_sqlsecure_report_getauditedinstancesRowDeleting(this, new isp_sqlsecure_report_getauditedinstancesRowChangeEvent(((isp_sqlsecure_report_getauditedinstancesRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removeisp_sqlsecure_report_getauditedinstancesRow(isp_sqlsecure_report_getauditedinstancesRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                ReportsDataset ds = new ReportsDataset();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "isp_sqlsecure_report_getauditedinstancesDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class isp_sqlsecure_report_getserveraccessDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnsnapshotid;
            
            private System.Data.DataColumn columnconnectionname;
            
            private System.Data.DataColumn columnlogintype;
            
            private System.Data.DataColumn columnloginname;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public isp_sqlsecure_report_getserveraccessDataTable() {
                this.TableName = "isp_sqlsecure_report_getserveraccess";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal isp_sqlsecure_report_getserveraccessDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected isp_sqlsecure_report_getserveraccessDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn snapshotidColumn {
                get {
                    return this.columnsnapshotid;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn connectionnameColumn {
                get {
                    return this.columnconnectionname;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn logintypeColumn {
                get {
                    return this.columnlogintype;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn loginnameColumn {
                get {
                    return this.columnloginname;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public isp_sqlsecure_report_getserveraccessRow this[int index] {
                get {
                    return ((isp_sqlsecure_report_getserveraccessRow)(this.Rows[index]));
                }
            }
            
            public event isp_sqlsecure_report_getserveraccessRowChangeEventHandler isp_sqlsecure_report_getserveraccessRowChanging;
            
            public event isp_sqlsecure_report_getserveraccessRowChangeEventHandler isp_sqlsecure_report_getserveraccessRowChanged;
            
            public event isp_sqlsecure_report_getserveraccessRowChangeEventHandler isp_sqlsecure_report_getserveraccessRowDeleting;
            
            public event isp_sqlsecure_report_getserveraccessRowChangeEventHandler isp_sqlsecure_report_getserveraccessRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addisp_sqlsecure_report_getserveraccessRow(isp_sqlsecure_report_getserveraccessRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public isp_sqlsecure_report_getserveraccessRow Addisp_sqlsecure_report_getserveraccessRow(int snapshotid, string connectionname, string logintype, string loginname) {
                isp_sqlsecure_report_getserveraccessRow rowisp_sqlsecure_report_getserveraccessRow = ((isp_sqlsecure_report_getserveraccessRow)(this.NewRow()));
                rowisp_sqlsecure_report_getserveraccessRow.ItemArray = new object[] {
                        snapshotid,
                        connectionname,
                        logintype,
                        loginname};
                this.Rows.Add(rowisp_sqlsecure_report_getserveraccessRow);
                return rowisp_sqlsecure_report_getserveraccessRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                isp_sqlsecure_report_getserveraccessDataTable cln = ((isp_sqlsecure_report_getserveraccessDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new isp_sqlsecure_report_getserveraccessDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnsnapshotid = base.Columns["snapshotid"];
                this.columnconnectionname = base.Columns["connectionname"];
                this.columnlogintype = base.Columns["logintype"];
                this.columnloginname = base.Columns["loginname"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnsnapshotid = new System.Data.DataColumn("snapshotid", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnsnapshotid);
                this.columnconnectionname = new System.Data.DataColumn("connectionname", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnconnectionname);
                this.columnlogintype = new System.Data.DataColumn("logintype", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnlogintype);
                this.columnloginname = new System.Data.DataColumn("loginname", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnloginname);
                this.columnsnapshotid.ReadOnly = true;
                this.columnconnectionname.ReadOnly = true;
                this.columnlogintype.ReadOnly = true;
                this.columnlogintype.MaxLength = 1;
                this.columnloginname.ReadOnly = true;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public isp_sqlsecure_report_getserveraccessRow Newisp_sqlsecure_report_getserveraccessRow() {
                return ((isp_sqlsecure_report_getserveraccessRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new isp_sqlsecure_report_getserveraccessRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(isp_sqlsecure_report_getserveraccessRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.isp_sqlsecure_report_getserveraccessRowChanged != null)) {
                    this.isp_sqlsecure_report_getserveraccessRowChanged(this, new isp_sqlsecure_report_getserveraccessRowChangeEvent(((isp_sqlsecure_report_getserveraccessRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.isp_sqlsecure_report_getserveraccessRowChanging != null)) {
                    this.isp_sqlsecure_report_getserveraccessRowChanging(this, new isp_sqlsecure_report_getserveraccessRowChangeEvent(((isp_sqlsecure_report_getserveraccessRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.isp_sqlsecure_report_getserveraccessRowDeleted != null)) {
                    this.isp_sqlsecure_report_getserveraccessRowDeleted(this, new isp_sqlsecure_report_getserveraccessRowChangeEvent(((isp_sqlsecure_report_getserveraccessRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.isp_sqlsecure_report_getserveraccessRowDeleting != null)) {
                    this.isp_sqlsecure_report_getserveraccessRowDeleting(this, new isp_sqlsecure_report_getserveraccessRowChangeEvent(((isp_sqlsecure_report_getserveraccessRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removeisp_sqlsecure_report_getserveraccessRow(isp_sqlsecure_report_getserveraccessRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                ReportsDataset ds = new ReportsDataset();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "isp_sqlsecure_report_getserveraccessDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class isp_sqlsecure_report_authenticationDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnconnectionname;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public isp_sqlsecure_report_authenticationDataTable() {
                this.TableName = "isp_sqlsecure_report_authentication";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal isp_sqlsecure_report_authenticationDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected isp_sqlsecure_report_authenticationDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn connectionnameColumn {
                get {
                    return this.columnconnectionname;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public isp_sqlsecure_report_authenticationRow this[int index] {
                get {
                    return ((isp_sqlsecure_report_authenticationRow)(this.Rows[index]));
                }
            }
            
            public event isp_sqlsecure_report_authenticationRowChangeEventHandler isp_sqlsecure_report_authenticationRowChanging;
            
            public event isp_sqlsecure_report_authenticationRowChangeEventHandler isp_sqlsecure_report_authenticationRowChanged;
            
            public event isp_sqlsecure_report_authenticationRowChangeEventHandler isp_sqlsecure_report_authenticationRowDeleting;
            
            public event isp_sqlsecure_report_authenticationRowChangeEventHandler isp_sqlsecure_report_authenticationRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addisp_sqlsecure_report_authenticationRow(isp_sqlsecure_report_authenticationRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public isp_sqlsecure_report_authenticationRow Addisp_sqlsecure_report_authenticationRow(string connectionname) {
                isp_sqlsecure_report_authenticationRow rowisp_sqlsecure_report_authenticationRow = ((isp_sqlsecure_report_authenticationRow)(this.NewRow()));
                rowisp_sqlsecure_report_authenticationRow.ItemArray = new object[] {
                        connectionname};
                this.Rows.Add(rowisp_sqlsecure_report_authenticationRow);
                return rowisp_sqlsecure_report_authenticationRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                isp_sqlsecure_report_authenticationDataTable cln = ((isp_sqlsecure_report_authenticationDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new isp_sqlsecure_report_authenticationDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnconnectionname = base.Columns["connectionname"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnconnectionname = new System.Data.DataColumn("connectionname", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnconnectionname);
                this.columnconnectionname.AllowDBNull = false;
                this.columnconnectionname.ReadOnly = true;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public isp_sqlsecure_report_authenticationRow Newisp_sqlsecure_report_authenticationRow() {
                return ((isp_sqlsecure_report_authenticationRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new isp_sqlsecure_report_authenticationRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(isp_sqlsecure_report_authenticationRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.isp_sqlsecure_report_authenticationRowChanged != null)) {
                    this.isp_sqlsecure_report_authenticationRowChanged(this, new isp_sqlsecure_report_authenticationRowChangeEvent(((isp_sqlsecure_report_authenticationRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.isp_sqlsecure_report_authenticationRowChanging != null)) {
                    this.isp_sqlsecure_report_authenticationRowChanging(this, new isp_sqlsecure_report_authenticationRowChangeEvent(((isp_sqlsecure_report_authenticationRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.isp_sqlsecure_report_authenticationRowDeleted != null)) {
                    this.isp_sqlsecure_report_authenticationRowDeleted(this, new isp_sqlsecure_report_authenticationRowChangeEvent(((isp_sqlsecure_report_authenticationRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.isp_sqlsecure_report_authenticationRowDeleting != null)) {
                    this.isp_sqlsecure_report_authenticationRowDeleting(this, new isp_sqlsecure_report_authenticationRowChangeEvent(((isp_sqlsecure_report_authenticationRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removeisp_sqlsecure_report_authenticationRow(isp_sqlsecure_report_authenticationRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                ReportsDataset ds = new ReportsDataset();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "isp_sqlsecure_report_authenticationDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class isp_sqlsecure_report_checkwellknowngroupDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnconnectionname;
            
            private System.Data.DataColumn columnname;
            
            private System.Data.DataColumn columngroupname;
            
            private System.Data.DataColumn columnaccess;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public isp_sqlsecure_report_checkwellknowngroupDataTable() {
                this.TableName = "isp_sqlsecure_report_checkwellknowngroup";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal isp_sqlsecure_report_checkwellknowngroupDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected isp_sqlsecure_report_checkwellknowngroupDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn connectionnameColumn {
                get {
                    return this.columnconnectionname;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn nameColumn {
                get {
                    return this.columnname;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn groupnameColumn {
                get {
                    return this.columngroupname;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn accessColumn {
                get {
                    return this.columnaccess;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public isp_sqlsecure_report_checkwellknowngroupRow this[int index] {
                get {
                    return ((isp_sqlsecure_report_checkwellknowngroupRow)(this.Rows[index]));
                }
            }
            
            public event isp_sqlsecure_report_checkwellknowngroupRowChangeEventHandler isp_sqlsecure_report_checkwellknowngroupRowChanging;
            
            public event isp_sqlsecure_report_checkwellknowngroupRowChangeEventHandler isp_sqlsecure_report_checkwellknowngroupRowChanged;
            
            public event isp_sqlsecure_report_checkwellknowngroupRowChangeEventHandler isp_sqlsecure_report_checkwellknowngroupRowDeleting;
            
            public event isp_sqlsecure_report_checkwellknowngroupRowChangeEventHandler isp_sqlsecure_report_checkwellknowngroupRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addisp_sqlsecure_report_checkwellknowngroupRow(isp_sqlsecure_report_checkwellknowngroupRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public isp_sqlsecure_report_checkwellknowngroupRow Addisp_sqlsecure_report_checkwellknowngroupRow(string connectionname, string name, string groupname, string access) {
                isp_sqlsecure_report_checkwellknowngroupRow rowisp_sqlsecure_report_checkwellknowngroupRow = ((isp_sqlsecure_report_checkwellknowngroupRow)(this.NewRow()));
                rowisp_sqlsecure_report_checkwellknowngroupRow.ItemArray = new object[] {
                        connectionname,
                        name,
                        groupname,
                        access};
                this.Rows.Add(rowisp_sqlsecure_report_checkwellknowngroupRow);
                return rowisp_sqlsecure_report_checkwellknowngroupRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                isp_sqlsecure_report_checkwellknowngroupDataTable cln = ((isp_sqlsecure_report_checkwellknowngroupDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new isp_sqlsecure_report_checkwellknowngroupDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnconnectionname = base.Columns["connectionname"];
                this.columnname = base.Columns["name"];
                this.columngroupname = base.Columns["groupname"];
                this.columnaccess = base.Columns["access"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnconnectionname = new System.Data.DataColumn("connectionname", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnconnectionname);
                this.columnname = new System.Data.DataColumn("name", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnname);
                this.columngroupname = new System.Data.DataColumn("groupname", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columngroupname);
                this.columnaccess = new System.Data.DataColumn("access", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnaccess);
                this.columnconnectionname.ReadOnly = true;
                this.columnname.ReadOnly = true;
                this.columngroupname.ReadOnly = true;
                this.columnaccess.ReadOnly = true;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public isp_sqlsecure_report_checkwellknowngroupRow Newisp_sqlsecure_report_checkwellknowngroupRow() {
                return ((isp_sqlsecure_report_checkwellknowngroupRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new isp_sqlsecure_report_checkwellknowngroupRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(isp_sqlsecure_report_checkwellknowngroupRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.isp_sqlsecure_report_checkwellknowngroupRowChanged != null)) {
                    this.isp_sqlsecure_report_checkwellknowngroupRowChanged(this, new isp_sqlsecure_report_checkwellknowngroupRowChangeEvent(((isp_sqlsecure_report_checkwellknowngroupRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.isp_sqlsecure_report_checkwellknowngroupRowChanging != null)) {
                    this.isp_sqlsecure_report_checkwellknowngroupRowChanging(this, new isp_sqlsecure_report_checkwellknowngroupRowChangeEvent(((isp_sqlsecure_report_checkwellknowngroupRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.isp_sqlsecure_report_checkwellknowngroupRowDeleted != null)) {
                    this.isp_sqlsecure_report_checkwellknowngroupRowDeleted(this, new isp_sqlsecure_report_checkwellknowngroupRowChangeEvent(((isp_sqlsecure_report_checkwellknowngroupRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.isp_sqlsecure_report_checkwellknowngroupRowDeleting != null)) {
                    this.isp_sqlsecure_report_checkwellknowngroupRowDeleting(this, new isp_sqlsecure_report_checkwellknowngroupRowChangeEvent(((isp_sqlsecure_report_checkwellknowngroupRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removeisp_sqlsecure_report_checkwellknowngroupRow(isp_sqlsecure_report_checkwellknowngroupRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                ReportsDataset ds = new ReportsDataset();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "isp_sqlsecure_report_checkwellknowngroupDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class isp_sqlsecure_report_sysadmin_administratorDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnconnectionname;
            
            private System.Data.DataColumn columnlogin;
            
            private System.Data.DataColumn columnfixedrole;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public isp_sqlsecure_report_sysadmin_administratorDataTable() {
                this.TableName = "isp_sqlsecure_report_sysadmin_administrator";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal isp_sqlsecure_report_sysadmin_administratorDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected isp_sqlsecure_report_sysadmin_administratorDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn connectionnameColumn {
                get {
                    return this.columnconnectionname;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn loginColumn {
                get {
                    return this.columnlogin;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn fixedroleColumn {
                get {
                    return this.columnfixedrole;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public isp_sqlsecure_report_sysadmin_administratorRow this[int index] {
                get {
                    return ((isp_sqlsecure_report_sysadmin_administratorRow)(this.Rows[index]));
                }
            }
            
            public event isp_sqlsecure_report_sysadmin_administratorRowChangeEventHandler isp_sqlsecure_report_sysadmin_administratorRowChanging;
            
            public event isp_sqlsecure_report_sysadmin_administratorRowChangeEventHandler isp_sqlsecure_report_sysadmin_administratorRowChanged;
            
            public event isp_sqlsecure_report_sysadmin_administratorRowChangeEventHandler isp_sqlsecure_report_sysadmin_administratorRowDeleting;
            
            public event isp_sqlsecure_report_sysadmin_administratorRowChangeEventHandler isp_sqlsecure_report_sysadmin_administratorRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addisp_sqlsecure_report_sysadmin_administratorRow(isp_sqlsecure_report_sysadmin_administratorRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public isp_sqlsecure_report_sysadmin_administratorRow Addisp_sqlsecure_report_sysadmin_administratorRow(string connectionname, string login, string fixedrole) {
                isp_sqlsecure_report_sysadmin_administratorRow rowisp_sqlsecure_report_sysadmin_administratorRow = ((isp_sqlsecure_report_sysadmin_administratorRow)(this.NewRow()));
                rowisp_sqlsecure_report_sysadmin_administratorRow.ItemArray = new object[] {
                        connectionname,
                        login,
                        fixedrole};
                this.Rows.Add(rowisp_sqlsecure_report_sysadmin_administratorRow);
                return rowisp_sqlsecure_report_sysadmin_administratorRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                isp_sqlsecure_report_sysadmin_administratorDataTable cln = ((isp_sqlsecure_report_sysadmin_administratorDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new isp_sqlsecure_report_sysadmin_administratorDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnconnectionname = base.Columns["connectionname"];
                this.columnlogin = base.Columns["login"];
                this.columnfixedrole = base.Columns["fixedrole"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnconnectionname = new System.Data.DataColumn("connectionname", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnconnectionname);
                this.columnlogin = new System.Data.DataColumn("login", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnlogin);
                this.columnfixedrole = new System.Data.DataColumn("fixedrole", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnfixedrole);
                this.columnconnectionname.ReadOnly = true;
                this.columnlogin.ReadOnly = true;
                this.columnfixedrole.ReadOnly = true;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public isp_sqlsecure_report_sysadmin_administratorRow Newisp_sqlsecure_report_sysadmin_administratorRow() {
                return ((isp_sqlsecure_report_sysadmin_administratorRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new isp_sqlsecure_report_sysadmin_administratorRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(isp_sqlsecure_report_sysadmin_administratorRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.isp_sqlsecure_report_sysadmin_administratorRowChanged != null)) {
                    this.isp_sqlsecure_report_sysadmin_administratorRowChanged(this, new isp_sqlsecure_report_sysadmin_administratorRowChangeEvent(((isp_sqlsecure_report_sysadmin_administratorRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.isp_sqlsecure_report_sysadmin_administratorRowChanging != null)) {
                    this.isp_sqlsecure_report_sysadmin_administratorRowChanging(this, new isp_sqlsecure_report_sysadmin_administratorRowChangeEvent(((isp_sqlsecure_report_sysadmin_administratorRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.isp_sqlsecure_report_sysadmin_administratorRowDeleted != null)) {
                    this.isp_sqlsecure_report_sysadmin_administratorRowDeleted(this, new isp_sqlsecure_report_sysadmin_administratorRowChangeEvent(((isp_sqlsecure_report_sysadmin_administratorRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.isp_sqlsecure_report_sysadmin_administratorRowDeleting != null)) {
                    this.isp_sqlsecure_report_sysadmin_administratorRowDeleting(this, new isp_sqlsecure_report_sysadmin_administratorRowChangeEvent(((isp_sqlsecure_report_sysadmin_administratorRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removeisp_sqlsecure_report_sysadmin_administratorRow(isp_sqlsecure_report_sysadmin_administratorRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                ReportsDataset ds = new ReportsDataset();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "isp_sqlsecure_report_sysadmin_administratorDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class isp_sqlsecure_report_orphanedloginsDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnconnectionname;
            
            private System.Data.DataColumn columnname;
            
            private System.Data.DataColumn columntype;
            
            private System.Data.DataColumn columnstate;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public isp_sqlsecure_report_orphanedloginsDataTable() {
                this.TableName = "isp_sqlsecure_report_orphanedlogins";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal isp_sqlsecure_report_orphanedloginsDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected isp_sqlsecure_report_orphanedloginsDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn connectionnameColumn {
                get {
                    return this.columnconnectionname;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn nameColumn {
                get {
                    return this.columnname;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn typeColumn {
                get {
                    return this.columntype;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn stateColumn {
                get {
                    return this.columnstate;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public isp_sqlsecure_report_orphanedloginsRow this[int index] {
                get {
                    return ((isp_sqlsecure_report_orphanedloginsRow)(this.Rows[index]));
                }
            }
            
            public event isp_sqlsecure_report_orphanedloginsRowChangeEventHandler isp_sqlsecure_report_orphanedloginsRowChanging;
            
            public event isp_sqlsecure_report_orphanedloginsRowChangeEventHandler isp_sqlsecure_report_orphanedloginsRowChanged;
            
            public event isp_sqlsecure_report_orphanedloginsRowChangeEventHandler isp_sqlsecure_report_orphanedloginsRowDeleting;
            
            public event isp_sqlsecure_report_orphanedloginsRowChangeEventHandler isp_sqlsecure_report_orphanedloginsRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addisp_sqlsecure_report_orphanedloginsRow(isp_sqlsecure_report_orphanedloginsRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public isp_sqlsecure_report_orphanedloginsRow Addisp_sqlsecure_report_orphanedloginsRow(string connectionname, string name, string type, string state) {
                isp_sqlsecure_report_orphanedloginsRow rowisp_sqlsecure_report_orphanedloginsRow = ((isp_sqlsecure_report_orphanedloginsRow)(this.NewRow()));
                rowisp_sqlsecure_report_orphanedloginsRow.ItemArray = new object[] {
                        connectionname,
                        name,
                        type,
                        state};
                this.Rows.Add(rowisp_sqlsecure_report_orphanedloginsRow);
                return rowisp_sqlsecure_report_orphanedloginsRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                isp_sqlsecure_report_orphanedloginsDataTable cln = ((isp_sqlsecure_report_orphanedloginsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new isp_sqlsecure_report_orphanedloginsDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnconnectionname = base.Columns["connectionname"];
                this.columnname = base.Columns["name"];
                this.columntype = base.Columns["type"];
                this.columnstate = base.Columns["state"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnconnectionname = new System.Data.DataColumn("connectionname", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnconnectionname);
                this.columnname = new System.Data.DataColumn("name", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnname);
                this.columntype = new System.Data.DataColumn("type", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columntype);
                this.columnstate = new System.Data.DataColumn("state", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnstate);
                this.columnconnectionname.ReadOnly = true;
                this.columnname.ReadOnly = true;
                this.columntype.ReadOnly = true;
                this.columnstate.ReadOnly = true;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public isp_sqlsecure_report_orphanedloginsRow Newisp_sqlsecure_report_orphanedloginsRow() {
                return ((isp_sqlsecure_report_orphanedloginsRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new isp_sqlsecure_report_orphanedloginsRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(isp_sqlsecure_report_orphanedloginsRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.isp_sqlsecure_report_orphanedloginsRowChanged != null)) {
                    this.isp_sqlsecure_report_orphanedloginsRowChanged(this, new isp_sqlsecure_report_orphanedloginsRowChangeEvent(((isp_sqlsecure_report_orphanedloginsRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.isp_sqlsecure_report_orphanedloginsRowChanging != null)) {
                    this.isp_sqlsecure_report_orphanedloginsRowChanging(this, new isp_sqlsecure_report_orphanedloginsRowChangeEvent(((isp_sqlsecure_report_orphanedloginsRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.isp_sqlsecure_report_orphanedloginsRowDeleted != null)) {
                    this.isp_sqlsecure_report_orphanedloginsRowDeleted(this, new isp_sqlsecure_report_orphanedloginsRowChangeEvent(((isp_sqlsecure_report_orphanedloginsRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.isp_sqlsecure_report_orphanedloginsRowDeleting != null)) {
                    this.isp_sqlsecure_report_orphanedloginsRowDeleting(this, new isp_sqlsecure_report_orphanedloginsRowChangeEvent(((isp_sqlsecure_report_orphanedloginsRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removeisp_sqlsecure_report_orphanedloginsRow(isp_sqlsecure_report_orphanedloginsRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                ReportsDataset ds = new ReportsDataset();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "isp_sqlsecure_report_orphanedloginsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class isp_sqlsecure_report_dbuserfixedroleDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnconnectionname;
            
            private System.Data.DataColumn columndatabasename;
            
            private System.Data.DataColumn columnusername;
            
            private System.Data.DataColumn columnrole;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public isp_sqlsecure_report_dbuserfixedroleDataTable() {
                this.TableName = "isp_sqlsecure_report_dbuserfixedrole";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal isp_sqlsecure_report_dbuserfixedroleDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected isp_sqlsecure_report_dbuserfixedroleDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn connectionnameColumn {
                get {
                    return this.columnconnectionname;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn databasenameColumn {
                get {
                    return this.columndatabasename;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn usernameColumn {
                get {
                    return this.columnusername;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn roleColumn {
                get {
                    return this.columnrole;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public isp_sqlsecure_report_dbuserfixedroleRow this[int index] {
                get {
                    return ((isp_sqlsecure_report_dbuserfixedroleRow)(this.Rows[index]));
                }
            }
            
            public event isp_sqlsecure_report_dbuserfixedroleRowChangeEventHandler isp_sqlsecure_report_dbuserfixedroleRowChanging;
            
            public event isp_sqlsecure_report_dbuserfixedroleRowChangeEventHandler isp_sqlsecure_report_dbuserfixedroleRowChanged;
            
            public event isp_sqlsecure_report_dbuserfixedroleRowChangeEventHandler isp_sqlsecure_report_dbuserfixedroleRowDeleting;
            
            public event isp_sqlsecure_report_dbuserfixedroleRowChangeEventHandler isp_sqlsecure_report_dbuserfixedroleRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addisp_sqlsecure_report_dbuserfixedroleRow(isp_sqlsecure_report_dbuserfixedroleRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public isp_sqlsecure_report_dbuserfixedroleRow Addisp_sqlsecure_report_dbuserfixedroleRow(string connectionname, string databasename, string username, string role) {
                isp_sqlsecure_report_dbuserfixedroleRow rowisp_sqlsecure_report_dbuserfixedroleRow = ((isp_sqlsecure_report_dbuserfixedroleRow)(this.NewRow()));
                rowisp_sqlsecure_report_dbuserfixedroleRow.ItemArray = new object[] {
                        connectionname,
                        databasename,
                        username,
                        role};
                this.Rows.Add(rowisp_sqlsecure_report_dbuserfixedroleRow);
                return rowisp_sqlsecure_report_dbuserfixedroleRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                isp_sqlsecure_report_dbuserfixedroleDataTable cln = ((isp_sqlsecure_report_dbuserfixedroleDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new isp_sqlsecure_report_dbuserfixedroleDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnconnectionname = base.Columns["connectionname"];
                this.columndatabasename = base.Columns["databasename"];
                this.columnusername = base.Columns["username"];
                this.columnrole = base.Columns["role"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnconnectionname = new System.Data.DataColumn("connectionname", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnconnectionname);
                this.columndatabasename = new System.Data.DataColumn("databasename", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columndatabasename);
                this.columnusername = new System.Data.DataColumn("username", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnusername);
                this.columnrole = new System.Data.DataColumn("role", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnrole);
                this.columnconnectionname.ReadOnly = true;
                this.columndatabasename.ReadOnly = true;
                this.columnusername.ReadOnly = true;
                this.columnrole.ReadOnly = true;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public isp_sqlsecure_report_dbuserfixedroleRow Newisp_sqlsecure_report_dbuserfixedroleRow() {
                return ((isp_sqlsecure_report_dbuserfixedroleRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new isp_sqlsecure_report_dbuserfixedroleRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(isp_sqlsecure_report_dbuserfixedroleRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.isp_sqlsecure_report_dbuserfixedroleRowChanged != null)) {
                    this.isp_sqlsecure_report_dbuserfixedroleRowChanged(this, new isp_sqlsecure_report_dbuserfixedroleRowChangeEvent(((isp_sqlsecure_report_dbuserfixedroleRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.isp_sqlsecure_report_dbuserfixedroleRowChanging != null)) {
                    this.isp_sqlsecure_report_dbuserfixedroleRowChanging(this, new isp_sqlsecure_report_dbuserfixedroleRowChangeEvent(((isp_sqlsecure_report_dbuserfixedroleRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.isp_sqlsecure_report_dbuserfixedroleRowDeleted != null)) {
                    this.isp_sqlsecure_report_dbuserfixedroleRowDeleted(this, new isp_sqlsecure_report_dbuserfixedroleRowChangeEvent(((isp_sqlsecure_report_dbuserfixedroleRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.isp_sqlsecure_report_dbuserfixedroleRowDeleting != null)) {
                    this.isp_sqlsecure_report_dbuserfixedroleRowDeleting(this, new isp_sqlsecure_report_dbuserfixedroleRowChangeEvent(((isp_sqlsecure_report_dbuserfixedroleRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removeisp_sqlsecure_report_dbuserfixedroleRow(isp_sqlsecure_report_dbuserfixedroleRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                ReportsDataset ds = new ReportsDataset();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "isp_sqlsecure_report_dbuserfixedroleDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class isp_sqlsecure_report_checkcmdshellDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnconnectionname;
            
            private System.Data.DataColumn columnname;
            
            private System.Data.DataColumn columndatabasename;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public isp_sqlsecure_report_checkcmdshellDataTable() {
                this.TableName = "isp_sqlsecure_report_checkcmdshell";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal isp_sqlsecure_report_checkcmdshellDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected isp_sqlsecure_report_checkcmdshellDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn connectionnameColumn {
                get {
                    return this.columnconnectionname;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn nameColumn {
                get {
                    return this.columnname;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn databasenameColumn {
                get {
                    return this.columndatabasename;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public isp_sqlsecure_report_checkcmdshellRow this[int index] {
                get {
                    return ((isp_sqlsecure_report_checkcmdshellRow)(this.Rows[index]));
                }
            }
            
            public event isp_sqlsecure_report_checkcmdshellRowChangeEventHandler isp_sqlsecure_report_checkcmdshellRowChanging;
            
            public event isp_sqlsecure_report_checkcmdshellRowChangeEventHandler isp_sqlsecure_report_checkcmdshellRowChanged;
            
            public event isp_sqlsecure_report_checkcmdshellRowChangeEventHandler isp_sqlsecure_report_checkcmdshellRowDeleting;
            
            public event isp_sqlsecure_report_checkcmdshellRowChangeEventHandler isp_sqlsecure_report_checkcmdshellRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addisp_sqlsecure_report_checkcmdshellRow(isp_sqlsecure_report_checkcmdshellRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public isp_sqlsecure_report_checkcmdshellRow Addisp_sqlsecure_report_checkcmdshellRow(string connectionname, string name, string databasename) {
                isp_sqlsecure_report_checkcmdshellRow rowisp_sqlsecure_report_checkcmdshellRow = ((isp_sqlsecure_report_checkcmdshellRow)(this.NewRow()));
                rowisp_sqlsecure_report_checkcmdshellRow.ItemArray = new object[] {
                        connectionname,
                        name,
                        databasename};
                this.Rows.Add(rowisp_sqlsecure_report_checkcmdshellRow);
                return rowisp_sqlsecure_report_checkcmdshellRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                isp_sqlsecure_report_checkcmdshellDataTable cln = ((isp_sqlsecure_report_checkcmdshellDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new isp_sqlsecure_report_checkcmdshellDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnconnectionname = base.Columns["connectionname"];
                this.columnname = base.Columns["name"];
                this.columndatabasename = base.Columns["databasename"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnconnectionname = new System.Data.DataColumn("connectionname", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnconnectionname);
                this.columnname = new System.Data.DataColumn("name", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnname);
                this.columndatabasename = new System.Data.DataColumn("databasename", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columndatabasename);
                this.columnconnectionname.ReadOnly = true;
                this.columnname.ReadOnly = true;
                this.columndatabasename.ReadOnly = true;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public isp_sqlsecure_report_checkcmdshellRow Newisp_sqlsecure_report_checkcmdshellRow() {
                return ((isp_sqlsecure_report_checkcmdshellRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new isp_sqlsecure_report_checkcmdshellRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(isp_sqlsecure_report_checkcmdshellRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.isp_sqlsecure_report_checkcmdshellRowChanged != null)) {
                    this.isp_sqlsecure_report_checkcmdshellRowChanged(this, new isp_sqlsecure_report_checkcmdshellRowChangeEvent(((isp_sqlsecure_report_checkcmdshellRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.isp_sqlsecure_report_checkcmdshellRowChanging != null)) {
                    this.isp_sqlsecure_report_checkcmdshellRowChanging(this, new isp_sqlsecure_report_checkcmdshellRowChangeEvent(((isp_sqlsecure_report_checkcmdshellRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.isp_sqlsecure_report_checkcmdshellRowDeleted != null)) {
                    this.isp_sqlsecure_report_checkcmdshellRowDeleted(this, new isp_sqlsecure_report_checkcmdshellRowChangeEvent(((isp_sqlsecure_report_checkcmdshellRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.isp_sqlsecure_report_checkcmdshellRowDeleting != null)) {
                    this.isp_sqlsecure_report_checkcmdshellRowDeleting(this, new isp_sqlsecure_report_checkcmdshellRowChangeEvent(((isp_sqlsecure_report_checkcmdshellRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removeisp_sqlsecure_report_checkcmdshellRow(isp_sqlsecure_report_checkcmdshellRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                ReportsDataset ds = new ReportsDataset();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "isp_sqlsecure_report_checkcmdshellDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class isp_sqlsecure_report_getuserinfoDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnconnectionname;
            
            private System.Data.DataColumn columnloginname;
            
            private System.Data.DataColumn columnlogintype;
            
            private System.Data.DataColumn columndatabasename;
            
            private System.Data.DataColumn columnusername;
            
            private System.Data.DataColumn columnisalias;
            
            private System.Data.DataColumn columnhasaccess;
            
            private System.Data.DataColumn columndefaultschema;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public isp_sqlsecure_report_getuserinfoDataTable() {
                this.TableName = "isp_sqlsecure_report_getuserinfo";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal isp_sqlsecure_report_getuserinfoDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected isp_sqlsecure_report_getuserinfoDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn connectionnameColumn {
                get {
                    return this.columnconnectionname;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn loginnameColumn {
                get {
                    return this.columnloginname;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn logintypeColumn {
                get {
                    return this.columnlogintype;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn databasenameColumn {
                get {
                    return this.columndatabasename;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn usernameColumn {
                get {
                    return this.columnusername;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn isaliasColumn {
                get {
                    return this.columnisalias;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn hasaccessColumn {
                get {
                    return this.columnhasaccess;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn defaultschemaColumn {
                get {
                    return this.columndefaultschema;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public isp_sqlsecure_report_getuserinfoRow this[int index] {
                get {
                    return ((isp_sqlsecure_report_getuserinfoRow)(this.Rows[index]));
                }
            }
            
            public event isp_sqlsecure_report_getuserinfoRowChangeEventHandler isp_sqlsecure_report_getuserinfoRowChanging;
            
            public event isp_sqlsecure_report_getuserinfoRowChangeEventHandler isp_sqlsecure_report_getuserinfoRowChanged;
            
            public event isp_sqlsecure_report_getuserinfoRowChangeEventHandler isp_sqlsecure_report_getuserinfoRowDeleting;
            
            public event isp_sqlsecure_report_getuserinfoRowChangeEventHandler isp_sqlsecure_report_getuserinfoRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addisp_sqlsecure_report_getuserinfoRow(isp_sqlsecure_report_getuserinfoRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public isp_sqlsecure_report_getuserinfoRow Addisp_sqlsecure_report_getuserinfoRow(string connectionname, string loginname, string logintype, string databasename, string username, string isalias, string hasaccess, string defaultschema) {
                isp_sqlsecure_report_getuserinfoRow rowisp_sqlsecure_report_getuserinfoRow = ((isp_sqlsecure_report_getuserinfoRow)(this.NewRow()));
                rowisp_sqlsecure_report_getuserinfoRow.ItemArray = new object[] {
                        connectionname,
                        loginname,
                        logintype,
                        databasename,
                        username,
                        isalias,
                        hasaccess,
                        defaultschema};
                this.Rows.Add(rowisp_sqlsecure_report_getuserinfoRow);
                return rowisp_sqlsecure_report_getuserinfoRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                isp_sqlsecure_report_getuserinfoDataTable cln = ((isp_sqlsecure_report_getuserinfoDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new isp_sqlsecure_report_getuserinfoDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnconnectionname = base.Columns["connectionname"];
                this.columnloginname = base.Columns["loginname"];
                this.columnlogintype = base.Columns["logintype"];
                this.columndatabasename = base.Columns["databasename"];
                this.columnusername = base.Columns["username"];
                this.columnisalias = base.Columns["isalias"];
                this.columnhasaccess = base.Columns["hasaccess"];
                this.columndefaultschema = base.Columns["defaultschema"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnconnectionname = new System.Data.DataColumn("connectionname", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnconnectionname);
                this.columnloginname = new System.Data.DataColumn("loginname", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnloginname);
                this.columnlogintype = new System.Data.DataColumn("logintype", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnlogintype);
                this.columndatabasename = new System.Data.DataColumn("databasename", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columndatabasename);
                this.columnusername = new System.Data.DataColumn("username", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnusername);
                this.columnisalias = new System.Data.DataColumn("isalias", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnisalias);
                this.columnhasaccess = new System.Data.DataColumn("hasaccess", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnhasaccess);
                this.columndefaultschema = new System.Data.DataColumn("defaultschema", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columndefaultschema);
                this.columnconnectionname.ReadOnly = true;
                this.columnloginname.ReadOnly = true;
                this.columnlogintype.ReadOnly = true;
                this.columndatabasename.ReadOnly = true;
                this.columnusername.ReadOnly = true;
                this.columnisalias.ReadOnly = true;
                this.columnhasaccess.ReadOnly = true;
                this.columndefaultschema.ReadOnly = true;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public isp_sqlsecure_report_getuserinfoRow Newisp_sqlsecure_report_getuserinfoRow() {
                return ((isp_sqlsecure_report_getuserinfoRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new isp_sqlsecure_report_getuserinfoRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(isp_sqlsecure_report_getuserinfoRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.isp_sqlsecure_report_getuserinfoRowChanged != null)) {
                    this.isp_sqlsecure_report_getuserinfoRowChanged(this, new isp_sqlsecure_report_getuserinfoRowChangeEvent(((isp_sqlsecure_report_getuserinfoRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.isp_sqlsecure_report_getuserinfoRowChanging != null)) {
                    this.isp_sqlsecure_report_getuserinfoRowChanging(this, new isp_sqlsecure_report_getuserinfoRowChangeEvent(((isp_sqlsecure_report_getuserinfoRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.isp_sqlsecure_report_getuserinfoRowDeleted != null)) {
                    this.isp_sqlsecure_report_getuserinfoRowDeleted(this, new isp_sqlsecure_report_getuserinfoRowChangeEvent(((isp_sqlsecure_report_getuserinfoRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.isp_sqlsecure_report_getuserinfoRowDeleting != null)) {
                    this.isp_sqlsecure_report_getuserinfoRowDeleting(this, new isp_sqlsecure_report_getuserinfoRowChangeEvent(((isp_sqlsecure_report_getuserinfoRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removeisp_sqlsecure_report_getuserinfoRow(isp_sqlsecure_report_getuserinfoRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                ReportsDataset ds = new ReportsDataset();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "isp_sqlsecure_report_getuserinfoDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class isp_sqlsecure_report_checkdbchainingDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnconnectionname;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public isp_sqlsecure_report_checkdbchainingDataTable() {
                this.TableName = "isp_sqlsecure_report_checkdbchaining";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal isp_sqlsecure_report_checkdbchainingDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected isp_sqlsecure_report_checkdbchainingDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn connectionnameColumn {
                get {
                    return this.columnconnectionname;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public isp_sqlsecure_report_checkdbchainingRow this[int index] {
                get {
                    return ((isp_sqlsecure_report_checkdbchainingRow)(this.Rows[index]));
                }
            }
            
            public event isp_sqlsecure_report_checkdbchainingRowChangeEventHandler isp_sqlsecure_report_checkdbchainingRowChanging;
            
            public event isp_sqlsecure_report_checkdbchainingRowChangeEventHandler isp_sqlsecure_report_checkdbchainingRowChanged;
            
            public event isp_sqlsecure_report_checkdbchainingRowChangeEventHandler isp_sqlsecure_report_checkdbchainingRowDeleting;
            
            public event isp_sqlsecure_report_checkdbchainingRowChangeEventHandler isp_sqlsecure_report_checkdbchainingRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addisp_sqlsecure_report_checkdbchainingRow(isp_sqlsecure_report_checkdbchainingRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public isp_sqlsecure_report_checkdbchainingRow Addisp_sqlsecure_report_checkdbchainingRow(string connectionname) {
                isp_sqlsecure_report_checkdbchainingRow rowisp_sqlsecure_report_checkdbchainingRow = ((isp_sqlsecure_report_checkdbchainingRow)(this.NewRow()));
                rowisp_sqlsecure_report_checkdbchainingRow.ItemArray = new object[] {
                        connectionname};
                this.Rows.Add(rowisp_sqlsecure_report_checkdbchainingRow);
                return rowisp_sqlsecure_report_checkdbchainingRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                isp_sqlsecure_report_checkdbchainingDataTable cln = ((isp_sqlsecure_report_checkdbchainingDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new isp_sqlsecure_report_checkdbchainingDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnconnectionname = base.Columns["connectionname"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnconnectionname = new System.Data.DataColumn("connectionname", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnconnectionname);
                this.columnconnectionname.AllowDBNull = false;
                this.columnconnectionname.ReadOnly = true;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public isp_sqlsecure_report_checkdbchainingRow Newisp_sqlsecure_report_checkdbchainingRow() {
                return ((isp_sqlsecure_report_checkdbchainingRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new isp_sqlsecure_report_checkdbchainingRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(isp_sqlsecure_report_checkdbchainingRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.isp_sqlsecure_report_checkdbchainingRowChanged != null)) {
                    this.isp_sqlsecure_report_checkdbchainingRowChanged(this, new isp_sqlsecure_report_checkdbchainingRowChangeEvent(((isp_sqlsecure_report_checkdbchainingRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.isp_sqlsecure_report_checkdbchainingRowChanging != null)) {
                    this.isp_sqlsecure_report_checkdbchainingRowChanging(this, new isp_sqlsecure_report_checkdbchainingRowChangeEvent(((isp_sqlsecure_report_checkdbchainingRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.isp_sqlsecure_report_checkdbchainingRowDeleted != null)) {
                    this.isp_sqlsecure_report_checkdbchainingRowDeleted(this, new isp_sqlsecure_report_checkdbchainingRowChangeEvent(((isp_sqlsecure_report_checkdbchainingRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.isp_sqlsecure_report_checkdbchainingRowDeleting != null)) {
                    this.isp_sqlsecure_report_checkdbchainingRowDeleting(this, new isp_sqlsecure_report_checkdbchainingRowChangeEvent(((isp_sqlsecure_report_checkdbchainingRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removeisp_sqlsecure_report_checkdbchainingRow(isp_sqlsecure_report_checkdbchainingRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                ReportsDataset ds = new ReportsDataset();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "isp_sqlsecure_report_checkdbchainingDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class isp_sqlsecure_report_checksystemstoredproceduresDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnconnectionname;
            
            private System.Data.DataColumn columndatabasename;
            
            private System.Data.DataColumn columnusername;
            
            private System.Data.DataColumn columnobjectname;
            
            private System.Data.DataColumn columnpermission;
            
            private System.Data.DataColumn columnisgrant;
            
            private System.Data.DataColumn columnisgrantwith;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public isp_sqlsecure_report_checksystemstoredproceduresDataTable() {
                this.TableName = "isp_sqlsecure_report_checksystemstoredprocedures";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal isp_sqlsecure_report_checksystemstoredproceduresDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected isp_sqlsecure_report_checksystemstoredproceduresDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn connectionnameColumn {
                get {
                    return this.columnconnectionname;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn databasenameColumn {
                get {
                    return this.columndatabasename;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn usernameColumn {
                get {
                    return this.columnusername;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn objectnameColumn {
                get {
                    return this.columnobjectname;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn permissionColumn {
                get {
                    return this.columnpermission;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn isgrantColumn {
                get {
                    return this.columnisgrant;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn isgrantwithColumn {
                get {
                    return this.columnisgrantwith;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public isp_sqlsecure_report_checksystemstoredproceduresRow this[int index] {
                get {
                    return ((isp_sqlsecure_report_checksystemstoredproceduresRow)(this.Rows[index]));
                }
            }
            
            public event isp_sqlsecure_report_checksystemstoredproceduresRowChangeEventHandler isp_sqlsecure_report_checksystemstoredproceduresRowChanging;
            
            public event isp_sqlsecure_report_checksystemstoredproceduresRowChangeEventHandler isp_sqlsecure_report_checksystemstoredproceduresRowChanged;
            
            public event isp_sqlsecure_report_checksystemstoredproceduresRowChangeEventHandler isp_sqlsecure_report_checksystemstoredproceduresRowDeleting;
            
            public event isp_sqlsecure_report_checksystemstoredproceduresRowChangeEventHandler isp_sqlsecure_report_checksystemstoredproceduresRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addisp_sqlsecure_report_checksystemstoredproceduresRow(isp_sqlsecure_report_checksystemstoredproceduresRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public isp_sqlsecure_report_checksystemstoredproceduresRow Addisp_sqlsecure_report_checksystemstoredproceduresRow(string connectionname, string databasename, string username, string objectname, string permission, string isgrant, string isgrantwith) {
                isp_sqlsecure_report_checksystemstoredproceduresRow rowisp_sqlsecure_report_checksystemstoredproceduresRow = ((isp_sqlsecure_report_checksystemstoredproceduresRow)(this.NewRow()));
                rowisp_sqlsecure_report_checksystemstoredproceduresRow.ItemArray = new object[] {
                        connectionname,
                        databasename,
                        username,
                        objectname,
                        permission,
                        isgrant,
                        isgrantwith};
                this.Rows.Add(rowisp_sqlsecure_report_checksystemstoredproceduresRow);
                return rowisp_sqlsecure_report_checksystemstoredproceduresRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                isp_sqlsecure_report_checksystemstoredproceduresDataTable cln = ((isp_sqlsecure_report_checksystemstoredproceduresDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new isp_sqlsecure_report_checksystemstoredproceduresDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnconnectionname = base.Columns["connectionname"];
                this.columndatabasename = base.Columns["databasename"];
                this.columnusername = base.Columns["username"];
                this.columnobjectname = base.Columns["objectname"];
                this.columnpermission = base.Columns["permission"];
                this.columnisgrant = base.Columns["isgrant"];
                this.columnisgrantwith = base.Columns["isgrantwith"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnconnectionname = new System.Data.DataColumn("connectionname", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnconnectionname);
                this.columndatabasename = new System.Data.DataColumn("databasename", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columndatabasename);
                this.columnusername = new System.Data.DataColumn("username", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnusername);
                this.columnobjectname = new System.Data.DataColumn("objectname", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnobjectname);
                this.columnpermission = new System.Data.DataColumn("permission", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnpermission);
                this.columnisgrant = new System.Data.DataColumn("isgrant", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnisgrant);
                this.columnisgrantwith = new System.Data.DataColumn("isgrantwith", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnisgrantwith);
                this.columnconnectionname.ReadOnly = true;
                this.columndatabasename.ReadOnly = true;
                this.columnusername.ReadOnly = true;
                this.columnobjectname.ReadOnly = true;
                this.columnpermission.ReadOnly = true;
                this.columnisgrant.ReadOnly = true;
                this.columnisgrantwith.ReadOnly = true;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public isp_sqlsecure_report_checksystemstoredproceduresRow Newisp_sqlsecure_report_checksystemstoredproceduresRow() {
                return ((isp_sqlsecure_report_checksystemstoredproceduresRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new isp_sqlsecure_report_checksystemstoredproceduresRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(isp_sqlsecure_report_checksystemstoredproceduresRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.isp_sqlsecure_report_checksystemstoredproceduresRowChanged != null)) {
                    this.isp_sqlsecure_report_checksystemstoredproceduresRowChanged(this, new isp_sqlsecure_report_checksystemstoredproceduresRowChangeEvent(((isp_sqlsecure_report_checksystemstoredproceduresRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.isp_sqlsecure_report_checksystemstoredproceduresRowChanging != null)) {
                    this.isp_sqlsecure_report_checksystemstoredproceduresRowChanging(this, new isp_sqlsecure_report_checksystemstoredproceduresRowChangeEvent(((isp_sqlsecure_report_checksystemstoredproceduresRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.isp_sqlsecure_report_checksystemstoredproceduresRowDeleted != null)) {
                    this.isp_sqlsecure_report_checksystemstoredproceduresRowDeleted(this, new isp_sqlsecure_report_checksystemstoredproceduresRowChangeEvent(((isp_sqlsecure_report_checksystemstoredproceduresRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.isp_sqlsecure_report_checksystemstoredproceduresRowDeleting != null)) {
                    this.isp_sqlsecure_report_checksystemstoredproceduresRowDeleting(this, new isp_sqlsecure_report_checksystemstoredproceduresRowChangeEvent(((isp_sqlsecure_report_checksystemstoredproceduresRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removeisp_sqlsecure_report_checksystemstoredproceduresRow(isp_sqlsecure_report_checksystemstoredproceduresRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                ReportsDataset ds = new ReportsDataset();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "isp_sqlsecure_report_checksystemstoredproceduresDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class isp_sqlsecure_report_checkxpmailDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnconnectionname;
            
            private System.Data.DataColumn columnname;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public isp_sqlsecure_report_checkxpmailDataTable() {
                this.TableName = "isp_sqlsecure_report_checkxpmail";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal isp_sqlsecure_report_checkxpmailDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected isp_sqlsecure_report_checkxpmailDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn connectionnameColumn {
                get {
                    return this.columnconnectionname;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn nameColumn {
                get {
                    return this.columnname;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public isp_sqlsecure_report_checkxpmailRow this[int index] {
                get {
                    return ((isp_sqlsecure_report_checkxpmailRow)(this.Rows[index]));
                }
            }
            
            public event isp_sqlsecure_report_checkxpmailRowChangeEventHandler isp_sqlsecure_report_checkxpmailRowChanging;
            
            public event isp_sqlsecure_report_checkxpmailRowChangeEventHandler isp_sqlsecure_report_checkxpmailRowChanged;
            
            public event isp_sqlsecure_report_checkxpmailRowChangeEventHandler isp_sqlsecure_report_checkxpmailRowDeleting;
            
            public event isp_sqlsecure_report_checkxpmailRowChangeEventHandler isp_sqlsecure_report_checkxpmailRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addisp_sqlsecure_report_checkxpmailRow(isp_sqlsecure_report_checkxpmailRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public isp_sqlsecure_report_checkxpmailRow Addisp_sqlsecure_report_checkxpmailRow(string connectionname, string name) {
                isp_sqlsecure_report_checkxpmailRow rowisp_sqlsecure_report_checkxpmailRow = ((isp_sqlsecure_report_checkxpmailRow)(this.NewRow()));
                rowisp_sqlsecure_report_checkxpmailRow.ItemArray = new object[] {
                        connectionname,
                        name};
                this.Rows.Add(rowisp_sqlsecure_report_checkxpmailRow);
                return rowisp_sqlsecure_report_checkxpmailRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                isp_sqlsecure_report_checkxpmailDataTable cln = ((isp_sqlsecure_report_checkxpmailDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new isp_sqlsecure_report_checkxpmailDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnconnectionname = base.Columns["connectionname"];
                this.columnname = base.Columns["name"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnconnectionname = new System.Data.DataColumn("connectionname", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnconnectionname);
                this.columnname = new System.Data.DataColumn("name", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnname);
                this.columnconnectionname.ReadOnly = true;
                this.columnname.ReadOnly = true;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public isp_sqlsecure_report_checkxpmailRow Newisp_sqlsecure_report_checkxpmailRow() {
                return ((isp_sqlsecure_report_checkxpmailRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new isp_sqlsecure_report_checkxpmailRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(isp_sqlsecure_report_checkxpmailRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.isp_sqlsecure_report_checkxpmailRowChanged != null)) {
                    this.isp_sqlsecure_report_checkxpmailRowChanged(this, new isp_sqlsecure_report_checkxpmailRowChangeEvent(((isp_sqlsecure_report_checkxpmailRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.isp_sqlsecure_report_checkxpmailRowChanging != null)) {
                    this.isp_sqlsecure_report_checkxpmailRowChanging(this, new isp_sqlsecure_report_checkxpmailRowChangeEvent(((isp_sqlsecure_report_checkxpmailRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.isp_sqlsecure_report_checkxpmailRowDeleted != null)) {
                    this.isp_sqlsecure_report_checkxpmailRowDeleted(this, new isp_sqlsecure_report_checkxpmailRowChangeEvent(((isp_sqlsecure_report_checkxpmailRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.isp_sqlsecure_report_checkxpmailRowDeleting != null)) {
                    this.isp_sqlsecure_report_checkxpmailRowDeleting(this, new isp_sqlsecure_report_checkxpmailRowChangeEvent(((isp_sqlsecure_report_checkxpmailRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removeisp_sqlsecure_report_checkxpmailRow(isp_sqlsecure_report_checkxpmailRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                ReportsDataset ds = new ReportsDataset();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "isp_sqlsecure_report_checkxpmailDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class isp_sqlsecure_report_getauditfiltersDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnservername;
            
            private System.Data.DataColumn columnrulename;
            
            private System.Data.DataColumn columnruledescription;
            
            private System.Data.DataColumn columnmodifiedby;
            
            private System.Data.DataColumn columnmodifiedon;
            
            private System.Data.DataColumn columntype;
            
            private System.Data.DataColumn columnscope;
            
            private System.Data.DataColumn columnnamematchstring;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public isp_sqlsecure_report_getauditfiltersDataTable() {
                this.TableName = "isp_sqlsecure_report_getauditfilters";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal isp_sqlsecure_report_getauditfiltersDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected isp_sqlsecure_report_getauditfiltersDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn servernameColumn {
                get {
                    return this.columnservername;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn rulenameColumn {
                get {
                    return this.columnrulename;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ruledescriptionColumn {
                get {
                    return this.columnruledescription;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn modifiedbyColumn {
                get {
                    return this.columnmodifiedby;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn modifiedonColumn {
                get {
                    return this.columnmodifiedon;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn typeColumn {
                get {
                    return this.columntype;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn scopeColumn {
                get {
                    return this.columnscope;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn namematchstringColumn {
                get {
                    return this.columnnamematchstring;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public isp_sqlsecure_report_getauditfiltersRow this[int index] {
                get {
                    return ((isp_sqlsecure_report_getauditfiltersRow)(this.Rows[index]));
                }
            }
            
            public event isp_sqlsecure_report_getauditfiltersRowChangeEventHandler isp_sqlsecure_report_getauditfiltersRowChanging;
            
            public event isp_sqlsecure_report_getauditfiltersRowChangeEventHandler isp_sqlsecure_report_getauditfiltersRowChanged;
            
            public event isp_sqlsecure_report_getauditfiltersRowChangeEventHandler isp_sqlsecure_report_getauditfiltersRowDeleting;
            
            public event isp_sqlsecure_report_getauditfiltersRowChangeEventHandler isp_sqlsecure_report_getauditfiltersRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addisp_sqlsecure_report_getauditfiltersRow(isp_sqlsecure_report_getauditfiltersRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public isp_sqlsecure_report_getauditfiltersRow Addisp_sqlsecure_report_getauditfiltersRow(string servername, string rulename, string ruledescription, string modifiedby, System.DateTime modifiedon, string type, string scope, string namematchstring) {
                isp_sqlsecure_report_getauditfiltersRow rowisp_sqlsecure_report_getauditfiltersRow = ((isp_sqlsecure_report_getauditfiltersRow)(this.NewRow()));
                rowisp_sqlsecure_report_getauditfiltersRow.ItemArray = new object[] {
                        servername,
                        rulename,
                        ruledescription,
                        modifiedby,
                        modifiedon,
                        type,
                        scope,
                        namematchstring};
                this.Rows.Add(rowisp_sqlsecure_report_getauditfiltersRow);
                return rowisp_sqlsecure_report_getauditfiltersRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                isp_sqlsecure_report_getauditfiltersDataTable cln = ((isp_sqlsecure_report_getauditfiltersDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new isp_sqlsecure_report_getauditfiltersDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnservername = base.Columns["servername"];
                this.columnrulename = base.Columns["rulename"];
                this.columnruledescription = base.Columns["ruledescription"];
                this.columnmodifiedby = base.Columns["modifiedby"];
                this.columnmodifiedon = base.Columns["modifiedon"];
                this.columntype = base.Columns["type"];
                this.columnscope = base.Columns["scope"];
                this.columnnamematchstring = base.Columns["namematchstring"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnservername = new System.Data.DataColumn("servername", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnservername);
                this.columnrulename = new System.Data.DataColumn("rulename", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnrulename);
                this.columnruledescription = new System.Data.DataColumn("ruledescription", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnruledescription);
                this.columnmodifiedby = new System.Data.DataColumn("modifiedby", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnmodifiedby);
                this.columnmodifiedon = new System.Data.DataColumn("modifiedon", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnmodifiedon);
                this.columntype = new System.Data.DataColumn("type", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columntype);
                this.columnscope = new System.Data.DataColumn("scope", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnscope);
                this.columnnamematchstring = new System.Data.DataColumn("namematchstring", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnnamematchstring);
                this.columnservername.AllowDBNull = false;
                this.columnservername.MaxLength = 400;
                this.columnrulename.AllowDBNull = false;
                this.columnrulename.MaxLength = 256;
                this.columnruledescription.MaxLength = 80;
                this.columnmodifiedby.MaxLength = 500;
                this.columntype.AllowDBNull = false;
                this.columntype.MaxLength = 128;
                this.columnscope.ReadOnly = true;
                this.columnscope.MaxLength = 15;
                this.columnnamematchstring.ReadOnly = true;
                this.columnnamematchstring.MaxLength = 1000;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public isp_sqlsecure_report_getauditfiltersRow Newisp_sqlsecure_report_getauditfiltersRow() {
                return ((isp_sqlsecure_report_getauditfiltersRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new isp_sqlsecure_report_getauditfiltersRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(isp_sqlsecure_report_getauditfiltersRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.isp_sqlsecure_report_getauditfiltersRowChanged != null)) {
                    this.isp_sqlsecure_report_getauditfiltersRowChanged(this, new isp_sqlsecure_report_getauditfiltersRowChangeEvent(((isp_sqlsecure_report_getauditfiltersRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.isp_sqlsecure_report_getauditfiltersRowChanging != null)) {
                    this.isp_sqlsecure_report_getauditfiltersRowChanging(this, new isp_sqlsecure_report_getauditfiltersRowChangeEvent(((isp_sqlsecure_report_getauditfiltersRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.isp_sqlsecure_report_getauditfiltersRowDeleted != null)) {
                    this.isp_sqlsecure_report_getauditfiltersRowDeleted(this, new isp_sqlsecure_report_getauditfiltersRowChangeEvent(((isp_sqlsecure_report_getauditfiltersRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.isp_sqlsecure_report_getauditfiltersRowDeleting != null)) {
                    this.isp_sqlsecure_report_getauditfiltersRowDeleting(this, new isp_sqlsecure_report_getauditfiltersRowChangeEvent(((isp_sqlsecure_report_getauditfiltersRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removeisp_sqlsecure_report_getauditfiltersRow(isp_sqlsecure_report_getauditfiltersRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                ReportsDataset ds = new ReportsDataset();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "isp_sqlsecure_report_getauditfiltersDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class isp_sqlsecure_report_getuserpermissionsDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnconnectionname;
            
            private System.Data.DataColumn columnloginname;
            
            private System.Data.DataColumn columnlogintype;
            
            private System.Data.DataColumn columnserveraccess;
            
            private System.Data.DataColumn columndisabled;
            
            private System.Data.DataColumn columnrole;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public isp_sqlsecure_report_getuserpermissionsDataTable() {
                this.TableName = "isp_sqlsecure_report_getuserpermissions";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal isp_sqlsecure_report_getuserpermissionsDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected isp_sqlsecure_report_getuserpermissionsDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn connectionnameColumn {
                get {
                    return this.columnconnectionname;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn loginnameColumn {
                get {
                    return this.columnloginname;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn logintypeColumn {
                get {
                    return this.columnlogintype;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn serveraccessColumn {
                get {
                    return this.columnserveraccess;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn disabledColumn {
                get {
                    return this.columndisabled;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn roleColumn {
                get {
                    return this.columnrole;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public isp_sqlsecure_report_getuserpermissionsRow this[int index] {
                get {
                    return ((isp_sqlsecure_report_getuserpermissionsRow)(this.Rows[index]));
                }
            }
            
            public event isp_sqlsecure_report_getuserpermissionsRowChangeEventHandler isp_sqlsecure_report_getuserpermissionsRowChanging;
            
            public event isp_sqlsecure_report_getuserpermissionsRowChangeEventHandler isp_sqlsecure_report_getuserpermissionsRowChanged;
            
            public event isp_sqlsecure_report_getuserpermissionsRowChangeEventHandler isp_sqlsecure_report_getuserpermissionsRowDeleting;
            
            public event isp_sqlsecure_report_getuserpermissionsRowChangeEventHandler isp_sqlsecure_report_getuserpermissionsRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addisp_sqlsecure_report_getuserpermissionsRow(isp_sqlsecure_report_getuserpermissionsRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public isp_sqlsecure_report_getuserpermissionsRow Addisp_sqlsecure_report_getuserpermissionsRow(string connectionname, string loginname, string logintype, string serveraccess, string disabled, string role) {
                isp_sqlsecure_report_getuserpermissionsRow rowisp_sqlsecure_report_getuserpermissionsRow = ((isp_sqlsecure_report_getuserpermissionsRow)(this.NewRow()));
                rowisp_sqlsecure_report_getuserpermissionsRow.ItemArray = new object[] {
                        connectionname,
                        loginname,
                        logintype,
                        serveraccess,
                        disabled,
                        role};
                this.Rows.Add(rowisp_sqlsecure_report_getuserpermissionsRow);
                return rowisp_sqlsecure_report_getuserpermissionsRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                isp_sqlsecure_report_getuserpermissionsDataTable cln = ((isp_sqlsecure_report_getuserpermissionsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new isp_sqlsecure_report_getuserpermissionsDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnconnectionname = base.Columns["connectionname"];
                this.columnloginname = base.Columns["loginname"];
                this.columnlogintype = base.Columns["logintype"];
                this.columnserveraccess = base.Columns["serveraccess"];
                this.columndisabled = base.Columns["disabled"];
                this.columnrole = base.Columns["role"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnconnectionname = new System.Data.DataColumn("connectionname", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnconnectionname);
                this.columnloginname = new System.Data.DataColumn("loginname", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnloginname);
                this.columnlogintype = new System.Data.DataColumn("logintype", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnlogintype);
                this.columnserveraccess = new System.Data.DataColumn("serveraccess", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnserveraccess);
                this.columndisabled = new System.Data.DataColumn("disabled", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columndisabled);
                this.columnrole = new System.Data.DataColumn("role", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnrole);
                this.columnconnectionname.ReadOnly = true;
                this.columnloginname.ReadOnly = true;
                this.columnlogintype.ReadOnly = true;
                this.columnserveraccess.ReadOnly = true;
                this.columndisabled.ReadOnly = true;
                this.columnrole.ReadOnly = true;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public isp_sqlsecure_report_getuserpermissionsRow Newisp_sqlsecure_report_getuserpermissionsRow() {
                return ((isp_sqlsecure_report_getuserpermissionsRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new isp_sqlsecure_report_getuserpermissionsRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(isp_sqlsecure_report_getuserpermissionsRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.isp_sqlsecure_report_getuserpermissionsRowChanged != null)) {
                    this.isp_sqlsecure_report_getuserpermissionsRowChanged(this, new isp_sqlsecure_report_getuserpermissionsRowChangeEvent(((isp_sqlsecure_report_getuserpermissionsRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.isp_sqlsecure_report_getuserpermissionsRowChanging != null)) {
                    this.isp_sqlsecure_report_getuserpermissionsRowChanging(this, new isp_sqlsecure_report_getuserpermissionsRowChangeEvent(((isp_sqlsecure_report_getuserpermissionsRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.isp_sqlsecure_report_getuserpermissionsRowDeleted != null)) {
                    this.isp_sqlsecure_report_getuserpermissionsRowDeleted(this, new isp_sqlsecure_report_getuserpermissionsRowChangeEvent(((isp_sqlsecure_report_getuserpermissionsRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.isp_sqlsecure_report_getuserpermissionsRowDeleting != null)) {
                    this.isp_sqlsecure_report_getuserpermissionsRowDeleting(this, new isp_sqlsecure_report_getuserpermissionsRowChangeEvent(((isp_sqlsecure_report_getuserpermissionsRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removeisp_sqlsecure_report_getuserpermissionsRow(isp_sqlsecure_report_getuserpermissionsRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                ReportsDataset ds = new ReportsDataset();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "isp_sqlsecure_report_getuserpermissionsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class isp_sqlsecure_report_getuserdatabasepermissionsDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnsnapshotid;
            
            private System.Data.DataColumn columnpermissionlevel;
            
            private System.Data.DataColumn columnlogintype;
            
            private System.Data.DataColumn columnloginname;
            
            private System.Data.DataColumn columnconnectionname;
            
            private System.Data.DataColumn columndatabasename;
            
            private System.Data.DataColumn columnprincipalid;
            
            private System.Data.DataColumn columnprincipalname;
            
            private System.Data.DataColumn columnprincipaltype;
            
            private System.Data.DataColumn columndatabaseprincipal;
            
            private System.Data.DataColumn columndatabaseprincipaltype;
            
            private System.Data.DataColumn columngrantor;
            
            private System.Data.DataColumn columngrantorname;
            
            private System.Data.DataColumn columngrantee;
            
            private System.Data.DataColumn columngranteename;
            
            private System.Data.DataColumn columnclassid;
            
            private System.Data.DataColumn columnpermissiontype;
            
            private System.Data.DataColumn columncoveringfrom;
            
            private System.Data.DataColumn columnpermission;
            
            private System.Data.DataColumn columnisgrant;
            
            private System.Data.DataColumn columnisgrantwith;
            
            private System.Data.DataColumn columnisrevoke;
            
            private System.Data.DataColumn columnisdeny;
            
            private System.Data.DataColumn columnparentobjectid;
            
            private System.Data.DataColumn columnobjectid;
            
            private System.Data.DataColumn columnobjectname;
            
            private System.Data.DataColumn columnqualifiedname;
            
            private System.Data.DataColumn columnobjecttype;
            
            private System.Data.DataColumn columnschemaid;
            
            private System.Data.DataColumn columnschemaname;
            
            private System.Data.DataColumn columnowner;
            
            private System.Data.DataColumn columnownername;
            
            private System.Data.DataColumn columnisaliased;
            
            private System.Data.DataColumn columninherited;
            
            private System.Data.DataColumn columnsourcename;
            
            private System.Data.DataColumn columnsourcetype;
            
            private System.Data.DataColumn columnsourcepermission;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public isp_sqlsecure_report_getuserdatabasepermissionsDataTable() {
                this.TableName = "isp_sqlsecure_report_getuserdatabasepermissions";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal isp_sqlsecure_report_getuserdatabasepermissionsDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected isp_sqlsecure_report_getuserdatabasepermissionsDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn snapshotidColumn {
                get {
                    return this.columnsnapshotid;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn permissionlevelColumn {
                get {
                    return this.columnpermissionlevel;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn logintypeColumn {
                get {
                    return this.columnlogintype;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn loginnameColumn {
                get {
                    return this.columnloginname;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn connectionnameColumn {
                get {
                    return this.columnconnectionname;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn databasenameColumn {
                get {
                    return this.columndatabasename;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn principalidColumn {
                get {
                    return this.columnprincipalid;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn principalnameColumn {
                get {
                    return this.columnprincipalname;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn principaltypeColumn {
                get {
                    return this.columnprincipaltype;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn databaseprincipalColumn {
                get {
                    return this.columndatabaseprincipal;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn databaseprincipaltypeColumn {
                get {
                    return this.columndatabaseprincipaltype;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn grantorColumn {
                get {
                    return this.columngrantor;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn grantornameColumn {
                get {
                    return this.columngrantorname;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn granteeColumn {
                get {
                    return this.columngrantee;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn granteenameColumn {
                get {
                    return this.columngranteename;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn classidColumn {
                get {
                    return this.columnclassid;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn permissiontypeColumn {
                get {
                    return this.columnpermissiontype;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn coveringfromColumn {
                get {
                    return this.columncoveringfrom;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn permissionColumn {
                get {
                    return this.columnpermission;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn isgrantColumn {
                get {
                    return this.columnisgrant;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn isgrantwithColumn {
                get {
                    return this.columnisgrantwith;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn isrevokeColumn {
                get {
                    return this.columnisrevoke;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn isdenyColumn {
                get {
                    return this.columnisdeny;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn parentobjectidColumn {
                get {
                    return this.columnparentobjectid;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn objectidColumn {
                get {
                    return this.columnobjectid;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn objectnameColumn {
                get {
                    return this.columnobjectname;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn qualifiednameColumn {
                get {
                    return this.columnqualifiedname;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn objecttypeColumn {
                get {
                    return this.columnobjecttype;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn schemaidColumn {
                get {
                    return this.columnschemaid;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn schemanameColumn {
                get {
                    return this.columnschemaname;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ownerColumn {
                get {
                    return this.columnowner;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ownernameColumn {
                get {
                    return this.columnownername;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn isaliasedColumn {
                get {
                    return this.columnisaliased;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn inheritedColumn {
                get {
                    return this.columninherited;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn sourcenameColumn {
                get {
                    return this.columnsourcename;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn sourcetypeColumn {
                get {
                    return this.columnsourcetype;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn sourcepermissionColumn {
                get {
                    return this.columnsourcepermission;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public isp_sqlsecure_report_getuserdatabasepermissionsRow this[int index] {
                get {
                    return ((isp_sqlsecure_report_getuserdatabasepermissionsRow)(this.Rows[index]));
                }
            }
            
            public event isp_sqlsecure_report_getuserdatabasepermissionsRowChangeEventHandler isp_sqlsecure_report_getuserdatabasepermissionsRowChanging;
            
            public event isp_sqlsecure_report_getuserdatabasepermissionsRowChangeEventHandler isp_sqlsecure_report_getuserdatabasepermissionsRowChanged;
            
            public event isp_sqlsecure_report_getuserdatabasepermissionsRowChangeEventHandler isp_sqlsecure_report_getuserdatabasepermissionsRowDeleting;
            
            public event isp_sqlsecure_report_getuserdatabasepermissionsRowChangeEventHandler isp_sqlsecure_report_getuserdatabasepermissionsRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addisp_sqlsecure_report_getuserdatabasepermissionsRow(isp_sqlsecure_report_getuserdatabasepermissionsRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public isp_sqlsecure_report_getuserdatabasepermissionsRow Addisp_sqlsecure_report_getuserdatabasepermissionsRow(
                        int snapshotid, 
                        string permissionlevel, 
                        string logintype, 
                        string loginname, 
                        string connectionname, 
                        string databasename, 
                        int principalid, 
                        string principalname, 
                        string principaltype, 
                        string databaseprincipal, 
                        string databaseprincipaltype, 
                        int grantor, 
                        string grantorname, 
                        int grantee, 
                        string granteename, 
                        int classid, 
                        string permissiontype, 
                        string coveringfrom, 
                        string permission, 
                        string isgrant, 
                        string isgrantwith, 
                        string isrevoke, 
                        string isdeny, 
                        int parentobjectid, 
                        int objectid, 
                        string objectname, 
                        string qualifiedname, 
                        string objecttype, 
                        int schemaid, 
                        string schemaname, 
                        int owner, 
                        string ownername, 
                        string isaliased, 
                        string inherited, 
                        string sourcename, 
                        string sourcetype, 
                        string sourcepermission) {
                isp_sqlsecure_report_getuserdatabasepermissionsRow rowisp_sqlsecure_report_getuserdatabasepermissionsRow = ((isp_sqlsecure_report_getuserdatabasepermissionsRow)(this.NewRow()));
                rowisp_sqlsecure_report_getuserdatabasepermissionsRow.ItemArray = new object[] {
                        snapshotid,
                        permissionlevel,
                        logintype,
                        loginname,
                        connectionname,
                        databasename,
                        principalid,
                        principalname,
                        principaltype,
                        databaseprincipal,
                        databaseprincipaltype,
                        grantor,
                        grantorname,
                        grantee,
                        granteename,
                        classid,
                        permissiontype,
                        coveringfrom,
                        permission,
                        isgrant,
                        isgrantwith,
                        isrevoke,
                        isdeny,
                        parentobjectid,
                        objectid,
                        objectname,
                        qualifiedname,
                        objecttype,
                        schemaid,
                        schemaname,
                        owner,
                        ownername,
                        isaliased,
                        inherited,
                        sourcename,
                        sourcetype,
                        sourcepermission};
                this.Rows.Add(rowisp_sqlsecure_report_getuserdatabasepermissionsRow);
                return rowisp_sqlsecure_report_getuserdatabasepermissionsRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                isp_sqlsecure_report_getuserdatabasepermissionsDataTable cln = ((isp_sqlsecure_report_getuserdatabasepermissionsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new isp_sqlsecure_report_getuserdatabasepermissionsDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnsnapshotid = base.Columns["snapshotid"];
                this.columnpermissionlevel = base.Columns["permissionlevel"];
                this.columnlogintype = base.Columns["logintype"];
                this.columnloginname = base.Columns["loginname"];
                this.columnconnectionname = base.Columns["connectionname"];
                this.columndatabasename = base.Columns["databasename"];
                this.columnprincipalid = base.Columns["principalid"];
                this.columnprincipalname = base.Columns["principalname"];
                this.columnprincipaltype = base.Columns["principaltype"];
                this.columndatabaseprincipal = base.Columns["databaseprincipal"];
                this.columndatabaseprincipaltype = base.Columns["databaseprincipaltype"];
                this.columngrantor = base.Columns["grantor"];
                this.columngrantorname = base.Columns["grantorname"];
                this.columngrantee = base.Columns["grantee"];
                this.columngranteename = base.Columns["granteename"];
                this.columnclassid = base.Columns["classid"];
                this.columnpermissiontype = base.Columns["permissiontype"];
                this.columncoveringfrom = base.Columns["coveringfrom"];
                this.columnpermission = base.Columns["permission"];
                this.columnisgrant = base.Columns["isgrant"];
                this.columnisgrantwith = base.Columns["isgrantwith"];
                this.columnisrevoke = base.Columns["isrevoke"];
                this.columnisdeny = base.Columns["isdeny"];
                this.columnparentobjectid = base.Columns["parentobjectid"];
                this.columnobjectid = base.Columns["objectid"];
                this.columnobjectname = base.Columns["objectname"];
                this.columnqualifiedname = base.Columns["qualifiedname"];
                this.columnobjecttype = base.Columns["objecttype"];
                this.columnschemaid = base.Columns["schemaid"];
                this.columnschemaname = base.Columns["schemaname"];
                this.columnowner = base.Columns["owner"];
                this.columnownername = base.Columns["ownername"];
                this.columnisaliased = base.Columns["isaliased"];
                this.columninherited = base.Columns["inherited"];
                this.columnsourcename = base.Columns["sourcename"];
                this.columnsourcetype = base.Columns["sourcetype"];
                this.columnsourcepermission = base.Columns["sourcepermission"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnsnapshotid = new System.Data.DataColumn("snapshotid", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnsnapshotid);
                this.columnpermissionlevel = new System.Data.DataColumn("permissionlevel", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnpermissionlevel);
                this.columnlogintype = new System.Data.DataColumn("logintype", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnlogintype);
                this.columnloginname = new System.Data.DataColumn("loginname", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnloginname);
                this.columnconnectionname = new System.Data.DataColumn("connectionname", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnconnectionname);
                this.columndatabasename = new System.Data.DataColumn("databasename", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columndatabasename);
                this.columnprincipalid = new System.Data.DataColumn("principalid", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnprincipalid);
                this.columnprincipalname = new System.Data.DataColumn("principalname", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnprincipalname);
                this.columnprincipaltype = new System.Data.DataColumn("principaltype", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnprincipaltype);
                this.columndatabaseprincipal = new System.Data.DataColumn("databaseprincipal", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columndatabaseprincipal);
                this.columndatabaseprincipaltype = new System.Data.DataColumn("databaseprincipaltype", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columndatabaseprincipaltype);
                this.columngrantor = new System.Data.DataColumn("grantor", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columngrantor);
                this.columngrantorname = new System.Data.DataColumn("grantorname", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columngrantorname);
                this.columngrantee = new System.Data.DataColumn("grantee", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columngrantee);
                this.columngranteename = new System.Data.DataColumn("granteename", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columngranteename);
                this.columnclassid = new System.Data.DataColumn("classid", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnclassid);
                this.columnpermissiontype = new System.Data.DataColumn("permissiontype", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnpermissiontype);
                this.columncoveringfrom = new System.Data.DataColumn("coveringfrom", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columncoveringfrom);
                this.columnpermission = new System.Data.DataColumn("permission", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnpermission);
                this.columnisgrant = new System.Data.DataColumn("isgrant", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnisgrant);
                this.columnisgrantwith = new System.Data.DataColumn("isgrantwith", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnisgrantwith);
                this.columnisrevoke = new System.Data.DataColumn("isrevoke", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnisrevoke);
                this.columnisdeny = new System.Data.DataColumn("isdeny", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnisdeny);
                this.columnparentobjectid = new System.Data.DataColumn("parentobjectid", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnparentobjectid);
                this.columnobjectid = new System.Data.DataColumn("objectid", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnobjectid);
                this.columnobjectname = new System.Data.DataColumn("objectname", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnobjectname);
                this.columnqualifiedname = new System.Data.DataColumn("qualifiedname", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnqualifiedname);
                this.columnobjecttype = new System.Data.DataColumn("objecttype", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnobjecttype);
                this.columnschemaid = new System.Data.DataColumn("schemaid", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnschemaid);
                this.columnschemaname = new System.Data.DataColumn("schemaname", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnschemaname);
                this.columnowner = new System.Data.DataColumn("owner", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnowner);
                this.columnownername = new System.Data.DataColumn("ownername", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnownername);
                this.columnisaliased = new System.Data.DataColumn("isaliased", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnisaliased);
                this.columninherited = new System.Data.DataColumn("inherited", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columninherited);
                this.columnsourcename = new System.Data.DataColumn("sourcename", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnsourcename);
                this.columnsourcetype = new System.Data.DataColumn("sourcetype", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnsourcetype);
                this.columnsourcepermission = new System.Data.DataColumn("sourcepermission", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnsourcepermission);
                this.columnsnapshotid.ReadOnly = true;
                this.columnpermissionlevel.ReadOnly = true;
                this.columnlogintype.ReadOnly = true;
                this.columnloginname.ReadOnly = true;
                this.columnconnectionname.ReadOnly = true;
                this.columndatabasename.ReadOnly = true;
                this.columnprincipalid.ReadOnly = true;
                this.columnprincipalname.ReadOnly = true;
                this.columnprincipaltype.ReadOnly = true;
                this.columndatabaseprincipal.ReadOnly = true;
                this.columndatabaseprincipaltype.ReadOnly = true;
                this.columngrantor.ReadOnly = true;
                this.columngrantorname.ReadOnly = true;
                this.columngrantee.ReadOnly = true;
                this.columngranteename.ReadOnly = true;
                this.columnclassid.ReadOnly = true;
                this.columnpermissiontype.ReadOnly = true;
                this.columncoveringfrom.ReadOnly = true;
                this.columnpermission.ReadOnly = true;
                this.columnisgrant.ReadOnly = true;
                this.columnisgrantwith.ReadOnly = true;
                this.columnisrevoke.ReadOnly = true;
                this.columnisdeny.ReadOnly = true;
                this.columnparentobjectid.ReadOnly = true;
                this.columnobjectid.ReadOnly = true;
                this.columnobjectname.ReadOnly = true;
                this.columnqualifiedname.ReadOnly = true;
                this.columnobjecttype.ReadOnly = true;
                this.columnschemaid.ReadOnly = true;
                this.columnschemaname.ReadOnly = true;
                this.columnowner.ReadOnly = true;
                this.columnownername.ReadOnly = true;
                this.columnisaliased.ReadOnly = true;
                this.columninherited.ReadOnly = true;
                this.columnsourcename.ReadOnly = true;
                this.columnsourcetype.ReadOnly = true;
                this.columnsourcepermission.ReadOnly = true;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public isp_sqlsecure_report_getuserdatabasepermissionsRow Newisp_sqlsecure_report_getuserdatabasepermissionsRow() {
                return ((isp_sqlsecure_report_getuserdatabasepermissionsRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new isp_sqlsecure_report_getuserdatabasepermissionsRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(isp_sqlsecure_report_getuserdatabasepermissionsRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.isp_sqlsecure_report_getuserdatabasepermissionsRowChanged != null)) {
                    this.isp_sqlsecure_report_getuserdatabasepermissionsRowChanged(this, new isp_sqlsecure_report_getuserdatabasepermissionsRowChangeEvent(((isp_sqlsecure_report_getuserdatabasepermissionsRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.isp_sqlsecure_report_getuserdatabasepermissionsRowChanging != null)) {
                    this.isp_sqlsecure_report_getuserdatabasepermissionsRowChanging(this, new isp_sqlsecure_report_getuserdatabasepermissionsRowChangeEvent(((isp_sqlsecure_report_getuserdatabasepermissionsRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.isp_sqlsecure_report_getuserdatabasepermissionsRowDeleted != null)) {
                    this.isp_sqlsecure_report_getuserdatabasepermissionsRowDeleted(this, new isp_sqlsecure_report_getuserdatabasepermissionsRowChangeEvent(((isp_sqlsecure_report_getuserdatabasepermissionsRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.isp_sqlsecure_report_getuserdatabasepermissionsRowDeleting != null)) {
                    this.isp_sqlsecure_report_getuserdatabasepermissionsRowDeleting(this, new isp_sqlsecure_report_getuserdatabasepermissionsRowChangeEvent(((isp_sqlsecure_report_getuserdatabasepermissionsRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removeisp_sqlsecure_report_getuserdatabasepermissionsRow(isp_sqlsecure_report_getuserdatabasepermissionsRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                ReportsDataset ds = new ReportsDataset();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "isp_sqlsecure_report_getuserdatabasepermissionsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class isp_sqlsecure_report_getguestenabledserversRow : System.Data.DataRow {
            
            private isp_sqlsecure_report_getguestenabledserversDataTable tableisp_sqlsecure_report_getguestenabledservers;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal isp_sqlsecure_report_getguestenabledserversRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableisp_sqlsecure_report_getguestenabledservers = ((isp_sqlsecure_report_getguestenabledserversDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string connectionname {
                get {
                    return ((string)(this[this.tableisp_sqlsecure_report_getguestenabledservers.connectionnameColumn]));
                }
                set {
                    this[this.tableisp_sqlsecure_report_getguestenabledservers.connectionnameColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string databasename {
                get {
                    return ((string)(this[this.tableisp_sqlsecure_report_getguestenabledservers.databasenameColumn]));
                }
                set {
                    this[this.tableisp_sqlsecure_report_getguestenabledservers.databasenameColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string owner {
                get {
                    try {
                        return ((string)(this[this.tableisp_sqlsecure_report_getguestenabledservers.ownerColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'owner\' in table \'isp_sqlsecure_report_getguestenabledserver" +
                                "s\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableisp_sqlsecure_report_getguestenabledservers.ownerColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsownerNull() {
                return this.IsNull(this.tableisp_sqlsecure_report_getguestenabledservers.ownerColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetownerNull() {
                this[this.tableisp_sqlsecure_report_getguestenabledservers.ownerColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class isp_sqlsecure_report_getauditedinstancesRow : System.Data.DataRow {
            
            private isp_sqlsecure_report_getauditedinstancesDataTable tableisp_sqlsecure_report_getauditedinstances;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal isp_sqlsecure_report_getauditedinstancesRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableisp_sqlsecure_report_getauditedinstances = ((isp_sqlsecure_report_getauditedinstancesDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string servername {
                get {
                    try {
                        return ((string)(this[this.tableisp_sqlsecure_report_getauditedinstances.servernameColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'servername\' in table \'isp_sqlsecure_report_getauditedinstan" +
                                "ces\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableisp_sqlsecure_report_getauditedinstances.servernameColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string instancename {
                get {
                    try {
                        return ((string)(this[this.tableisp_sqlsecure_report_getauditedinstances.instancenameColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'instancename\' in table \'isp_sqlsecure_report_getauditedinst" +
                                "ances\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableisp_sqlsecure_report_getauditedinstances.instancenameColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string version {
                get {
                    try {
                        return ((string)(this[this.tableisp_sqlsecure_report_getauditedinstances.versionColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'version\' in table \'isp_sqlsecure_report_getauditedinstances" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableisp_sqlsecure_report_getauditedinstances.versionColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string edition {
                get {
                    try {
                        return ((string)(this[this.tableisp_sqlsecure_report_getauditedinstances.editionColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'edition\' in table \'isp_sqlsecure_report_getauditedinstances" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableisp_sqlsecure_report_getauditedinstances.editionColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string authenticationmode {
                get {
                    try {
                        return ((string)(this[this.tableisp_sqlsecure_report_getauditedinstances.authenticationmodeColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'authenticationmode\' in table \'isp_sqlsecure_report_getaudit" +
                                "edinstances\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableisp_sqlsecure_report_getauditedinstances.authenticationmodeColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string os {
                get {
                    try {
                        return ((string)(this[this.tableisp_sqlsecure_report_getauditedinstances.osColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'os\' in table \'isp_sqlsecure_report_getauditedinstances\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableisp_sqlsecure_report_getauditedinstances.osColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int numwindowsuser {
                get {
                    try {
                        return ((int)(this[this.tableisp_sqlsecure_report_getauditedinstances.numwindowsuserColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'numwindowsuser\' in table \'isp_sqlsecure_report_getauditedin" +
                                "stances\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableisp_sqlsecure_report_getauditedinstances.numwindowsuserColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int numwindowsgroup {
                get {
                    try {
                        return ((int)(this[this.tableisp_sqlsecure_report_getauditedinstances.numwindowsgroupColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'numwindowsgroup\' in table \'isp_sqlsecure_report_getauditedi" +
                                "nstances\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableisp_sqlsecure_report_getauditedinstances.numwindowsgroupColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int numsqllogin {
                get {
                    try {
                        return ((int)(this[this.tableisp_sqlsecure_report_getauditedinstances.numsqlloginColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'numsqllogin\' in table \'isp_sqlsecure_report_getauditedinsta" +
                                "nces\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableisp_sqlsecure_report_getauditedinstances.numsqlloginColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string connectionname {
                get {
                    try {
                        return ((string)(this[this.tableisp_sqlsecure_report_getauditedinstances.connectionnameColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'connectionname\' in table \'isp_sqlsecure_report_getauditedin" +
                                "stances\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableisp_sqlsecure_report_getauditedinstances.connectionnameColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int snapshottime {
                get {
                    try {
                        return ((int)(this[this.tableisp_sqlsecure_report_getauditedinstances.snapshottimeColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'snapshottime\' in table \'isp_sqlsecure_report_getauditedinst" +
                                "ances\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableisp_sqlsecure_report_getauditedinstances.snapshottimeColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsservernameNull() {
                return this.IsNull(this.tableisp_sqlsecure_report_getauditedinstances.servernameColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetservernameNull() {
                this[this.tableisp_sqlsecure_report_getauditedinstances.servernameColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsinstancenameNull() {
                return this.IsNull(this.tableisp_sqlsecure_report_getauditedinstances.instancenameColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetinstancenameNull() {
                this[this.tableisp_sqlsecure_report_getauditedinstances.instancenameColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsversionNull() {
                return this.IsNull(this.tableisp_sqlsecure_report_getauditedinstances.versionColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetversionNull() {
                this[this.tableisp_sqlsecure_report_getauditedinstances.versionColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IseditionNull() {
                return this.IsNull(this.tableisp_sqlsecure_report_getauditedinstances.editionColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SeteditionNull() {
                this[this.tableisp_sqlsecure_report_getauditedinstances.editionColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsauthenticationmodeNull() {
                return this.IsNull(this.tableisp_sqlsecure_report_getauditedinstances.authenticationmodeColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetauthenticationmodeNull() {
                this[this.tableisp_sqlsecure_report_getauditedinstances.authenticationmodeColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsosNull() {
                return this.IsNull(this.tableisp_sqlsecure_report_getauditedinstances.osColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetosNull() {
                this[this.tableisp_sqlsecure_report_getauditedinstances.osColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsnumwindowsuserNull() {
                return this.IsNull(this.tableisp_sqlsecure_report_getauditedinstances.numwindowsuserColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetnumwindowsuserNull() {
                this[this.tableisp_sqlsecure_report_getauditedinstances.numwindowsuserColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsnumwindowsgroupNull() {
                return this.IsNull(this.tableisp_sqlsecure_report_getauditedinstances.numwindowsgroupColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetnumwindowsgroupNull() {
                this[this.tableisp_sqlsecure_report_getauditedinstances.numwindowsgroupColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsnumsqlloginNull() {
                return this.IsNull(this.tableisp_sqlsecure_report_getauditedinstances.numsqlloginColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetnumsqlloginNull() {
                this[this.tableisp_sqlsecure_report_getauditedinstances.numsqlloginColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsconnectionnameNull() {
                return this.IsNull(this.tableisp_sqlsecure_report_getauditedinstances.connectionnameColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetconnectionnameNull() {
                this[this.tableisp_sqlsecure_report_getauditedinstances.connectionnameColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssnapshottimeNull() {
                return this.IsNull(this.tableisp_sqlsecure_report_getauditedinstances.snapshottimeColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetsnapshottimeNull() {
                this[this.tableisp_sqlsecure_report_getauditedinstances.snapshottimeColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class isp_sqlsecure_report_getserveraccessRow : System.Data.DataRow {
            
            private isp_sqlsecure_report_getserveraccessDataTable tableisp_sqlsecure_report_getserveraccess;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal isp_sqlsecure_report_getserveraccessRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableisp_sqlsecure_report_getserveraccess = ((isp_sqlsecure_report_getserveraccessDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int snapshotid {
                get {
                    try {
                        return ((int)(this[this.tableisp_sqlsecure_report_getserveraccess.snapshotidColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'snapshotid\' in table \'isp_sqlsecure_report_getserveraccess\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tableisp_sqlsecure_report_getserveraccess.snapshotidColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string connectionname {
                get {
                    try {
                        return ((string)(this[this.tableisp_sqlsecure_report_getserveraccess.connectionnameColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'connectionname\' in table \'isp_sqlsecure_report_getserveracc" +
                                "ess\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableisp_sqlsecure_report_getserveraccess.connectionnameColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string logintype {
                get {
                    try {
                        return ((string)(this[this.tableisp_sqlsecure_report_getserveraccess.logintypeColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'logintype\' in table \'isp_sqlsecure_report_getserveraccess\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tableisp_sqlsecure_report_getserveraccess.logintypeColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string loginname {
                get {
                    try {
                        return ((string)(this[this.tableisp_sqlsecure_report_getserveraccess.loginnameColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'loginname\' in table \'isp_sqlsecure_report_getserveraccess\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tableisp_sqlsecure_report_getserveraccess.loginnameColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssnapshotidNull() {
                return this.IsNull(this.tableisp_sqlsecure_report_getserveraccess.snapshotidColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetsnapshotidNull() {
                this[this.tableisp_sqlsecure_report_getserveraccess.snapshotidColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsconnectionnameNull() {
                return this.IsNull(this.tableisp_sqlsecure_report_getserveraccess.connectionnameColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetconnectionnameNull() {
                this[this.tableisp_sqlsecure_report_getserveraccess.connectionnameColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IslogintypeNull() {
                return this.IsNull(this.tableisp_sqlsecure_report_getserveraccess.logintypeColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetlogintypeNull() {
                this[this.tableisp_sqlsecure_report_getserveraccess.logintypeColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsloginnameNull() {
                return this.IsNull(this.tableisp_sqlsecure_report_getserveraccess.loginnameColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetloginnameNull() {
                this[this.tableisp_sqlsecure_report_getserveraccess.loginnameColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class isp_sqlsecure_report_authenticationRow : System.Data.DataRow {
            
            private isp_sqlsecure_report_authenticationDataTable tableisp_sqlsecure_report_authentication;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal isp_sqlsecure_report_authenticationRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableisp_sqlsecure_report_authentication = ((isp_sqlsecure_report_authenticationDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string connectionname {
                get {
                    return ((string)(this[this.tableisp_sqlsecure_report_authentication.connectionnameColumn]));
                }
                set {
                    this[this.tableisp_sqlsecure_report_authentication.connectionnameColumn] = value;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class isp_sqlsecure_report_checkwellknowngroupRow : System.Data.DataRow {
            
            private isp_sqlsecure_report_checkwellknowngroupDataTable tableisp_sqlsecure_report_checkwellknowngroup;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal isp_sqlsecure_report_checkwellknowngroupRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableisp_sqlsecure_report_checkwellknowngroup = ((isp_sqlsecure_report_checkwellknowngroupDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string connectionname {
                get {
                    try {
                        return ((string)(this[this.tableisp_sqlsecure_report_checkwellknowngroup.connectionnameColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'connectionname\' in table \'isp_sqlsecure_report_checkwellkno" +
                                "wngroup\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableisp_sqlsecure_report_checkwellknowngroup.connectionnameColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string name {
                get {
                    try {
                        return ((string)(this[this.tableisp_sqlsecure_report_checkwellknowngroup.nameColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'name\' in table \'isp_sqlsecure_report_checkwellknowngroup\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tableisp_sqlsecure_report_checkwellknowngroup.nameColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string groupname {
                get {
                    try {
                        return ((string)(this[this.tableisp_sqlsecure_report_checkwellknowngroup.groupnameColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'groupname\' in table \'isp_sqlsecure_report_checkwellknowngro" +
                                "up\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableisp_sqlsecure_report_checkwellknowngroup.groupnameColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string access {
                get {
                    try {
                        return ((string)(this[this.tableisp_sqlsecure_report_checkwellknowngroup.accessColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'access\' in table \'isp_sqlsecure_report_checkwellknowngroup\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tableisp_sqlsecure_report_checkwellknowngroup.accessColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsconnectionnameNull() {
                return this.IsNull(this.tableisp_sqlsecure_report_checkwellknowngroup.connectionnameColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetconnectionnameNull() {
                this[this.tableisp_sqlsecure_report_checkwellknowngroup.connectionnameColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsnameNull() {
                return this.IsNull(this.tableisp_sqlsecure_report_checkwellknowngroup.nameColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetnameNull() {
                this[this.tableisp_sqlsecure_report_checkwellknowngroup.nameColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsgroupnameNull() {
                return this.IsNull(this.tableisp_sqlsecure_report_checkwellknowngroup.groupnameColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetgroupnameNull() {
                this[this.tableisp_sqlsecure_report_checkwellknowngroup.groupnameColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsaccessNull() {
                return this.IsNull(this.tableisp_sqlsecure_report_checkwellknowngroup.accessColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetaccessNull() {
                this[this.tableisp_sqlsecure_report_checkwellknowngroup.accessColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class isp_sqlsecure_report_sysadmin_administratorRow : System.Data.DataRow {
            
            private isp_sqlsecure_report_sysadmin_administratorDataTable tableisp_sqlsecure_report_sysadmin_administrator;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal isp_sqlsecure_report_sysadmin_administratorRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableisp_sqlsecure_report_sysadmin_administrator = ((isp_sqlsecure_report_sysadmin_administratorDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string connectionname {
                get {
                    try {
                        return ((string)(this[this.tableisp_sqlsecure_report_sysadmin_administrator.connectionnameColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'connectionname\' in table \'isp_sqlsecure_report_sysadmin_adm" +
                                "inistrator\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableisp_sqlsecure_report_sysadmin_administrator.connectionnameColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string login {
                get {
                    try {
                        return ((string)(this[this.tableisp_sqlsecure_report_sysadmin_administrator.loginColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'login\' in table \'isp_sqlsecure_report_sysadmin_administrato" +
                                "r\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableisp_sqlsecure_report_sysadmin_administrator.loginColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string fixedrole {
                get {
                    try {
                        return ((string)(this[this.tableisp_sqlsecure_report_sysadmin_administrator.fixedroleColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'fixedrole\' in table \'isp_sqlsecure_report_sysadmin_administ" +
                                "rator\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableisp_sqlsecure_report_sysadmin_administrator.fixedroleColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsconnectionnameNull() {
                return this.IsNull(this.tableisp_sqlsecure_report_sysadmin_administrator.connectionnameColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetconnectionnameNull() {
                this[this.tableisp_sqlsecure_report_sysadmin_administrator.connectionnameColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsloginNull() {
                return this.IsNull(this.tableisp_sqlsecure_report_sysadmin_administrator.loginColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetloginNull() {
                this[this.tableisp_sqlsecure_report_sysadmin_administrator.loginColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsfixedroleNull() {
                return this.IsNull(this.tableisp_sqlsecure_report_sysadmin_administrator.fixedroleColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetfixedroleNull() {
                this[this.tableisp_sqlsecure_report_sysadmin_administrator.fixedroleColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class isp_sqlsecure_report_orphanedloginsRow : System.Data.DataRow {
            
            private isp_sqlsecure_report_orphanedloginsDataTable tableisp_sqlsecure_report_orphanedlogins;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal isp_sqlsecure_report_orphanedloginsRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableisp_sqlsecure_report_orphanedlogins = ((isp_sqlsecure_report_orphanedloginsDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string connectionname {
                get {
                    try {
                        return ((string)(this[this.tableisp_sqlsecure_report_orphanedlogins.connectionnameColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'connectionname\' in table \'isp_sqlsecure_report_orphanedlogi" +
                                "ns\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableisp_sqlsecure_report_orphanedlogins.connectionnameColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string name {
                get {
                    try {
                        return ((string)(this[this.tableisp_sqlsecure_report_orphanedlogins.nameColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'name\' in table \'isp_sqlsecure_report_orphanedlogins\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableisp_sqlsecure_report_orphanedlogins.nameColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string type {
                get {
                    try {
                        return ((string)(this[this.tableisp_sqlsecure_report_orphanedlogins.typeColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'type\' in table \'isp_sqlsecure_report_orphanedlogins\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableisp_sqlsecure_report_orphanedlogins.typeColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string state {
                get {
                    try {
                        return ((string)(this[this.tableisp_sqlsecure_report_orphanedlogins.stateColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'state\' in table \'isp_sqlsecure_report_orphanedlogins\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableisp_sqlsecure_report_orphanedlogins.stateColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsconnectionnameNull() {
                return this.IsNull(this.tableisp_sqlsecure_report_orphanedlogins.connectionnameColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetconnectionnameNull() {
                this[this.tableisp_sqlsecure_report_orphanedlogins.connectionnameColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsnameNull() {
                return this.IsNull(this.tableisp_sqlsecure_report_orphanedlogins.nameColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetnameNull() {
                this[this.tableisp_sqlsecure_report_orphanedlogins.nameColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IstypeNull() {
                return this.IsNull(this.tableisp_sqlsecure_report_orphanedlogins.typeColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SettypeNull() {
                this[this.tableisp_sqlsecure_report_orphanedlogins.typeColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsstateNull() {
                return this.IsNull(this.tableisp_sqlsecure_report_orphanedlogins.stateColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetstateNull() {
                this[this.tableisp_sqlsecure_report_orphanedlogins.stateColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class isp_sqlsecure_report_dbuserfixedroleRow : System.Data.DataRow {
            
            private isp_sqlsecure_report_dbuserfixedroleDataTable tableisp_sqlsecure_report_dbuserfixedrole;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal isp_sqlsecure_report_dbuserfixedroleRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableisp_sqlsecure_report_dbuserfixedrole = ((isp_sqlsecure_report_dbuserfixedroleDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string connectionname {
                get {
                    try {
                        return ((string)(this[this.tableisp_sqlsecure_report_dbuserfixedrole.connectionnameColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'connectionname\' in table \'isp_sqlsecure_report_dbuserfixedr" +
                                "ole\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableisp_sqlsecure_report_dbuserfixedrole.connectionnameColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string databasename {
                get {
                    try {
                        return ((string)(this[this.tableisp_sqlsecure_report_dbuserfixedrole.databasenameColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'databasename\' in table \'isp_sqlsecure_report_dbuserfixedrol" +
                                "e\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableisp_sqlsecure_report_dbuserfixedrole.databasenameColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string username {
                get {
                    try {
                        return ((string)(this[this.tableisp_sqlsecure_report_dbuserfixedrole.usernameColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'username\' in table \'isp_sqlsecure_report_dbuserfixedrole\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tableisp_sqlsecure_report_dbuserfixedrole.usernameColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string role {
                get {
                    try {
                        return ((string)(this[this.tableisp_sqlsecure_report_dbuserfixedrole.roleColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'role\' in table \'isp_sqlsecure_report_dbuserfixedrole\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableisp_sqlsecure_report_dbuserfixedrole.roleColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsconnectionnameNull() {
                return this.IsNull(this.tableisp_sqlsecure_report_dbuserfixedrole.connectionnameColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetconnectionnameNull() {
                this[this.tableisp_sqlsecure_report_dbuserfixedrole.connectionnameColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdatabasenameNull() {
                return this.IsNull(this.tableisp_sqlsecure_report_dbuserfixedrole.databasenameColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdatabasenameNull() {
                this[this.tableisp_sqlsecure_report_dbuserfixedrole.databasenameColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsusernameNull() {
                return this.IsNull(this.tableisp_sqlsecure_report_dbuserfixedrole.usernameColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetusernameNull() {
                this[this.tableisp_sqlsecure_report_dbuserfixedrole.usernameColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsroleNull() {
                return this.IsNull(this.tableisp_sqlsecure_report_dbuserfixedrole.roleColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetroleNull() {
                this[this.tableisp_sqlsecure_report_dbuserfixedrole.roleColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class isp_sqlsecure_report_checkcmdshellRow : System.Data.DataRow {
            
            private isp_sqlsecure_report_checkcmdshellDataTable tableisp_sqlsecure_report_checkcmdshell;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal isp_sqlsecure_report_checkcmdshellRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableisp_sqlsecure_report_checkcmdshell = ((isp_sqlsecure_report_checkcmdshellDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string connectionname {
                get {
                    try {
                        return ((string)(this[this.tableisp_sqlsecure_report_checkcmdshell.connectionnameColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'connectionname\' in table \'isp_sqlsecure_report_checkcmdshel" +
                                "l\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableisp_sqlsecure_report_checkcmdshell.connectionnameColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string name {
                get {
                    try {
                        return ((string)(this[this.tableisp_sqlsecure_report_checkcmdshell.nameColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'name\' in table \'isp_sqlsecure_report_checkcmdshell\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableisp_sqlsecure_report_checkcmdshell.nameColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string databasename {
                get {
                    try {
                        return ((string)(this[this.tableisp_sqlsecure_report_checkcmdshell.databasenameColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'databasename\' in table \'isp_sqlsecure_report_checkcmdshell\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tableisp_sqlsecure_report_checkcmdshell.databasenameColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsconnectionnameNull() {
                return this.IsNull(this.tableisp_sqlsecure_report_checkcmdshell.connectionnameColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetconnectionnameNull() {
                this[this.tableisp_sqlsecure_report_checkcmdshell.connectionnameColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsnameNull() {
                return this.IsNull(this.tableisp_sqlsecure_report_checkcmdshell.nameColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetnameNull() {
                this[this.tableisp_sqlsecure_report_checkcmdshell.nameColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdatabasenameNull() {
                return this.IsNull(this.tableisp_sqlsecure_report_checkcmdshell.databasenameColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdatabasenameNull() {
                this[this.tableisp_sqlsecure_report_checkcmdshell.databasenameColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class isp_sqlsecure_report_getuserinfoRow : System.Data.DataRow {
            
            private isp_sqlsecure_report_getuserinfoDataTable tableisp_sqlsecure_report_getuserinfo;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal isp_sqlsecure_report_getuserinfoRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableisp_sqlsecure_report_getuserinfo = ((isp_sqlsecure_report_getuserinfoDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string connectionname {
                get {
                    try {
                        return ((string)(this[this.tableisp_sqlsecure_report_getuserinfo.connectionnameColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'connectionname\' in table \'isp_sqlsecure_report_getuserinfo\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tableisp_sqlsecure_report_getuserinfo.connectionnameColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string loginname {
                get {
                    try {
                        return ((string)(this[this.tableisp_sqlsecure_report_getuserinfo.loginnameColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'loginname\' in table \'isp_sqlsecure_report_getuserinfo\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableisp_sqlsecure_report_getuserinfo.loginnameColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string logintype {
                get {
                    try {
                        return ((string)(this[this.tableisp_sqlsecure_report_getuserinfo.logintypeColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'logintype\' in table \'isp_sqlsecure_report_getuserinfo\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableisp_sqlsecure_report_getuserinfo.logintypeColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string databasename {
                get {
                    try {
                        return ((string)(this[this.tableisp_sqlsecure_report_getuserinfo.databasenameColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'databasename\' in table \'isp_sqlsecure_report_getuserinfo\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tableisp_sqlsecure_report_getuserinfo.databasenameColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string username {
                get {
                    try {
                        return ((string)(this[this.tableisp_sqlsecure_report_getuserinfo.usernameColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'username\' in table \'isp_sqlsecure_report_getuserinfo\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableisp_sqlsecure_report_getuserinfo.usernameColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string isalias {
                get {
                    try {
                        return ((string)(this[this.tableisp_sqlsecure_report_getuserinfo.isaliasColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'isalias\' in table \'isp_sqlsecure_report_getuserinfo\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableisp_sqlsecure_report_getuserinfo.isaliasColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string hasaccess {
                get {
                    try {
                        return ((string)(this[this.tableisp_sqlsecure_report_getuserinfo.hasaccessColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'hasaccess\' in table \'isp_sqlsecure_report_getuserinfo\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableisp_sqlsecure_report_getuserinfo.hasaccessColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string defaultschema {
                get {
                    try {
                        return ((string)(this[this.tableisp_sqlsecure_report_getuserinfo.defaultschemaColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'defaultschema\' in table \'isp_sqlsecure_report_getuserinfo\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tableisp_sqlsecure_report_getuserinfo.defaultschemaColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsconnectionnameNull() {
                return this.IsNull(this.tableisp_sqlsecure_report_getuserinfo.connectionnameColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetconnectionnameNull() {
                this[this.tableisp_sqlsecure_report_getuserinfo.connectionnameColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsloginnameNull() {
                return this.IsNull(this.tableisp_sqlsecure_report_getuserinfo.loginnameColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetloginnameNull() {
                this[this.tableisp_sqlsecure_report_getuserinfo.loginnameColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IslogintypeNull() {
                return this.IsNull(this.tableisp_sqlsecure_report_getuserinfo.logintypeColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetlogintypeNull() {
                this[this.tableisp_sqlsecure_report_getuserinfo.logintypeColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdatabasenameNull() {
                return this.IsNull(this.tableisp_sqlsecure_report_getuserinfo.databasenameColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdatabasenameNull() {
                this[this.tableisp_sqlsecure_report_getuserinfo.databasenameColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsusernameNull() {
                return this.IsNull(this.tableisp_sqlsecure_report_getuserinfo.usernameColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetusernameNull() {
                this[this.tableisp_sqlsecure_report_getuserinfo.usernameColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsisaliasNull() {
                return this.IsNull(this.tableisp_sqlsecure_report_getuserinfo.isaliasColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetisaliasNull() {
                this[this.tableisp_sqlsecure_report_getuserinfo.isaliasColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IshasaccessNull() {
                return this.IsNull(this.tableisp_sqlsecure_report_getuserinfo.hasaccessColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SethasaccessNull() {
                this[this.tableisp_sqlsecure_report_getuserinfo.hasaccessColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdefaultschemaNull() {
                return this.IsNull(this.tableisp_sqlsecure_report_getuserinfo.defaultschemaColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdefaultschemaNull() {
                this[this.tableisp_sqlsecure_report_getuserinfo.defaultschemaColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class isp_sqlsecure_report_checkdbchainingRow : System.Data.DataRow {
            
            private isp_sqlsecure_report_checkdbchainingDataTable tableisp_sqlsecure_report_checkdbchaining;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal isp_sqlsecure_report_checkdbchainingRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableisp_sqlsecure_report_checkdbchaining = ((isp_sqlsecure_report_checkdbchainingDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string connectionname {
                get {
                    return ((string)(this[this.tableisp_sqlsecure_report_checkdbchaining.connectionnameColumn]));
                }
                set {
                    this[this.tableisp_sqlsecure_report_checkdbchaining.connectionnameColumn] = value;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class isp_sqlsecure_report_checksystemstoredproceduresRow : System.Data.DataRow {
            
            private isp_sqlsecure_report_checksystemstoredproceduresDataTable tableisp_sqlsecure_report_checksystemstoredprocedures;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal isp_sqlsecure_report_checksystemstoredproceduresRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableisp_sqlsecure_report_checksystemstoredprocedures = ((isp_sqlsecure_report_checksystemstoredproceduresDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string connectionname {
                get {
                    try {
                        return ((string)(this[this.tableisp_sqlsecure_report_checksystemstoredprocedures.connectionnameColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'connectionname\' in table \'isp_sqlsecure_report_checksystems" +
                                "toredprocedures\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableisp_sqlsecure_report_checksystemstoredprocedures.connectionnameColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string databasename {
                get {
                    try {
                        return ((string)(this[this.tableisp_sqlsecure_report_checksystemstoredprocedures.databasenameColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'databasename\' in table \'isp_sqlsecure_report_checksystemsto" +
                                "redprocedures\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableisp_sqlsecure_report_checksystemstoredprocedures.databasenameColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string username {
                get {
                    try {
                        return ((string)(this[this.tableisp_sqlsecure_report_checksystemstoredprocedures.usernameColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'username\' in table \'isp_sqlsecure_report_checksystemstoredp" +
                                "rocedures\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableisp_sqlsecure_report_checksystemstoredprocedures.usernameColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string objectname {
                get {
                    try {
                        return ((string)(this[this.tableisp_sqlsecure_report_checksystemstoredprocedures.objectnameColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'objectname\' in table \'isp_sqlsecure_report_checksystemstore" +
                                "dprocedures\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableisp_sqlsecure_report_checksystemstoredprocedures.objectnameColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string permission {
                get {
                    try {
                        return ((string)(this[this.tableisp_sqlsecure_report_checksystemstoredprocedures.permissionColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'permission\' in table \'isp_sqlsecure_report_checksystemstore" +
                                "dprocedures\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableisp_sqlsecure_report_checksystemstoredprocedures.permissionColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string isgrant {
                get {
                    try {
                        return ((string)(this[this.tableisp_sqlsecure_report_checksystemstoredprocedures.isgrantColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'isgrant\' in table \'isp_sqlsecure_report_checksystemstoredpr" +
                                "ocedures\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableisp_sqlsecure_report_checksystemstoredprocedures.isgrantColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string isgrantwith {
                get {
                    try {
                        return ((string)(this[this.tableisp_sqlsecure_report_checksystemstoredprocedures.isgrantwithColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'isgrantwith\' in table \'isp_sqlsecure_report_checksystemstor" +
                                "edprocedures\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableisp_sqlsecure_report_checksystemstoredprocedures.isgrantwithColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsconnectionnameNull() {
                return this.IsNull(this.tableisp_sqlsecure_report_checksystemstoredprocedures.connectionnameColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetconnectionnameNull() {
                this[this.tableisp_sqlsecure_report_checksystemstoredprocedures.connectionnameColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdatabasenameNull() {
                return this.IsNull(this.tableisp_sqlsecure_report_checksystemstoredprocedures.databasenameColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdatabasenameNull() {
                this[this.tableisp_sqlsecure_report_checksystemstoredprocedures.databasenameColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsusernameNull() {
                return this.IsNull(this.tableisp_sqlsecure_report_checksystemstoredprocedures.usernameColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetusernameNull() {
                this[this.tableisp_sqlsecure_report_checksystemstoredprocedures.usernameColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsobjectnameNull() {
                return this.IsNull(this.tableisp_sqlsecure_report_checksystemstoredprocedures.objectnameColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetobjectnameNull() {
                this[this.tableisp_sqlsecure_report_checksystemstoredprocedures.objectnameColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IspermissionNull() {
                return this.IsNull(this.tableisp_sqlsecure_report_checksystemstoredprocedures.permissionColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetpermissionNull() {
                this[this.tableisp_sqlsecure_report_checksystemstoredprocedures.permissionColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsisgrantNull() {
                return this.IsNull(this.tableisp_sqlsecure_report_checksystemstoredprocedures.isgrantColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetisgrantNull() {
                this[this.tableisp_sqlsecure_report_checksystemstoredprocedures.isgrantColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsisgrantwithNull() {
                return this.IsNull(this.tableisp_sqlsecure_report_checksystemstoredprocedures.isgrantwithColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetisgrantwithNull() {
                this[this.tableisp_sqlsecure_report_checksystemstoredprocedures.isgrantwithColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class isp_sqlsecure_report_checkxpmailRow : System.Data.DataRow {
            
            private isp_sqlsecure_report_checkxpmailDataTable tableisp_sqlsecure_report_checkxpmail;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal isp_sqlsecure_report_checkxpmailRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableisp_sqlsecure_report_checkxpmail = ((isp_sqlsecure_report_checkxpmailDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string connectionname {
                get {
                    try {
                        return ((string)(this[this.tableisp_sqlsecure_report_checkxpmail.connectionnameColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'connectionname\' in table \'isp_sqlsecure_report_checkxpmail\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tableisp_sqlsecure_report_checkxpmail.connectionnameColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string name {
                get {
                    try {
                        return ((string)(this[this.tableisp_sqlsecure_report_checkxpmail.nameColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'name\' in table \'isp_sqlsecure_report_checkxpmail\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableisp_sqlsecure_report_checkxpmail.nameColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsconnectionnameNull() {
                return this.IsNull(this.tableisp_sqlsecure_report_checkxpmail.connectionnameColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetconnectionnameNull() {
                this[this.tableisp_sqlsecure_report_checkxpmail.connectionnameColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsnameNull() {
                return this.IsNull(this.tableisp_sqlsecure_report_checkxpmail.nameColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetnameNull() {
                this[this.tableisp_sqlsecure_report_checkxpmail.nameColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class isp_sqlsecure_report_getauditfiltersRow : System.Data.DataRow {
            
            private isp_sqlsecure_report_getauditfiltersDataTable tableisp_sqlsecure_report_getauditfilters;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal isp_sqlsecure_report_getauditfiltersRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableisp_sqlsecure_report_getauditfilters = ((isp_sqlsecure_report_getauditfiltersDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string servername {
                get {
                    return ((string)(this[this.tableisp_sqlsecure_report_getauditfilters.servernameColumn]));
                }
                set {
                    this[this.tableisp_sqlsecure_report_getauditfilters.servernameColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string rulename {
                get {
                    return ((string)(this[this.tableisp_sqlsecure_report_getauditfilters.rulenameColumn]));
                }
                set {
                    this[this.tableisp_sqlsecure_report_getauditfilters.rulenameColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ruledescription {
                get {
                    try {
                        return ((string)(this[this.tableisp_sqlsecure_report_getauditfilters.ruledescriptionColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'ruledescription\' in table \'isp_sqlsecure_report_getauditfil" +
                                "ters\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableisp_sqlsecure_report_getauditfilters.ruledescriptionColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string modifiedby {
                get {
                    try {
                        return ((string)(this[this.tableisp_sqlsecure_report_getauditfilters.modifiedbyColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'modifiedby\' in table \'isp_sqlsecure_report_getauditfilters\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tableisp_sqlsecure_report_getauditfilters.modifiedbyColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime modifiedon {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableisp_sqlsecure_report_getauditfilters.modifiedonColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'modifiedon\' in table \'isp_sqlsecure_report_getauditfilters\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tableisp_sqlsecure_report_getauditfilters.modifiedonColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string type {
                get {
                    return ((string)(this[this.tableisp_sqlsecure_report_getauditfilters.typeColumn]));
                }
                set {
                    this[this.tableisp_sqlsecure_report_getauditfilters.typeColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string scope {
                get {
                    try {
                        return ((string)(this[this.tableisp_sqlsecure_report_getauditfilters.scopeColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'scope\' in table \'isp_sqlsecure_report_getauditfilters\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableisp_sqlsecure_report_getauditfilters.scopeColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string namematchstring {
                get {
                    try {
                        return ((string)(this[this.tableisp_sqlsecure_report_getauditfilters.namematchstringColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'namematchstring\' in table \'isp_sqlsecure_report_getauditfil" +
                                "ters\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableisp_sqlsecure_report_getauditfilters.namematchstringColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsruledescriptionNull() {
                return this.IsNull(this.tableisp_sqlsecure_report_getauditfilters.ruledescriptionColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetruledescriptionNull() {
                this[this.tableisp_sqlsecure_report_getauditfilters.ruledescriptionColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsmodifiedbyNull() {
                return this.IsNull(this.tableisp_sqlsecure_report_getauditfilters.modifiedbyColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetmodifiedbyNull() {
                this[this.tableisp_sqlsecure_report_getauditfilters.modifiedbyColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsmodifiedonNull() {
                return this.IsNull(this.tableisp_sqlsecure_report_getauditfilters.modifiedonColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetmodifiedonNull() {
                this[this.tableisp_sqlsecure_report_getauditfilters.modifiedonColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsscopeNull() {
                return this.IsNull(this.tableisp_sqlsecure_report_getauditfilters.scopeColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetscopeNull() {
                this[this.tableisp_sqlsecure_report_getauditfilters.scopeColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsnamematchstringNull() {
                return this.IsNull(this.tableisp_sqlsecure_report_getauditfilters.namematchstringColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetnamematchstringNull() {
                this[this.tableisp_sqlsecure_report_getauditfilters.namematchstringColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class isp_sqlsecure_report_getuserpermissionsRow : System.Data.DataRow {
            
            private isp_sqlsecure_report_getuserpermissionsDataTable tableisp_sqlsecure_report_getuserpermissions;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal isp_sqlsecure_report_getuserpermissionsRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableisp_sqlsecure_report_getuserpermissions = ((isp_sqlsecure_report_getuserpermissionsDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string connectionname {
                get {
                    try {
                        return ((string)(this[this.tableisp_sqlsecure_report_getuserpermissions.connectionnameColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'connectionname\' in table \'isp_sqlsecure_report_getuserpermi" +
                                "ssions\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableisp_sqlsecure_report_getuserpermissions.connectionnameColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string loginname {
                get {
                    try {
                        return ((string)(this[this.tableisp_sqlsecure_report_getuserpermissions.loginnameColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'loginname\' in table \'isp_sqlsecure_report_getuserpermission" +
                                "s\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableisp_sqlsecure_report_getuserpermissions.loginnameColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string logintype {
                get {
                    try {
                        return ((string)(this[this.tableisp_sqlsecure_report_getuserpermissions.logintypeColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'logintype\' in table \'isp_sqlsecure_report_getuserpermission" +
                                "s\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableisp_sqlsecure_report_getuserpermissions.logintypeColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string serveraccess {
                get {
                    try {
                        return ((string)(this[this.tableisp_sqlsecure_report_getuserpermissions.serveraccessColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'serveraccess\' in table \'isp_sqlsecure_report_getuserpermiss" +
                                "ions\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableisp_sqlsecure_report_getuserpermissions.serveraccessColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string disabled {
                get {
                    try {
                        return ((string)(this[this.tableisp_sqlsecure_report_getuserpermissions.disabledColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'disabled\' in table \'isp_sqlsecure_report_getuserpermissions" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableisp_sqlsecure_report_getuserpermissions.disabledColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string role {
                get {
                    try {
                        return ((string)(this[this.tableisp_sqlsecure_report_getuserpermissions.roleColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'role\' in table \'isp_sqlsecure_report_getuserpermissions\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableisp_sqlsecure_report_getuserpermissions.roleColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsconnectionnameNull() {
                return this.IsNull(this.tableisp_sqlsecure_report_getuserpermissions.connectionnameColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetconnectionnameNull() {
                this[this.tableisp_sqlsecure_report_getuserpermissions.connectionnameColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsloginnameNull() {
                return this.IsNull(this.tableisp_sqlsecure_report_getuserpermissions.loginnameColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetloginnameNull() {
                this[this.tableisp_sqlsecure_report_getuserpermissions.loginnameColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IslogintypeNull() {
                return this.IsNull(this.tableisp_sqlsecure_report_getuserpermissions.logintypeColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetlogintypeNull() {
                this[this.tableisp_sqlsecure_report_getuserpermissions.logintypeColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsserveraccessNull() {
                return this.IsNull(this.tableisp_sqlsecure_report_getuserpermissions.serveraccessColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetserveraccessNull() {
                this[this.tableisp_sqlsecure_report_getuserpermissions.serveraccessColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdisabledNull() {
                return this.IsNull(this.tableisp_sqlsecure_report_getuserpermissions.disabledColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdisabledNull() {
                this[this.tableisp_sqlsecure_report_getuserpermissions.disabledColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsroleNull() {
                return this.IsNull(this.tableisp_sqlsecure_report_getuserpermissions.roleColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetroleNull() {
                this[this.tableisp_sqlsecure_report_getuserpermissions.roleColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class isp_sqlsecure_report_getuserdatabasepermissionsRow : System.Data.DataRow {
            
            private isp_sqlsecure_report_getuserdatabasepermissionsDataTable tableisp_sqlsecure_report_getuserdatabasepermissions;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal isp_sqlsecure_report_getuserdatabasepermissionsRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableisp_sqlsecure_report_getuserdatabasepermissions = ((isp_sqlsecure_report_getuserdatabasepermissionsDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int snapshotid {
                get {
                    try {
                        return ((int)(this[this.tableisp_sqlsecure_report_getuserdatabasepermissions.snapshotidColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'snapshotid\' in table \'isp_sqlsecure_report_getuserdatabasep" +
                                "ermissions\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableisp_sqlsecure_report_getuserdatabasepermissions.snapshotidColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string permissionlevel {
                get {
                    try {
                        return ((string)(this[this.tableisp_sqlsecure_report_getuserdatabasepermissions.permissionlevelColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'permissionlevel\' in table \'isp_sqlsecure_report_getuserdata" +
                                "basepermissions\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableisp_sqlsecure_report_getuserdatabasepermissions.permissionlevelColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string logintype {
                get {
                    try {
                        return ((string)(this[this.tableisp_sqlsecure_report_getuserdatabasepermissions.logintypeColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'logintype\' in table \'isp_sqlsecure_report_getuserdatabasepe" +
                                "rmissions\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableisp_sqlsecure_report_getuserdatabasepermissions.logintypeColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string loginname {
                get {
                    try {
                        return ((string)(this[this.tableisp_sqlsecure_report_getuserdatabasepermissions.loginnameColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'loginname\' in table \'isp_sqlsecure_report_getuserdatabasepe" +
                                "rmissions\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableisp_sqlsecure_report_getuserdatabasepermissions.loginnameColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string connectionname {
                get {
                    try {
                        return ((string)(this[this.tableisp_sqlsecure_report_getuserdatabasepermissions.connectionnameColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'connectionname\' in table \'isp_sqlsecure_report_getuserdatab" +
                                "asepermissions\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableisp_sqlsecure_report_getuserdatabasepermissions.connectionnameColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string databasename {
                get {
                    try {
                        return ((string)(this[this.tableisp_sqlsecure_report_getuserdatabasepermissions.databasenameColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'databasename\' in table \'isp_sqlsecure_report_getuserdatabas" +
                                "epermissions\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableisp_sqlsecure_report_getuserdatabasepermissions.databasenameColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int principalid {
                get {
                    try {
                        return ((int)(this[this.tableisp_sqlsecure_report_getuserdatabasepermissions.principalidColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'principalid\' in table \'isp_sqlsecure_report_getuserdatabase" +
                                "permissions\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableisp_sqlsecure_report_getuserdatabasepermissions.principalidColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string principalname {
                get {
                    try {
                        return ((string)(this[this.tableisp_sqlsecure_report_getuserdatabasepermissions.principalnameColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'principalname\' in table \'isp_sqlsecure_report_getuserdataba" +
                                "sepermissions\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableisp_sqlsecure_report_getuserdatabasepermissions.principalnameColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string principaltype {
                get {
                    try {
                        return ((string)(this[this.tableisp_sqlsecure_report_getuserdatabasepermissions.principaltypeColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'principaltype\' in table \'isp_sqlsecure_report_getuserdataba" +
                                "sepermissions\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableisp_sqlsecure_report_getuserdatabasepermissions.principaltypeColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string databaseprincipal {
                get {
                    try {
                        return ((string)(this[this.tableisp_sqlsecure_report_getuserdatabasepermissions.databaseprincipalColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'databaseprincipal\' in table \'isp_sqlsecure_report_getuserda" +
                                "tabasepermissions\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableisp_sqlsecure_report_getuserdatabasepermissions.databaseprincipalColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string databaseprincipaltype {
                get {
                    try {
                        return ((string)(this[this.tableisp_sqlsecure_report_getuserdatabasepermissions.databaseprincipaltypeColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'databaseprincipaltype\' in table \'isp_sqlsecure_report_getus" +
                                "erdatabasepermissions\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableisp_sqlsecure_report_getuserdatabasepermissions.databaseprincipaltypeColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int grantor {
                get {
                    try {
                        return ((int)(this[this.tableisp_sqlsecure_report_getuserdatabasepermissions.grantorColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'grantor\' in table \'isp_sqlsecure_report_getuserdatabaseperm" +
                                "issions\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableisp_sqlsecure_report_getuserdatabasepermissions.grantorColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string grantorname {
                get {
                    try {
                        return ((string)(this[this.tableisp_sqlsecure_report_getuserdatabasepermissions.grantornameColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'grantorname\' in table \'isp_sqlsecure_report_getuserdatabase" +
                                "permissions\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableisp_sqlsecure_report_getuserdatabasepermissions.grantornameColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int grantee {
                get {
                    try {
                        return ((int)(this[this.tableisp_sqlsecure_report_getuserdatabasepermissions.granteeColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'grantee\' in table \'isp_sqlsecure_report_getuserdatabaseperm" +
                                "issions\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableisp_sqlsecure_report_getuserdatabasepermissions.granteeColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string granteename {
                get {
                    try {
                        return ((string)(this[this.tableisp_sqlsecure_report_getuserdatabasepermissions.granteenameColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'granteename\' in table \'isp_sqlsecure_report_getuserdatabase" +
                                "permissions\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableisp_sqlsecure_report_getuserdatabasepermissions.granteenameColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int classid {
                get {
                    try {
                        return ((int)(this[this.tableisp_sqlsecure_report_getuserdatabasepermissions.classidColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'classid\' in table \'isp_sqlsecure_report_getuserdatabaseperm" +
                                "issions\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableisp_sqlsecure_report_getuserdatabasepermissions.classidColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string permissiontype {
                get {
                    try {
                        return ((string)(this[this.tableisp_sqlsecure_report_getuserdatabasepermissions.permissiontypeColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'permissiontype\' in table \'isp_sqlsecure_report_getuserdatab" +
                                "asepermissions\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableisp_sqlsecure_report_getuserdatabasepermissions.permissiontypeColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string coveringfrom {
                get {
                    try {
                        return ((string)(this[this.tableisp_sqlsecure_report_getuserdatabasepermissions.coveringfromColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'coveringfrom\' in table \'isp_sqlsecure_report_getuserdatabas" +
                                "epermissions\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableisp_sqlsecure_report_getuserdatabasepermissions.coveringfromColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string permission {
                get {
                    try {
                        return ((string)(this[this.tableisp_sqlsecure_report_getuserdatabasepermissions.permissionColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'permission\' in table \'isp_sqlsecure_report_getuserdatabasep" +
                                "ermissions\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableisp_sqlsecure_report_getuserdatabasepermissions.permissionColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string isgrant {
                get {
                    try {
                        return ((string)(this[this.tableisp_sqlsecure_report_getuserdatabasepermissions.isgrantColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'isgrant\' in table \'isp_sqlsecure_report_getuserdatabaseperm" +
                                "issions\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableisp_sqlsecure_report_getuserdatabasepermissions.isgrantColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string isgrantwith {
                get {
                    try {
                        return ((string)(this[this.tableisp_sqlsecure_report_getuserdatabasepermissions.isgrantwithColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'isgrantwith\' in table \'isp_sqlsecure_report_getuserdatabase" +
                                "permissions\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableisp_sqlsecure_report_getuserdatabasepermissions.isgrantwithColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string isrevoke {
                get {
                    try {
                        return ((string)(this[this.tableisp_sqlsecure_report_getuserdatabasepermissions.isrevokeColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'isrevoke\' in table \'isp_sqlsecure_report_getuserdatabaseper" +
                                "missions\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableisp_sqlsecure_report_getuserdatabasepermissions.isrevokeColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string isdeny {
                get {
                    try {
                        return ((string)(this[this.tableisp_sqlsecure_report_getuserdatabasepermissions.isdenyColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'isdeny\' in table \'isp_sqlsecure_report_getuserdatabasepermi" +
                                "ssions\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableisp_sqlsecure_report_getuserdatabasepermissions.isdenyColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int parentobjectid {
                get {
                    try {
                        return ((int)(this[this.tableisp_sqlsecure_report_getuserdatabasepermissions.parentobjectidColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'parentobjectid\' in table \'isp_sqlsecure_report_getuserdatab" +
                                "asepermissions\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableisp_sqlsecure_report_getuserdatabasepermissions.parentobjectidColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int objectid {
                get {
                    try {
                        return ((int)(this[this.tableisp_sqlsecure_report_getuserdatabasepermissions.objectidColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'objectid\' in table \'isp_sqlsecure_report_getuserdatabaseper" +
                                "missions\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableisp_sqlsecure_report_getuserdatabasepermissions.objectidColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string objectname {
                get {
                    try {
                        return ((string)(this[this.tableisp_sqlsecure_report_getuserdatabasepermissions.objectnameColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'objectname\' in table \'isp_sqlsecure_report_getuserdatabasep" +
                                "ermissions\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableisp_sqlsecure_report_getuserdatabasepermissions.objectnameColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string qualifiedname {
                get {
                    try {
                        return ((string)(this[this.tableisp_sqlsecure_report_getuserdatabasepermissions.qualifiednameColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'qualifiedname\' in table \'isp_sqlsecure_report_getuserdataba" +
                                "sepermissions\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableisp_sqlsecure_report_getuserdatabasepermissions.qualifiednameColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string objecttype {
                get {
                    try {
                        return ((string)(this[this.tableisp_sqlsecure_report_getuserdatabasepermissions.objecttypeColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'objecttype\' in table \'isp_sqlsecure_report_getuserdatabasep" +
                                "ermissions\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableisp_sqlsecure_report_getuserdatabasepermissions.objecttypeColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int schemaid {
                get {
                    try {
                        return ((int)(this[this.tableisp_sqlsecure_report_getuserdatabasepermissions.schemaidColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'schemaid\' in table \'isp_sqlsecure_report_getuserdatabaseper" +
                                "missions\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableisp_sqlsecure_report_getuserdatabasepermissions.schemaidColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string schemaname {
                get {
                    try {
                        return ((string)(this[this.tableisp_sqlsecure_report_getuserdatabasepermissions.schemanameColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'schemaname\' in table \'isp_sqlsecure_report_getuserdatabasep" +
                                "ermissions\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableisp_sqlsecure_report_getuserdatabasepermissions.schemanameColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int owner {
                get {
                    try {
                        return ((int)(this[this.tableisp_sqlsecure_report_getuserdatabasepermissions.ownerColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'owner\' in table \'isp_sqlsecure_report_getuserdatabasepermis" +
                                "sions\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableisp_sqlsecure_report_getuserdatabasepermissions.ownerColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ownername {
                get {
                    try {
                        return ((string)(this[this.tableisp_sqlsecure_report_getuserdatabasepermissions.ownernameColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'ownername\' in table \'isp_sqlsecure_report_getuserdatabasepe" +
                                "rmissions\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableisp_sqlsecure_report_getuserdatabasepermissions.ownernameColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string isaliased {
                get {
                    try {
                        return ((string)(this[this.tableisp_sqlsecure_report_getuserdatabasepermissions.isaliasedColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'isaliased\' in table \'isp_sqlsecure_report_getuserdatabasepe" +
                                "rmissions\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableisp_sqlsecure_report_getuserdatabasepermissions.isaliasedColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string inherited {
                get {
                    try {
                        return ((string)(this[this.tableisp_sqlsecure_report_getuserdatabasepermissions.inheritedColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'inherited\' in table \'isp_sqlsecure_report_getuserdatabasepe" +
                                "rmissions\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableisp_sqlsecure_report_getuserdatabasepermissions.inheritedColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string sourcename {
                get {
                    try {
                        return ((string)(this[this.tableisp_sqlsecure_report_getuserdatabasepermissions.sourcenameColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'sourcename\' in table \'isp_sqlsecure_report_getuserdatabasep" +
                                "ermissions\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableisp_sqlsecure_report_getuserdatabasepermissions.sourcenameColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string sourcetype {
                get {
                    try {
                        return ((string)(this[this.tableisp_sqlsecure_report_getuserdatabasepermissions.sourcetypeColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'sourcetype\' in table \'isp_sqlsecure_report_getuserdatabasep" +
                                "ermissions\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableisp_sqlsecure_report_getuserdatabasepermissions.sourcetypeColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string sourcepermission {
                get {
                    try {
                        return ((string)(this[this.tableisp_sqlsecure_report_getuserdatabasepermissions.sourcepermissionColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'sourcepermission\' in table \'isp_sqlsecure_report_getuserdat" +
                                "abasepermissions\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableisp_sqlsecure_report_getuserdatabasepermissions.sourcepermissionColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssnapshotidNull() {
                return this.IsNull(this.tableisp_sqlsecure_report_getuserdatabasepermissions.snapshotidColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetsnapshotidNull() {
                this[this.tableisp_sqlsecure_report_getuserdatabasepermissions.snapshotidColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IspermissionlevelNull() {
                return this.IsNull(this.tableisp_sqlsecure_report_getuserdatabasepermissions.permissionlevelColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetpermissionlevelNull() {
                this[this.tableisp_sqlsecure_report_getuserdatabasepermissions.permissionlevelColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IslogintypeNull() {
                return this.IsNull(this.tableisp_sqlsecure_report_getuserdatabasepermissions.logintypeColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetlogintypeNull() {
                this[this.tableisp_sqlsecure_report_getuserdatabasepermissions.logintypeColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsloginnameNull() {
                return this.IsNull(this.tableisp_sqlsecure_report_getuserdatabasepermissions.loginnameColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetloginnameNull() {
                this[this.tableisp_sqlsecure_report_getuserdatabasepermissions.loginnameColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsconnectionnameNull() {
                return this.IsNull(this.tableisp_sqlsecure_report_getuserdatabasepermissions.connectionnameColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetconnectionnameNull() {
                this[this.tableisp_sqlsecure_report_getuserdatabasepermissions.connectionnameColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdatabasenameNull() {
                return this.IsNull(this.tableisp_sqlsecure_report_getuserdatabasepermissions.databasenameColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdatabasenameNull() {
                this[this.tableisp_sqlsecure_report_getuserdatabasepermissions.databasenameColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsprincipalidNull() {
                return this.IsNull(this.tableisp_sqlsecure_report_getuserdatabasepermissions.principalidColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetprincipalidNull() {
                this[this.tableisp_sqlsecure_report_getuserdatabasepermissions.principalidColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsprincipalnameNull() {
                return this.IsNull(this.tableisp_sqlsecure_report_getuserdatabasepermissions.principalnameColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetprincipalnameNull() {
                this[this.tableisp_sqlsecure_report_getuserdatabasepermissions.principalnameColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsprincipaltypeNull() {
                return this.IsNull(this.tableisp_sqlsecure_report_getuserdatabasepermissions.principaltypeColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetprincipaltypeNull() {
                this[this.tableisp_sqlsecure_report_getuserdatabasepermissions.principaltypeColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdatabaseprincipalNull() {
                return this.IsNull(this.tableisp_sqlsecure_report_getuserdatabasepermissions.databaseprincipalColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdatabaseprincipalNull() {
                this[this.tableisp_sqlsecure_report_getuserdatabasepermissions.databaseprincipalColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdatabaseprincipaltypeNull() {
                return this.IsNull(this.tableisp_sqlsecure_report_getuserdatabasepermissions.databaseprincipaltypeColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdatabaseprincipaltypeNull() {
                this[this.tableisp_sqlsecure_report_getuserdatabasepermissions.databaseprincipaltypeColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsgrantorNull() {
                return this.IsNull(this.tableisp_sqlsecure_report_getuserdatabasepermissions.grantorColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetgrantorNull() {
                this[this.tableisp_sqlsecure_report_getuserdatabasepermissions.grantorColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsgrantornameNull() {
                return this.IsNull(this.tableisp_sqlsecure_report_getuserdatabasepermissions.grantornameColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetgrantornameNull() {
                this[this.tableisp_sqlsecure_report_getuserdatabasepermissions.grantornameColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsgranteeNull() {
                return this.IsNull(this.tableisp_sqlsecure_report_getuserdatabasepermissions.granteeColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetgranteeNull() {
                this[this.tableisp_sqlsecure_report_getuserdatabasepermissions.granteeColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsgranteenameNull() {
                return this.IsNull(this.tableisp_sqlsecure_report_getuserdatabasepermissions.granteenameColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetgranteenameNull() {
                this[this.tableisp_sqlsecure_report_getuserdatabasepermissions.granteenameColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsclassidNull() {
                return this.IsNull(this.tableisp_sqlsecure_report_getuserdatabasepermissions.classidColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetclassidNull() {
                this[this.tableisp_sqlsecure_report_getuserdatabasepermissions.classidColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IspermissiontypeNull() {
                return this.IsNull(this.tableisp_sqlsecure_report_getuserdatabasepermissions.permissiontypeColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetpermissiontypeNull() {
                this[this.tableisp_sqlsecure_report_getuserdatabasepermissions.permissiontypeColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscoveringfromNull() {
                return this.IsNull(this.tableisp_sqlsecure_report_getuserdatabasepermissions.coveringfromColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcoveringfromNull() {
                this[this.tableisp_sqlsecure_report_getuserdatabasepermissions.coveringfromColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IspermissionNull() {
                return this.IsNull(this.tableisp_sqlsecure_report_getuserdatabasepermissions.permissionColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetpermissionNull() {
                this[this.tableisp_sqlsecure_report_getuserdatabasepermissions.permissionColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsisgrantNull() {
                return this.IsNull(this.tableisp_sqlsecure_report_getuserdatabasepermissions.isgrantColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetisgrantNull() {
                this[this.tableisp_sqlsecure_report_getuserdatabasepermissions.isgrantColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsisgrantwithNull() {
                return this.IsNull(this.tableisp_sqlsecure_report_getuserdatabasepermissions.isgrantwithColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetisgrantwithNull() {
                this[this.tableisp_sqlsecure_report_getuserdatabasepermissions.isgrantwithColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsisrevokeNull() {
                return this.IsNull(this.tableisp_sqlsecure_report_getuserdatabasepermissions.isrevokeColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetisrevokeNull() {
                this[this.tableisp_sqlsecure_report_getuserdatabasepermissions.isrevokeColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsisdenyNull() {
                return this.IsNull(this.tableisp_sqlsecure_report_getuserdatabasepermissions.isdenyColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetisdenyNull() {
                this[this.tableisp_sqlsecure_report_getuserdatabasepermissions.isdenyColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsparentobjectidNull() {
                return this.IsNull(this.tableisp_sqlsecure_report_getuserdatabasepermissions.parentobjectidColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetparentobjectidNull() {
                this[this.tableisp_sqlsecure_report_getuserdatabasepermissions.parentobjectidColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsobjectidNull() {
                return this.IsNull(this.tableisp_sqlsecure_report_getuserdatabasepermissions.objectidColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetobjectidNull() {
                this[this.tableisp_sqlsecure_report_getuserdatabasepermissions.objectidColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsobjectnameNull() {
                return this.IsNull(this.tableisp_sqlsecure_report_getuserdatabasepermissions.objectnameColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetobjectnameNull() {
                this[this.tableisp_sqlsecure_report_getuserdatabasepermissions.objectnameColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsqualifiednameNull() {
                return this.IsNull(this.tableisp_sqlsecure_report_getuserdatabasepermissions.qualifiednameColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetqualifiednameNull() {
                this[this.tableisp_sqlsecure_report_getuserdatabasepermissions.qualifiednameColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsobjecttypeNull() {
                return this.IsNull(this.tableisp_sqlsecure_report_getuserdatabasepermissions.objecttypeColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetobjecttypeNull() {
                this[this.tableisp_sqlsecure_report_getuserdatabasepermissions.objecttypeColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsschemaidNull() {
                return this.IsNull(this.tableisp_sqlsecure_report_getuserdatabasepermissions.schemaidColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetschemaidNull() {
                this[this.tableisp_sqlsecure_report_getuserdatabasepermissions.schemaidColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsschemanameNull() {
                return this.IsNull(this.tableisp_sqlsecure_report_getuserdatabasepermissions.schemanameColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetschemanameNull() {
                this[this.tableisp_sqlsecure_report_getuserdatabasepermissions.schemanameColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsownerNull() {
                return this.IsNull(this.tableisp_sqlsecure_report_getuserdatabasepermissions.ownerColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetownerNull() {
                this[this.tableisp_sqlsecure_report_getuserdatabasepermissions.ownerColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsownernameNull() {
                return this.IsNull(this.tableisp_sqlsecure_report_getuserdatabasepermissions.ownernameColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetownernameNull() {
                this[this.tableisp_sqlsecure_report_getuserdatabasepermissions.ownernameColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsisaliasedNull() {
                return this.IsNull(this.tableisp_sqlsecure_report_getuserdatabasepermissions.isaliasedColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetisaliasedNull() {
                this[this.tableisp_sqlsecure_report_getuserdatabasepermissions.isaliasedColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsinheritedNull() {
                return this.IsNull(this.tableisp_sqlsecure_report_getuserdatabasepermissions.inheritedColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetinheritedNull() {
                this[this.tableisp_sqlsecure_report_getuserdatabasepermissions.inheritedColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssourcenameNull() {
                return this.IsNull(this.tableisp_sqlsecure_report_getuserdatabasepermissions.sourcenameColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetsourcenameNull() {
                this[this.tableisp_sqlsecure_report_getuserdatabasepermissions.sourcenameColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssourcetypeNull() {
                return this.IsNull(this.tableisp_sqlsecure_report_getuserdatabasepermissions.sourcetypeColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetsourcetypeNull() {
                this[this.tableisp_sqlsecure_report_getuserdatabasepermissions.sourcetypeColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssourcepermissionNull() {
                return this.IsNull(this.tableisp_sqlsecure_report_getuserdatabasepermissions.sourcepermissionColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetsourcepermissionNull() {
                this[this.tableisp_sqlsecure_report_getuserdatabasepermissions.sourcepermissionColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class isp_sqlsecure_report_getguestenabledserversRowChangeEvent : System.EventArgs {
            
            private isp_sqlsecure_report_getguestenabledserversRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public isp_sqlsecure_report_getguestenabledserversRowChangeEvent(isp_sqlsecure_report_getguestenabledserversRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public isp_sqlsecure_report_getguestenabledserversRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class isp_sqlsecure_report_getauditedinstancesRowChangeEvent : System.EventArgs {
            
            private isp_sqlsecure_report_getauditedinstancesRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public isp_sqlsecure_report_getauditedinstancesRowChangeEvent(isp_sqlsecure_report_getauditedinstancesRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public isp_sqlsecure_report_getauditedinstancesRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class isp_sqlsecure_report_getserveraccessRowChangeEvent : System.EventArgs {
            
            private isp_sqlsecure_report_getserveraccessRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public isp_sqlsecure_report_getserveraccessRowChangeEvent(isp_sqlsecure_report_getserveraccessRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public isp_sqlsecure_report_getserveraccessRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class isp_sqlsecure_report_authenticationRowChangeEvent : System.EventArgs {
            
            private isp_sqlsecure_report_authenticationRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public isp_sqlsecure_report_authenticationRowChangeEvent(isp_sqlsecure_report_authenticationRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public isp_sqlsecure_report_authenticationRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class isp_sqlsecure_report_checkwellknowngroupRowChangeEvent : System.EventArgs {
            
            private isp_sqlsecure_report_checkwellknowngroupRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public isp_sqlsecure_report_checkwellknowngroupRowChangeEvent(isp_sqlsecure_report_checkwellknowngroupRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public isp_sqlsecure_report_checkwellknowngroupRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class isp_sqlsecure_report_sysadmin_administratorRowChangeEvent : System.EventArgs {
            
            private isp_sqlsecure_report_sysadmin_administratorRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public isp_sqlsecure_report_sysadmin_administratorRowChangeEvent(isp_sqlsecure_report_sysadmin_administratorRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public isp_sqlsecure_report_sysadmin_administratorRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class isp_sqlsecure_report_orphanedloginsRowChangeEvent : System.EventArgs {
            
            private isp_sqlsecure_report_orphanedloginsRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public isp_sqlsecure_report_orphanedloginsRowChangeEvent(isp_sqlsecure_report_orphanedloginsRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public isp_sqlsecure_report_orphanedloginsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class isp_sqlsecure_report_dbuserfixedroleRowChangeEvent : System.EventArgs {
            
            private isp_sqlsecure_report_dbuserfixedroleRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public isp_sqlsecure_report_dbuserfixedroleRowChangeEvent(isp_sqlsecure_report_dbuserfixedroleRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public isp_sqlsecure_report_dbuserfixedroleRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class isp_sqlsecure_report_checkcmdshellRowChangeEvent : System.EventArgs {
            
            private isp_sqlsecure_report_checkcmdshellRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public isp_sqlsecure_report_checkcmdshellRowChangeEvent(isp_sqlsecure_report_checkcmdshellRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public isp_sqlsecure_report_checkcmdshellRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class isp_sqlsecure_report_getuserinfoRowChangeEvent : System.EventArgs {
            
            private isp_sqlsecure_report_getuserinfoRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public isp_sqlsecure_report_getuserinfoRowChangeEvent(isp_sqlsecure_report_getuserinfoRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public isp_sqlsecure_report_getuserinfoRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class isp_sqlsecure_report_checkdbchainingRowChangeEvent : System.EventArgs {
            
            private isp_sqlsecure_report_checkdbchainingRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public isp_sqlsecure_report_checkdbchainingRowChangeEvent(isp_sqlsecure_report_checkdbchainingRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public isp_sqlsecure_report_checkdbchainingRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class isp_sqlsecure_report_checksystemstoredproceduresRowChangeEvent : System.EventArgs {
            
            private isp_sqlsecure_report_checksystemstoredproceduresRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public isp_sqlsecure_report_checksystemstoredproceduresRowChangeEvent(isp_sqlsecure_report_checksystemstoredproceduresRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public isp_sqlsecure_report_checksystemstoredproceduresRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class isp_sqlsecure_report_checkxpmailRowChangeEvent : System.EventArgs {
            
            private isp_sqlsecure_report_checkxpmailRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public isp_sqlsecure_report_checkxpmailRowChangeEvent(isp_sqlsecure_report_checkxpmailRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public isp_sqlsecure_report_checkxpmailRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class isp_sqlsecure_report_getauditfiltersRowChangeEvent : System.EventArgs {
            
            private isp_sqlsecure_report_getauditfiltersRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public isp_sqlsecure_report_getauditfiltersRowChangeEvent(isp_sqlsecure_report_getauditfiltersRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public isp_sqlsecure_report_getauditfiltersRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class isp_sqlsecure_report_getuserpermissionsRowChangeEvent : System.EventArgs {
            
            private isp_sqlsecure_report_getuserpermissionsRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public isp_sqlsecure_report_getuserpermissionsRowChangeEvent(isp_sqlsecure_report_getuserpermissionsRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public isp_sqlsecure_report_getuserpermissionsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class isp_sqlsecure_report_getuserdatabasepermissionsRowChangeEvent : System.EventArgs {
            
            private isp_sqlsecure_report_getuserdatabasepermissionsRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public isp_sqlsecure_report_getuserdatabasepermissionsRowChangeEvent(isp_sqlsecure_report_getuserdatabasepermissionsRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public isp_sqlsecure_report_getuserdatabasepermissionsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace Idera.SQLsecure.UI.Console.Reports.ReportsDatasetTableAdapters {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class isp_sqlsecure_report_getguestenabledserversTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public isp_sqlsecure_report_getguestenabledserversTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "isp_sqlsecure_report_getguestenabledservers";
            tableMapping.ColumnMappings.Add("connectionname", "connectionname");
            tableMapping.ColumnMappings.Add("databasename", "databasename");
            tableMapping.ColumnMappings.Add("owner", "owner");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = "Data Source=secureui\\casesensitive;Initial Catalog=SQLsecure;Integrated Security=" +
                "True";
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.isp_sqlsecure_report_getguestenabledservers";
            this._commandCollection[0].CommandType = System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new System.Data.SqlClient.SqlParameter("@RETURN_VALUE", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.ReturnValue, 10, 0, null, System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new System.Data.SqlClient.SqlParameter("@connectionname", System.Data.SqlDbType.NVarChar, 400, System.Data.ParameterDirection.Input, 0, 0, null, System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ReportsDataset.isp_sqlsecure_report_getguestenabledserversDataTable dataTable, string connectionname) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((connectionname == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(connectionname));
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ReportsDataset.isp_sqlsecure_report_getguestenabledserversDataTable GetData(string connectionname) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((connectionname == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(connectionname));
            }
            ReportsDataset.isp_sqlsecure_report_getguestenabledserversDataTable dataTable = new ReportsDataset.isp_sqlsecure_report_getguestenabledserversDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class isp_sqlsecure_report_getauditedinstancesTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public isp_sqlsecure_report_getauditedinstancesTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "isp_sqlsecure_report_getauditedinstances";
            tableMapping.ColumnMappings.Add("servername", "servername");
            tableMapping.ColumnMappings.Add("instancename", "instancename");
            tableMapping.ColumnMappings.Add("version", "version");
            tableMapping.ColumnMappings.Add("edition", "edition");
            tableMapping.ColumnMappings.Add("authenticationmode", "authenticationmode");
            tableMapping.ColumnMappings.Add("os", "os");
            tableMapping.ColumnMappings.Add("numwindowsuser", "numwindowsuser");
            tableMapping.ColumnMappings.Add("numwindowsgroup", "numwindowsgroup");
            tableMapping.ColumnMappings.Add("numsqllogin", "numsqllogin");
            tableMapping.ColumnMappings.Add("connectionname", "connectionname");
            tableMapping.ColumnMappings.Add("snapshottime", "snapshottime");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = "Data Source=secureui\\casesensitive;Initial Catalog=SQLsecure;Integrated Security=" +
                "True";
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.isp_sqlsecure_report_getauditedinstances";
            this._commandCollection[0].CommandType = System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new System.Data.SqlClient.SqlParameter("@RETURN_VALUE", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.ReturnValue, 10, 0, null, System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new System.Data.SqlClient.SqlParameter("@rundate", System.Data.SqlDbType.DateTime, 8, System.Data.ParameterDirection.Input, 23, 3, null, System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new System.Data.SqlClient.SqlParameter("@connectionname", System.Data.SqlDbType.NVarChar, 256, System.Data.ParameterDirection.Input, 0, 0, null, System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ReportsDataset.isp_sqlsecure_report_getauditedinstancesDataTable dataTable, System.Nullable<System.DateTime> rundate, string connectionname) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((rundate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((System.DateTime)(rundate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = System.DBNull.Value;
            }
            if ((connectionname == null)) {
                this.Adapter.SelectCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(connectionname));
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ReportsDataset.isp_sqlsecure_report_getauditedinstancesDataTable GetData(System.Nullable<System.DateTime> rundate, string connectionname) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((rundate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((System.DateTime)(rundate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = System.DBNull.Value;
            }
            if ((connectionname == null)) {
                this.Adapter.SelectCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(connectionname));
            }
            ReportsDataset.isp_sqlsecure_report_getauditedinstancesDataTable dataTable = new ReportsDataset.isp_sqlsecure_report_getauditedinstancesDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class isp_sqlsecure_report_getserveraccessTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public isp_sqlsecure_report_getserveraccessTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "isp_sqlsecure_report_getserveraccess";
            tableMapping.ColumnMappings.Add("snapshotid", "snapshotid");
            tableMapping.ColumnMappings.Add("connectionname", "connectionname");
            tableMapping.ColumnMappings.Add("logintype", "logintype");
            tableMapping.ColumnMappings.Add("loginname", "loginname");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = "Data Source=secureui\\casesensitive;Initial Catalog=SQLsecure;Integrated Security=" +
                "True";
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.isp_sqlsecure_report_getserveraccess";
            this._commandCollection[0].CommandType = System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new System.Data.SqlClient.SqlParameter("@RETURN_VALUE", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.ReturnValue, 10, 0, null, System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new System.Data.SqlClient.SqlParameter("@logintype", System.Data.SqlDbType.NChar, 1, System.Data.ParameterDirection.Input, 0, 0, null, System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new System.Data.SqlClient.SqlParameter("@inputsid", System.Data.SqlDbType.VarBinary, 85, System.Data.ParameterDirection.Input, 0, 0, null, System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new System.Data.SqlClient.SqlParameter("@sqllogin", System.Data.SqlDbType.NVarChar, 128, System.Data.ParameterDirection.Input, 0, 0, null, System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ReportsDataset.isp_sqlsecure_report_getserveraccessDataTable dataTable, string logintype, byte[] inputsid, string sqllogin) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((logintype == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(logintype));
            }
            if ((inputsid == null)) {
                this.Adapter.SelectCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((byte[])(inputsid));
            }
            if ((sqllogin == null)) {
                this.Adapter.SelectCommand.Parameters[3].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = ((string)(sqllogin));
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ReportsDataset.isp_sqlsecure_report_getserveraccessDataTable GetData(string logintype, byte[] inputsid, string sqllogin) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((logintype == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(logintype));
            }
            if ((inputsid == null)) {
                this.Adapter.SelectCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((byte[])(inputsid));
            }
            if ((sqllogin == null)) {
                this.Adapter.SelectCommand.Parameters[3].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = ((string)(sqllogin));
            }
            ReportsDataset.isp_sqlsecure_report_getserveraccessDataTable dataTable = new ReportsDataset.isp_sqlsecure_report_getserveraccessDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class isp_sqlsecure_report_authenticationTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public isp_sqlsecure_report_authenticationTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "isp_sqlsecure_report_authentication";
            tableMapping.ColumnMappings.Add("connectionname", "connectionname");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = "Data Source=secureui\\casesensitive;Initial Catalog=SQLsecure;Integrated Security=" +
                "True";
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.isp_sqlsecure_report_authentication";
            this._commandCollection[0].CommandType = System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new System.Data.SqlClient.SqlParameter("@RETURN_VALUE", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.ReturnValue, 10, 0, null, System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ReportsDataset.isp_sqlsecure_report_authenticationDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ReportsDataset.isp_sqlsecure_report_authenticationDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            ReportsDataset.isp_sqlsecure_report_authenticationDataTable dataTable = new ReportsDataset.isp_sqlsecure_report_authenticationDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class isp_sqlsecure_report_checkwellknowngroupTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public isp_sqlsecure_report_checkwellknowngroupTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "isp_sqlsecure_report_checkwellknowngroup";
            tableMapping.ColumnMappings.Add("connectionname", "connectionname");
            tableMapping.ColumnMappings.Add("name", "name");
            tableMapping.ColumnMappings.Add("groupname", "groupname");
            tableMapping.ColumnMappings.Add("access", "access");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = "Data Source=secureui\\casesensitive;Initial Catalog=SQLsecure;Integrated Security=" +
                "True";
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.isp_sqlsecure_report_checkwellknowngroup";
            this._commandCollection[0].CommandType = System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new System.Data.SqlClient.SqlParameter("@RETURN_VALUE", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.ReturnValue, 10, 0, null, System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new System.Data.SqlClient.SqlParameter("@rundate", System.Data.SqlDbType.DateTime, 8, System.Data.ParameterDirection.Input, 23, 3, null, System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ReportsDataset.isp_sqlsecure_report_checkwellknowngroupDataTable dataTable, System.Nullable<System.DateTime> rundate) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((rundate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((System.DateTime)(rundate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ReportsDataset.isp_sqlsecure_report_checkwellknowngroupDataTable GetData(System.Nullable<System.DateTime> rundate) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((rundate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((System.DateTime)(rundate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = System.DBNull.Value;
            }
            ReportsDataset.isp_sqlsecure_report_checkwellknowngroupDataTable dataTable = new ReportsDataset.isp_sqlsecure_report_checkwellknowngroupDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class isp_sqlsecure_report_sysadmin_administratorTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public isp_sqlsecure_report_sysadmin_administratorTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "isp_sqlsecure_report_sysadmin_administrator";
            tableMapping.ColumnMappings.Add("connectionname", "connectionname");
            tableMapping.ColumnMappings.Add("login", "login");
            tableMapping.ColumnMappings.Add("fixedrole", "fixedrole");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = "Data Source=secureui\\casesensitive;Initial Catalog=SQLsecure;Integrated Security=" +
                "True";
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.isp_sqlsecure_report_sysadmin_administrator";
            this._commandCollection[0].CommandType = System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new System.Data.SqlClient.SqlParameter("@RETURN_VALUE", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.ReturnValue, 10, 0, null, System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ReportsDataset.isp_sqlsecure_report_sysadmin_administratorDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ReportsDataset.isp_sqlsecure_report_sysadmin_administratorDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            ReportsDataset.isp_sqlsecure_report_sysadmin_administratorDataTable dataTable = new ReportsDataset.isp_sqlsecure_report_sysadmin_administratorDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class isp_sqlsecure_report_orphanedloginsTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public isp_sqlsecure_report_orphanedloginsTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "isp_sqlsecure_report_orphanedlogins";
            tableMapping.ColumnMappings.Add("connectionname", "connectionname");
            tableMapping.ColumnMappings.Add("name", "name");
            tableMapping.ColumnMappings.Add("type", "type");
            tableMapping.ColumnMappings.Add("state", "state");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = "Data Source=secureui\\casesensitive;Initial Catalog=SQLsecure;Integrated Security=" +
                "True";
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.isp_sqlsecure_report_orphanedlogins";
            this._commandCollection[0].CommandType = System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new System.Data.SqlClient.SqlParameter("@RETURN_VALUE", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.ReturnValue, 10, 0, null, System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ReportsDataset.isp_sqlsecure_report_orphanedloginsDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ReportsDataset.isp_sqlsecure_report_orphanedloginsDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            ReportsDataset.isp_sqlsecure_report_orphanedloginsDataTable dataTable = new ReportsDataset.isp_sqlsecure_report_orphanedloginsDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class isp_sqlsecure_report_dbuserfixedroleTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public isp_sqlsecure_report_dbuserfixedroleTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "isp_sqlsecure_report_dbuserfixedrole";
            tableMapping.ColumnMappings.Add("connectionname", "connectionname");
            tableMapping.ColumnMappings.Add("databasename", "databasename");
            tableMapping.ColumnMappings.Add("username", "username");
            tableMapping.ColumnMappings.Add("role", "role");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = "Data Source=secureui\\casesensitive;Initial Catalog=SQLsecure;Integrated Security=" +
                "True";
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.isp_sqlsecure_report_dbuserfixedrole";
            this._commandCollection[0].CommandType = System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new System.Data.SqlClient.SqlParameter("@RETURN_VALUE", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.ReturnValue, 10, 0, null, System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ReportsDataset.isp_sqlsecure_report_dbuserfixedroleDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ReportsDataset.isp_sqlsecure_report_dbuserfixedroleDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            ReportsDataset.isp_sqlsecure_report_dbuserfixedroleDataTable dataTable = new ReportsDataset.isp_sqlsecure_report_dbuserfixedroleDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class isp_sqlsecure_report_checkcmdshellTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public isp_sqlsecure_report_checkcmdshellTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "isp_sqlsecure_report_checkcmdshell";
            tableMapping.ColumnMappings.Add("connectionname", "connectionname");
            tableMapping.ColumnMappings.Add("name", "name");
            tableMapping.ColumnMappings.Add("databasename", "databasename");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = "Data Source=secureui\\casesensitive;Initial Catalog=SQLsecure;Integrated Security=" +
                "True";
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.isp_sqlsecure_report_checkcmdshell";
            this._commandCollection[0].CommandType = System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new System.Data.SqlClient.SqlParameter("@RETURN_VALUE", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.ReturnValue, 10, 0, null, System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ReportsDataset.isp_sqlsecure_report_checkcmdshellDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ReportsDataset.isp_sqlsecure_report_checkcmdshellDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            ReportsDataset.isp_sqlsecure_report_checkcmdshellDataTable dataTable = new ReportsDataset.isp_sqlsecure_report_checkcmdshellDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class isp_sqlsecure_report_getuserinfoTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public isp_sqlsecure_report_getuserinfoTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "isp_sqlsecure_report_getuserinfo";
            tableMapping.ColumnMappings.Add("connectionname", "connectionname");
            tableMapping.ColumnMappings.Add("loginname", "loginname");
            tableMapping.ColumnMappings.Add("logintype", "logintype");
            tableMapping.ColumnMappings.Add("databasename", "databasename");
            tableMapping.ColumnMappings.Add("username", "username");
            tableMapping.ColumnMappings.Add("isalias", "isalias");
            tableMapping.ColumnMappings.Add("hasaccess", "hasaccess");
            tableMapping.ColumnMappings.Add("defaultschema", "defaultschema");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = "Data Source=secureui\\casesensitive;Initial Catalog=SQLsecure;Integrated Security=" +
                "True";
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.isp_sqlsecure_report_getuserinfo";
            this._commandCollection[0].CommandType = System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new System.Data.SqlClient.SqlParameter("@RETURN_VALUE", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.ReturnValue, 10, 0, null, System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ReportsDataset.isp_sqlsecure_report_getuserinfoDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ReportsDataset.isp_sqlsecure_report_getuserinfoDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            ReportsDataset.isp_sqlsecure_report_getuserinfoDataTable dataTable = new ReportsDataset.isp_sqlsecure_report_getuserinfoDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class isp_sqlsecure_report_checkdbchainingTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public isp_sqlsecure_report_checkdbchainingTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "isp_sqlsecure_report_checkdbchaining";
            tableMapping.ColumnMappings.Add("connectionname", "connectionname");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = "Data Source=secureui\\casesensitive;Initial Catalog=SQLsecure;Integrated Security=" +
                "True";
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.isp_sqlsecure_report_checkdbchaining";
            this._commandCollection[0].CommandType = System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new System.Data.SqlClient.SqlParameter("@RETURN_VALUE", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.ReturnValue, 10, 0, null, System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new System.Data.SqlClient.SqlParameter("@rundate", System.Data.SqlDbType.DateTime, 8, System.Data.ParameterDirection.Input, 23, 3, null, System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ReportsDataset.isp_sqlsecure_report_checkdbchainingDataTable dataTable, System.Nullable<System.DateTime> rundate) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((rundate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((System.DateTime)(rundate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ReportsDataset.isp_sqlsecure_report_checkdbchainingDataTable GetData(System.Nullable<System.DateTime> rundate) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((rundate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((System.DateTime)(rundate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = System.DBNull.Value;
            }
            ReportsDataset.isp_sqlsecure_report_checkdbchainingDataTable dataTable = new ReportsDataset.isp_sqlsecure_report_checkdbchainingDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class isp_sqlsecure_report_checksystemstoredproceduresTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public isp_sqlsecure_report_checksystemstoredproceduresTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "isp_sqlsecure_report_checksystemstoredprocedures";
            tableMapping.ColumnMappings.Add("connectionname", "connectionname");
            tableMapping.ColumnMappings.Add("databasename", "databasename");
            tableMapping.ColumnMappings.Add("username", "username");
            tableMapping.ColumnMappings.Add("objectname", "objectname");
            tableMapping.ColumnMappings.Add("permission", "permission");
            tableMapping.ColumnMappings.Add("isgrant", "isgrant");
            tableMapping.ColumnMappings.Add("isgrantwith", "isgrantwith");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = "Data Source=secureui\\casesensitive;Initial Catalog=SQLsecure;Integrated Security=" +
                "True";
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.isp_sqlsecure_report_checksystemstoredprocedures";
            this._commandCollection[0].CommandType = System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new System.Data.SqlClient.SqlParameter("@RETURN_VALUE", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.ReturnValue, 10, 0, null, System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ReportsDataset.isp_sqlsecure_report_checksystemstoredproceduresDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ReportsDataset.isp_sqlsecure_report_checksystemstoredproceduresDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            ReportsDataset.isp_sqlsecure_report_checksystemstoredproceduresDataTable dataTable = new ReportsDataset.isp_sqlsecure_report_checksystemstoredproceduresDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class isp_sqlsecure_report_checkxpmailTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public isp_sqlsecure_report_checkxpmailTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "isp_sqlsecure_report_checkxpmail";
            tableMapping.ColumnMappings.Add("connectionname", "connectionname");
            tableMapping.ColumnMappings.Add("name", "name");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = "Data Source=secureui\\casesensitive;Initial Catalog=SQLsecure;Integrated Security=" +
                "True";
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.isp_sqlsecure_report_checkxpmail";
            this._commandCollection[0].CommandType = System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new System.Data.SqlClient.SqlParameter("@RETURN_VALUE", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.ReturnValue, 10, 0, null, System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ReportsDataset.isp_sqlsecure_report_checkxpmailDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ReportsDataset.isp_sqlsecure_report_checkxpmailDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            ReportsDataset.isp_sqlsecure_report_checkxpmailDataTable dataTable = new ReportsDataset.isp_sqlsecure_report_checkxpmailDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class isp_sqlsecure_report_getauditfiltersTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public isp_sqlsecure_report_getauditfiltersTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "isp_sqlsecure_report_getauditfilters";
            tableMapping.ColumnMappings.Add("servername", "servername");
            tableMapping.ColumnMappings.Add("rulename", "rulename");
            tableMapping.ColumnMappings.Add("ruledescription", "ruledescription");
            tableMapping.ColumnMappings.Add("modifiedby", "modifiedby");
            tableMapping.ColumnMappings.Add("modifiedon", "modifiedon");
            tableMapping.ColumnMappings.Add("type", "type");
            tableMapping.ColumnMappings.Add("scope", "scope");
            tableMapping.ColumnMappings.Add("namematchstring", "namematchstring");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = "Data Source=secureui\\casesensitive;Initial Catalog=SQLsecure;Integrated Security=" +
                "True";
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.isp_sqlsecure_report_getauditfilters";
            this._commandCollection[0].CommandType = System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new System.Data.SqlClient.SqlParameter("@RETURN_VALUE", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.ReturnValue, 10, 0, null, System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ReportsDataset.isp_sqlsecure_report_getauditfiltersDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ReportsDataset.isp_sqlsecure_report_getauditfiltersDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            ReportsDataset.isp_sqlsecure_report_getauditfiltersDataTable dataTable = new ReportsDataset.isp_sqlsecure_report_getauditfiltersDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class isp_sqlsecure_report_getuserpermissionsTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public isp_sqlsecure_report_getuserpermissionsTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "isp_sqlsecure_report_getuserpermissions";
            tableMapping.ColumnMappings.Add("connectionname", "connectionname");
            tableMapping.ColumnMappings.Add("loginname", "loginname");
            tableMapping.ColumnMappings.Add("logintype", "logintype");
            tableMapping.ColumnMappings.Add("serveraccess", "serveraccess");
            tableMapping.ColumnMappings.Add("disabled", "disabled");
            tableMapping.ColumnMappings.Add("role", "role");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = "Data Source=secureui\\casesensitive;Initial Catalog=SQLsecure;Integrated Security=" +
                "True";
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.isp_sqlsecure_report_getuserpermissions";
            this._commandCollection[0].CommandType = System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new System.Data.SqlClient.SqlParameter("@RETURN_VALUE", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.ReturnValue, 10, 0, null, System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new System.Data.SqlClient.SqlParameter("@rundate", System.Data.SqlDbType.DateTime, 8, System.Data.ParameterDirection.Input, 23, 3, null, System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new System.Data.SqlClient.SqlParameter("@user", System.Data.SqlDbType.NVarChar, 400, System.Data.ParameterDirection.Input, 0, 0, null, System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new System.Data.SqlClient.SqlParameter("@server", System.Data.SqlDbType.NVarChar, 400, System.Data.ParameterDirection.Input, 0, 0, null, System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new System.Data.SqlClient.SqlParameter("@usertype", System.Data.SqlDbType.NVarChar, 1, System.Data.ParameterDirection.Input, 0, 0, null, System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ReportsDataset.isp_sqlsecure_report_getuserpermissionsDataTable dataTable, System.Nullable<System.DateTime> rundate, string user, string server, string usertype) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((rundate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((System.DateTime)(rundate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = System.DBNull.Value;
            }
            if ((user == null)) {
                this.Adapter.SelectCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(user));
            }
            if ((server == null)) {
                this.Adapter.SelectCommand.Parameters[3].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = ((string)(server));
            }
            if ((usertype == null)) {
                this.Adapter.SelectCommand.Parameters[4].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = ((string)(usertype));
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ReportsDataset.isp_sqlsecure_report_getuserpermissionsDataTable GetData(System.Nullable<System.DateTime> rundate, string user, string server, string usertype) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((rundate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((System.DateTime)(rundate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = System.DBNull.Value;
            }
            if ((user == null)) {
                this.Adapter.SelectCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(user));
            }
            if ((server == null)) {
                this.Adapter.SelectCommand.Parameters[3].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = ((string)(server));
            }
            if ((usertype == null)) {
                this.Adapter.SelectCommand.Parameters[4].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = ((string)(usertype));
            }
            ReportsDataset.isp_sqlsecure_report_getuserpermissionsDataTable dataTable = new ReportsDataset.isp_sqlsecure_report_getuserpermissionsDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class isp_sqlsecure_report_getuserdatabasepermissionsTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public isp_sqlsecure_report_getuserdatabasepermissionsTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "isp_sqlsecure_report_getuserdatabasepermissions";
            tableMapping.ColumnMappings.Add("snapshotid", "snapshotid");
            tableMapping.ColumnMappings.Add("permissionlevel", "permissionlevel");
            tableMapping.ColumnMappings.Add("logintype", "logintype");
            tableMapping.ColumnMappings.Add("loginname", "loginname");
            tableMapping.ColumnMappings.Add("connectionname", "connectionname");
            tableMapping.ColumnMappings.Add("databasename", "databasename");
            tableMapping.ColumnMappings.Add("principalid", "principalid");
            tableMapping.ColumnMappings.Add("principalname", "principalname");
            tableMapping.ColumnMappings.Add("principaltype", "principaltype");
            tableMapping.ColumnMappings.Add("databaseprincipal", "databaseprincipal");
            tableMapping.ColumnMappings.Add("databaseprincipaltype", "databaseprincipaltype");
            tableMapping.ColumnMappings.Add("grantor", "grantor");
            tableMapping.ColumnMappings.Add("grantorname", "grantorname");
            tableMapping.ColumnMappings.Add("grantee", "grantee");
            tableMapping.ColumnMappings.Add("granteename", "granteename");
            tableMapping.ColumnMappings.Add("classid", "classid");
            tableMapping.ColumnMappings.Add("permissiontype", "permissiontype");
            tableMapping.ColumnMappings.Add("coveringfrom", "coveringfrom");
            tableMapping.ColumnMappings.Add("permission", "permission");
            tableMapping.ColumnMappings.Add("isgrant", "isgrant");
            tableMapping.ColumnMappings.Add("isgrantwith", "isgrantwith");
            tableMapping.ColumnMappings.Add("isrevoke", "isrevoke");
            tableMapping.ColumnMappings.Add("isdeny", "isdeny");
            tableMapping.ColumnMappings.Add("parentobjectid", "parentobjectid");
            tableMapping.ColumnMappings.Add("objectid", "objectid");
            tableMapping.ColumnMappings.Add("objectname", "objectname");
            tableMapping.ColumnMappings.Add("qualifiedname", "qualifiedname");
            tableMapping.ColumnMappings.Add("objecttype", "objecttype");
            tableMapping.ColumnMappings.Add("schemaid", "schemaid");
            tableMapping.ColumnMappings.Add("schemaname", "schemaname");
            tableMapping.ColumnMappings.Add("owner", "owner");
            tableMapping.ColumnMappings.Add("ownername", "ownername");
            tableMapping.ColumnMappings.Add("isaliased", "isaliased");
            tableMapping.ColumnMappings.Add("inherited", "inherited");
            tableMapping.ColumnMappings.Add("sourcename", "sourcename");
            tableMapping.ColumnMappings.Add("sourcetype", "sourcetype");
            tableMapping.ColumnMappings.Add("sourcepermission", "sourcepermission");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = "Data Source=secureui\\casesensitive;Initial Catalog=SQLsecure;Integrated Security=" +
                "True";
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.isp_sqlsecure_report_getuserdatabasepermissions";
            this._commandCollection[0].CommandType = System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new System.Data.SqlClient.SqlParameter("@RETURN_VALUE", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.ReturnValue, 10, 0, null, System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new System.Data.SqlClient.SqlParameter("@rundate", System.Data.SqlDbType.DateTime, 8, System.Data.ParameterDirection.Input, 23, 3, null, System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new System.Data.SqlClient.SqlParameter("@user", System.Data.SqlDbType.NVarChar, 400, System.Data.ParameterDirection.Input, 0, 0, null, System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new System.Data.SqlClient.SqlParameter("@server", System.Data.SqlDbType.NVarChar, 400, System.Data.ParameterDirection.Input, 0, 0, null, System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new System.Data.SqlClient.SqlParameter("@permission", System.Data.SqlDbType.NVarChar, 1, System.Data.ParameterDirection.Input, 0, 0, null, System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new System.Data.SqlClient.SqlParameter("@usertype", System.Data.SqlDbType.NVarChar, 1, System.Data.ParameterDirection.Input, 0, 0, null, System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ReportsDataset.isp_sqlsecure_report_getuserdatabasepermissionsDataTable dataTable, System.Nullable<System.DateTime> rundate, string user, string server, string permission, string usertype) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((rundate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((System.DateTime)(rundate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = System.DBNull.Value;
            }
            if ((user == null)) {
                this.Adapter.SelectCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(user));
            }
            if ((server == null)) {
                this.Adapter.SelectCommand.Parameters[3].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = ((string)(server));
            }
            if ((permission == null)) {
                this.Adapter.SelectCommand.Parameters[4].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = ((string)(permission));
            }
            if ((usertype == null)) {
                this.Adapter.SelectCommand.Parameters[5].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[5].Value = ((string)(usertype));
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ReportsDataset.isp_sqlsecure_report_getuserdatabasepermissionsDataTable GetData(System.Nullable<System.DateTime> rundate, string user, string server, string permission, string usertype) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((rundate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((System.DateTime)(rundate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = System.DBNull.Value;
            }
            if ((user == null)) {
                this.Adapter.SelectCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(user));
            }
            if ((server == null)) {
                this.Adapter.SelectCommand.Parameters[3].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = ((string)(server));
            }
            if ((permission == null)) {
                this.Adapter.SelectCommand.Parameters[4].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = ((string)(permission));
            }
            if ((usertype == null)) {
                this.Adapter.SelectCommand.Parameters[5].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[5].Value = ((string)(usertype));
            }
            ReportsDataset.isp_sqlsecure_report_getuserdatabasepermissionsDataTable dataTable = new ReportsDataset.isp_sqlsecure_report_getuserdatabasepermissionsDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
}

#pragma warning restore 1591