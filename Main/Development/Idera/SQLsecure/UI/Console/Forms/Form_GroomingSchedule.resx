<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox_AgentStatus.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        R0lGODlhJQAuAPcAAMbL4yyiRWGbWIHKUaWrycnL1kluP8nnzVmxTmKGW4XLTHV5upCayn3IVkZdpK6z
        12JotXaqdXnGXW69WKy0wf///4a/iKSs2RQYRL29vb/D2mK2UnOAcEusSYSLxoyY1UVKZrfJyW29VxAU
        QKaos3eGr4XOdjKmRqenrOvu+0d1QFKYejqOQ4WGl0OqWJapqIiLuSImS0tpQTyJQra84Whtg8vQ6bG0
        xSAqXmm7VIeml32Dw1+0UFxihNbZ6Z2mzRwjVZuj01mcWNzh805RrRUbSX/AcUZ5QTuPRnevinzIWbS6
        3Iaxf46SyFBWfy2eRWx+aWhkrCYxaL/F5DY7W+vr61SKWtba5KK3wEVMfFpikGS1WlKsV2ttanrHWv3+
        /Zqq42a5U0V+QVFsuD6GQVCCRFF5UsXd22VvpCqeRHl7kEKCQW5xuTSVREKMTH9/ipKYu/X18zOVRDGY
        RNDS49LW7T6OSzFAfJSol3/IU1x6zLm+1ZabrODj7HRyeN3f53bCXTaRQ5Wc0H+DmUSAQTtOkFKvTFZp
        V0GpRzKWQ3J0hXLAWkhzQPn5+Ss5cpinvTeSREFWmuLj59jc8jI6ckxkrnfFXUCFQjWnTbi+3GKC1q6y
        0ubo81dzwk6KVEl6RM7R2ziPQ1iRYiikRWJiamS3UpGTnJmdrXqQehofUqSv4mS3VGq7VUOqSpup22+/
        WCktUklQiyydQzZHhpqn3jCaQ6my3uDl9ebq+HV2i+jo6GWRkYimppeez5fAokGRVVahdyujSUpQfFZZ
        bkeIT4uQsTyUTT+pSDyLQ29xcl16lf38+/Dv7lhiomqIY2WSbWGfc2CDikx/VmSDlX6BgHafj1VXrofL
        XXB3qorNWkmCS4yhtpe7qZGysPr493N3v+/y/Pj39rO41lSBaYahjlRXsZ6zxpah3BceS5+q0ejr+KC1
        rJmaoEx8T0OCRS41XkCHR12xV2WhXpSYpYqOox8lUI6TrSYqWHZ9gH5+hf7+/nPAXcDC0YzOVi6cRGeJ
        4CH5BAEAAP8ALAAAAAAlAC4AAAj/AP8JHEiw4BgpI6iMcNSpoMOHEAVqmlVEEbNwumqMKBSx48MxQKgU
        qLKsgrcrN2DhaOjRY6Eib3QR2BEnzh5rm3z0GBGpJcROOET6WFAOji5de4hA2AGAwD0penwSLDSihqRN
        EKLoYPDnz54IEZR9u5BJWBEHUg/CukFnBwR7ShqwueKDwJYJYaAtpQEjFdSOlaQUqeH124I81/LIpUOn
        yYQJOTbEm8bmgq0sI+5UIlipkGAguUDREfSNzwAFAxQvAACAzeMcpXggALagiSoGsVIVcVSoUtUW/P5o
        CLIDhoJ+ClCn3qFBg+sJrFbJNsRl144P58DsaEYJ4Z8HgjzA/3gxIFvy5ANS98r0YMHj6NM7tHKxooSH
        D/hHjPAh6JURJXmkd15yeeShwxJB9LIPdNIhYEgHiJwwyiiJ/PIBLfqN9kpcDaR3GnoF5iGOIOssCFt8
        EY4SgByQCILhCDYE8YoXcQUoYHqKKcHEI0Ys8kpkKEqYhhxIuKgfADLS2EADNuK4pBJeSGDJKyKEUQoC
        CAhRRhlCtoFEEK7oN8UFRkig5JIFLtkAlFIuAl0YGyAgQDIhoFDGKP54GQQDYl5ggQRmKsHhk2xKAAiV
        cPIgQBdnVFCBnXNAYscPHuh3gZ+AmkmjoF50CiggPsK2waKNVvDFAXYkEogbP2CDQxFB2P/iyyuAWJLp
        rVKC+uaojDp6qgWyEGlFq1JIsYMt3BgxwSK13moJqK+8WQqpvh5gQQC1SCrKD1o4cgcatmBhgQiPvbLI
        ImX4KAKVrFhJranWBvCEHKtW80MWhUQSiypL+JIDK6yIIEIZXZQhAsBW8lrqryekMUcgLBDDyw/3VAIS
        GDRgsUEYYeTgTBchZFBGwor2WoE+1p7wRC1yhIKMJ+bAgUFUI3xAAw1b8LABwSEw04jIPJS8cMoB+JMI
        JCzAIwoBJQAhkBTN0JBJElhuYUQcjv5chjwmo2zBCfJGysIMxOhAgBN3CBQJJbZM0Y0hDm5hQiMVLFNF
        BtQM/fUTT8z/0cbYl3iChVNo/aMHBq5MQUM8HRhiiNx0V1CF3mCv3IbLZLjzjDhwjKDJQECgQcMUSbTS
        wenxmIC1o/BaEEzRfmO+hjYvbNKDIwStbQsA5rRyDCLHHMOFCaz/GkAaRiONDBlriGHFHgTUU7hAeozA
        AAA0AIPJCdyf4ALxv8oiyxz0js08IZ+Qswc9RXxOkCNZLGHDNsFMaD8mJljrD/mQhAL4GuhrhwY2QYW0
        GQQd6bDBFFaQhgam4QmyqIUQ/BYI/82ADJcghBiOcAQ8AIAPM3sIELSwhDo8whhtkEMKWdQ/FoxtBpcA
        4AZVkAAb3AAEUoCIA9DxgzrUIRpICIX//1yIjBlcMIYa5KAKGBGCD2JgDBGRQhY2MQkNjKOIRiQDBgGY
        xCMskRF4qAMFQIC7iIwBA8WYwiQoII01xJCLYtigFxnBCAOgYhL8GMQIotKRO7yDAHUYwinaEUcxfIKD
        c6yjHYdgAxLEgCMe0QQQekCAIdxiHmZQgSa/qEgZoOIWPiABCHCQFgwM4gaWpMAh6GiAVhpABjJAAShP
        kYsisMQnkUAHH25wC1zQAR+wDCYUroCLK8xDDRiYnlTuUA8+kMAH6lBHAahxCA6AIpoFMEUuMNATqRDk
        DjGgBwkKgIsUmNOcnCBBC2qAgVl40yGzwEAuUDBOdYCjDzfIxxuGkTTMdz7EAUUAATtQgAJTkCIZfoBF
        EaDoz4foQQoYGAY7kkEKKmDgDu5rKEQOgoEYZIahPgkIADs=
</value>
  </data>
</root>